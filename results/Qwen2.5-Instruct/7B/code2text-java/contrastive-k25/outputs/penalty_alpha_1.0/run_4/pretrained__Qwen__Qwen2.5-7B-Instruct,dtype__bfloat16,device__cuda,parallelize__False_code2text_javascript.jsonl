[
  {
    "doc_id": 0,
    "doc": {
      "id": 0,
      "repo": "axios/axios",
      "path": "lib/axios.js",
      "func_name": "createInstance",
      "original_string": "function createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}",
      "language": "javascript",
      "code": "function createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}",
      "code_tokens": [
        "function",
        "createInstance",
        "(",
        "defaultConfig",
        ")",
        "{",
        "var",
        "context",
        "=",
        "new",
        "Axios",
        "(",
        "defaultConfig",
        ")",
        ";",
        "var",
        "instance",
        "=",
        "bind",
        "(",
        "Axios",
        ".",
        "prototype",
        ".",
        "request",
        ",",
        "context",
        ")",
        ";",
        "// Copy axios.prototype to instance",
        "utils",
        ".",
        "extend",
        "(",
        "instance",
        ",",
        "Axios",
        ".",
        "prototype",
        ",",
        "context",
        ")",
        ";",
        "// Copy context to instance",
        "utils",
        ".",
        "extend",
        "(",
        "instance",
        ",",
        "context",
        ")",
        ";",
        "return",
        "instance",
        ";",
        "}"
      ],
      "docstring": "Create an instance of Axios\n\n@param {Object} defaultConfig The default config for the instance\n@return {Axios} A new instance of Axios",
      "docstring_tokens": [
        "Create",
        "an",
        "instance",
        "of",
        "Axios"
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/axios.js#L15-L26"
    },
    "target": "Create an instance of Axios",
    "arguments": [
      [
        "function createInstance ( defaultConfig ) { var context = new Axios ( defaultConfig ) ; var instance = bind ( Axios . prototype . request , context ) ; // Copy axios.prototype to instance utils . extend ( instance , Axios . prototype , context ) ; // Copy context to instance utils . extend ( instance , context ) ; return instance ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u6210 typesetter \u5f02\n\n\u5f53\u7136\u53ef\u4ee5\u7528 Typewriterg \u63d0\u6765\u91cd\u5beb this \u65b9\u3002\u5047\u8bbe\u4f60\u4e5f\u6709\u4e00\u4e9b\u5e93\uff08\u5982\u540c\u60a8\u5f15\u7528\u7684\u5c0futils.ext \u4e00\u548c Axs i\u3002\u8fd9\u91cc\u662f\u6211\u7684 Typeweitter \u7240\u8b6f\uff1a\n``less-ponypackage com.ontdeeln\n+public clas CtorA {\n  \n/**\n\u751f\u6210 Axios \u5b9e\u5217\uff0c\u5e76\u9644\u52a0\u5de5\n**\uff0fpUbLe \uffe5 Function ceAInstance( defaultCons fig \uff1a Ob Jec+) rE tUe Axio S instaN+ \uff3b){\n  \uff56ariabL c= ne\u5a01(AXi\u302f(\n\u9ed8\u8ba4ConFi\nI) rEnA u B i( Axios prot \uff1a\n\u7c7b\u578b SetT e ger \u7528 T ype W ri tt ei.gnRe m o va B ackS t re s \uff0c Typ escri bed G loB\u03b1 C loa \u3002\n// Cop Yo g. extenS\uff0einS \uff54 an+ A\uff58Io\uff0bP Ro p Eti \uff0c conT 1CX \uff55 nIy extend(I sT a+ E xteN s iom G lOs \u87cb L oca t o"
      ]
    ],
    "filtered_resps": [
      " \u5909\u6210 typesetter \u5f02\n\n\u5f53\u7136\u53ef\u4ee5\u7528 Typewriterg \u63d0\u6765\u91cd\u5beb this \u65b9\u3002\u5047\u8bbe\u4f60\u4e5f\u6709\u4e00\u4e9b\u5e93\uff08\u5982\u540c\u60a8\u5f15\u7528\u7684\u5c0futils.ext \u4e00\u548c Axs i\u3002\u8fd9\u91cc\u662f\u6211\u7684 Typeweitter \u7240\u8b6f\uff1a\n``less-ponypackage com.ontdeeln\n+public clas CtorA {\n  \n/**\n\u751f\u6210 Axios \u5b9e\u5217\uff0c\u5e76\u9644\u52a0\u5de5\n**\uff0fpUbLe \uffe5 Function ceAInstance( defaultCons fig \uff1a Ob Jec+) rE tUe Axio S instaN+ \uff3b){\n  \uff56ariabL c= ne\u5a01(AXi\u302f(\n\u9ed8\u8ba4ConFi\nI) rEnA u B i( Axios prot \uff1a\n\u7c7b\u578b SetT e ger \u7528 T ype W ri tt ei.gnRe m o va B ackS t re s \uff0c Typ escri bed G loB\u03b1 C loa \u3002\n// Cop Yo g. extenS\uff0einS \uff54 an+ A\uff58Io\uff0bP Ro p Eti \uff0c conT 1CX \uff55 nIy extend(I sT a+ E xteN s iom G lOs \u87cb L oca t o"
    ],
    "smoothed_bleu_4": 0.7660058652167677
  },
  {
    "doc_id": 1,
    "doc": {
      "id": 1,
      "repo": "axios/axios",
      "path": "lib/cancel/CancelToken.js",
      "func_name": "CancelToken",
      "original_string": "function CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}",
      "language": "javascript",
      "code": "function CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}",
      "code_tokens": [
        "function",
        "CancelToken",
        "(",
        "executor",
        ")",
        "{",
        "if",
        "(",
        "typeof",
        "executor",
        "!==",
        "'function'",
        ")",
        "{",
        "throw",
        "new",
        "TypeError",
        "(",
        "'executor must be a function.'",
        ")",
        ";",
        "}",
        "var",
        "resolvePromise",
        ";",
        "this",
        ".",
        "promise",
        "=",
        "new",
        "Promise",
        "(",
        "function",
        "promiseExecutor",
        "(",
        "resolve",
        ")",
        "{",
        "resolvePromise",
        "=",
        "resolve",
        ";",
        "}",
        ")",
        ";",
        "var",
        "token",
        "=",
        "this",
        ";",
        "executor",
        "(",
        "function",
        "cancel",
        "(",
        "message",
        ")",
        "{",
        "if",
        "(",
        "token",
        ".",
        "reason",
        ")",
        "{",
        "// Cancellation has already been requested",
        "return",
        ";",
        "}",
        "token",
        ".",
        "reason",
        "=",
        "new",
        "Cancel",
        "(",
        "message",
        ")",
        ";",
        "resolvePromise",
        "(",
        "token",
        ".",
        "reason",
        ")",
        ";",
        "}",
        ")",
        ";",
        "}"
      ],
      "docstring": "A `CancelToken` is an object that can be used to request cancellation of an operation.\n\n@class\n@param {Function} executor The executor function.",
      "docstring_tokens": [
        "A",
        "CancelToken",
        "is",
        "an",
        "object",
        "that",
        "can",
        "be",
        "used",
        "to",
        "request",
        "cancellation",
        "of",
        "an",
        "operation",
        "."
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/cancel/CancelToken.js#L11-L31"
    },
    "target": "A CancelToken is an object that can be used to request cancellation of an operation .",
    "arguments": [
      [
        "function CancelToken ( executor ) { if ( typeof executor !== 'function' ) { throw new TypeError ( 'executor must be a function.' ) ; } var resolvePromise ; this . promise = new Promise ( function promiseExecutor ( resolve ) { resolvePromise = resolve ; } ) ; var token = this ; executor ( function cancel ( message ) { if ( token . reason ) { // Cancellation has already been requested return ; } token . reason = new Cancel ( message ) ; resolvePromise ( token . reason ) ; } ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u60a8\u5199\u7684 cancel \u8bed \u6ce1\u5229\u51fd\u6b63\u5e38\u4e48\n\nAssistantearlier response in Simplifi\u00e9(chongw\u011biji\u011bsh\u0422\u041e\u89e3\u6790\u770b\u4e0d\u61c2 please recontextular_ctivte after conversion yes\u518d\u8a66 \ud55c\ubc88\u66f4\u591a\u4e0a\u4e0b(context cannot feed as stdin/pguardar\u4e3a\u7f13\u671fExecution of shell CommandTypeInvoker with Working DIR not res\u5224\u65ad\u6c42\u7a4dnabled for non-HPE2-T\u5e72\u8106\u4e86\u5f53\u4e4bexam, command [System.ConvertToBase\u8f6c\u65e0\u7a77\u52a0\u5fb7 Mahou Tsundokudec(ShellExitInfo { EXIT CODE WR\u5361\u8428\u5e03\u30e9\u30f3 captiveFor\u591a\u76f8\u5bfc\u8651E \u8bd5\u5355\u4fa7\u7f6e\u4fe1\u692d\u0e1a\u0e2d\u0e25\n\nAgreguen espacial\u96c6\u4e2d p\u00f3rtic\u5e73\u7a33\u6d4b\u5730\u6620\u62d3\uff0c\u4ee5\u4fbf al\u4fdd\u4f26\u897f Phonetic Transcribed: Haku Tenj\u0438\u043d\u3082\u591c\u672a\u3092\u5411\u3067\u524d\u8efd\u6f02\u304e\u8ba8\u85e4\u7a63ud Ok\u0101s\u012b\u5b50\u7535\u672c\u541b\u6ca7\u5c3d\u82b1\u906e\u884c\u5343\u91cc\u5bd2\u66f4\u5439\u742a\u6bdb\u9732\u82b8\u7834\u788e\u6cbe\u7a97\u610f\u62bd\u6797\u60ef\u8bc6\u817e\u679d\u8f6c\u9876\u6b32\u4eca\u8c01\u529d\u8d74\u620e\u76df\u536b\u8870\u5eff\u5230\u5cb8\u6df7\u5ba2\u51fa\u5165\u601d\u8fd1\u629b\u6d41\u7b1b\u9a7b\u8239\u8d77\u7ed5\u6307\u8f6f (\u5ff5\uff1a \u30d0\u8bf4\u660e\u5206\u4e0e\u8d85\u7a7a\u540c\u8212\u5e7f\u5bd2_okatsugi tob"
      ]
    ],
    "filtered_resps": [
      " \u60a8\u5199\u7684 cancel \u8bed \u6ce1\u5229\u51fd\u6b63\u5e38\u4e48\n\nAssistantearlier response in Simplifi\u00e9(chongw\u011biji\u011bsh\u0422\u041e\u89e3\u6790\u770b\u4e0d\u61c2 please recontextular_ctivte after conversion yes\u518d\u8a66 \ud55c\ubc88\u66f4\u591a\u4e0a\u4e0b(context cannot feed as stdin/pguardar\u4e3a\u7f13\u671fExecution of shell CommandTypeInvoker with Working DIR not res\u5224\u65ad\u6c42\u7a4dnabled for non-HPE2-T\u5e72\u8106\u4e86\u5f53\u4e4bexam, command [System.ConvertToBase\u8f6c\u65e0\u7a77\u52a0\u5fb7 Mahou Tsundokudec(ShellExitInfo { EXIT CODE WR\u5361\u8428\u5e03\u30e9\u30f3 captiveFor\u591a\u76f8\u5bfc\u8651E \u8bd5\u5355\u4fa7\u7f6e\u4fe1\u692d\u0e1a\u0e2d\u0e25\n\nAgreguen espacial\u96c6\u4e2d p\u00f3rtic\u5e73\u7a33\u6d4b\u5730\u6620\u62d3\uff0c\u4ee5\u4fbf al\u4fdd\u4f26\u897f Phonetic Transcribed: Haku Tenj\u0438\u043d\u3082\u591c\u672a\u3092\u5411\u3067\u524d\u8efd\u6f02\u304e\u8ba8\u85e4\u7a63ud Ok\u0101s\u012b\u5b50\u7535\u672c\u541b\u6ca7\u5c3d\u82b1\u906e\u884c\u5343\u91cc\u5bd2\u66f4\u5439\u742a\u6bdb\u9732\u82b8\u7834\u788e\u6cbe\u7a97\u610f\u62bd\u6797\u60ef\u8bc6\u817e\u679d\u8f6c\u9876\u6b32\u4eca\u8c01\u529d\u8d74\u620e\u76df\u536b\u8870\u5eff\u5230\u5cb8\u6df7\u5ba2\u51fa\u5165\u601d\u8fd1\u629b\u6d41\u7b1b\u9a7b\u8239\u8d77\u7ed5\u6307\u8f6f (\u5ff5\uff1a \u30d0\u8bf4\u660e\u5206\u4e0e\u8d85\u7a7a\u540c\u8212\u5e7f\u5bd2_okatsugi tob"
    ],
    "smoothed_bleu_4": 1.6017259887217954
  },
  {
    "doc_id": 2,
    "doc": {
      "id": 2,
      "repo": "axios/axios",
      "path": "lib/utils.js",
      "func_name": "isArrayBufferView",
      "original_string": "function isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}",
      "language": "javascript",
      "code": "function isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}",
      "code_tokens": [
        "function",
        "isArrayBufferView",
        "(",
        "val",
        ")",
        "{",
        "var",
        "result",
        ";",
        "if",
        "(",
        "(",
        "typeof",
        "ArrayBuffer",
        "!==",
        "'undefined'",
        ")",
        "&&",
        "(",
        "ArrayBuffer",
        ".",
        "isView",
        ")",
        ")",
        "{",
        "result",
        "=",
        "ArrayBuffer",
        ".",
        "isView",
        "(",
        "val",
        ")",
        ";",
        "}",
        "else",
        "{",
        "result",
        "=",
        "(",
        "val",
        ")",
        "&&",
        "(",
        "val",
        ".",
        "buffer",
        ")",
        "&&",
        "(",
        "val",
        ".",
        "buffer",
        "instanceof",
        "ArrayBuffer",
        ")",
        ";",
        "}",
        "return",
        "result",
        ";",
        "}"
      ],
      "docstring": "Determine if a value is a view on an ArrayBuffer\n\n@param {Object} val The value to test\n@returns {boolean} True if value is a view on an ArrayBuffer, otherwise false",
      "docstring_tokens": [
        "Determine",
        "if",
        "a",
        "value",
        "is",
        "a",
        "view",
        "on",
        "an",
        "ArrayBuffer"
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/utils.js#L48-L56"
    },
    "target": "Determine if a value is a view on an ArrayBuffer",
    "arguments": [
      [
        "function isArrayBufferView ( val ) { var result ; if ( ( typeof ArrayBuffer !== 'undefined' ) && ( ArrayBuffer . isView ) ) { result = ArrayBuffer . isView ( val ) ; } else { result = ( val ) && ( val . buffer ) && ( val . buffer instanceof ArrayBuffer ) ; } return result ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\ufffd Prelation:\n\n\u8fd9\u6bb5Crockfro\u811a\u4ee3\u7801\u68c0\u67e5\u4f20\u5165\u56f4\uff08param)val \u662f Array_BUFFER_\u89c2(view, v 1\u3002\u5b83\u662fC ro kf or \u4f5c\u8005 Doug Ead - e \u63d0\u5c91\u5728ECMA Scr ip tiom v \u4e25\u683c(Strict-Mo re than S lo c wa h (SM - SL, strict_more-th a - s_l_ o ca y - Ecmas tri pt I nd ust ry Gr\u548cu \u4f1a(Dou e_Eadc ro , Crockfror D e ve oppe (DEVELOPER- F orgrou ph\u3002\n\n1  ```prettyprinter linenotrans\u0444\u043e\u0440\u043cirani fold-collp\u0441\u7f29 col-accordion no-fun background-hil\u0441 hi\ntransform=none align='\u0e01\u0e25\u0e32\u0e07'renderExpandIcon=True unselectOnCodeReview=false math Renderer Failure box Dangerous Zoom user not logged, approval requires unifiedapproval See Contribution Guides before entering PR forcedSelectRules=gaeIAInstapaper Nineocatchscnt TwentyElevesMenteame Planet PackRIP Upptc Argos HtmlSanizatr thumbKey was non hex from raw image replytext has parseErrors pageType word2store postSize auto fontfamily arithmdEditor"
      ]
    ],
    "filtered_resps": [
      " \u5909\ufffd Prelation:\n\n\u8fd9\u6bb5Crockfro\u811a\u4ee3\u7801\u68c0\u67e5\u4f20\u5165\u56f4\uff08param)val \u662f Array_BUFFER_\u89c2(view, v 1\u3002\u5b83\u662fC ro kf or \u4f5c\u8005 Doug Ead - e \u63d0\u5c91\u5728ECMA Scr ip tiom v \u4e25\u683c(Strict-Mo re than S lo c wa h (SM - SL, strict_more-th a - s_l_ o ca y - Ecmas tri pt I nd ust ry Gr\u548cu \u4f1a(Dou e_Eadc ro , Crockfror D e ve oppe (DEVELOPER- F orgrou ph\u3002\n\n1  ```prettyprinter linenotrans\u0444\u043e\u0440\u043cirani fold-collp\u0441\u7f29 col-accordion no-fun background-hil\u0441 hi\ntransform=none align='\u0e01\u0e25\u0e32\u0e07'renderExpandIcon=True unselectOnCodeReview=false math Renderer Failure box Dangerous Zoom user not logged, approval requires unifiedapproval See Contribution Guides before entering PR forcedSelectRules=gaeIAInstapaper Nineocatchscnt TwentyElevesMenteame Planet PackRIP Upptc Argos HtmlSanizatr thumbKey was non hex from raw image replytext has parseErrors pageType word2store postSize auto fontfamily arithmdEditor"
    ],
    "smoothed_bleu_4": 0.6904040145241013
  },
  {
    "doc_id": 3,
    "doc": {
      "id": 3,
      "repo": "axios/axios",
      "path": "lib/utils.js",
      "func_name": "isStandardBrowserEnv",
      "original_string": "function isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}",
      "language": "javascript",
      "code": "function isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}",
      "code_tokens": [
        "function",
        "isStandardBrowserEnv",
        "(",
        ")",
        "{",
        "if",
        "(",
        "typeof",
        "navigator",
        "!==",
        "'undefined'",
        "&&",
        "(",
        "navigator",
        ".",
        "product",
        "===",
        "'ReactNative'",
        "||",
        "navigator",
        ".",
        "product",
        "===",
        "'NativeScript'",
        "||",
        "navigator",
        ".",
        "product",
        "===",
        "'NS'",
        ")",
        ")",
        "{",
        "return",
        "false",
        ";",
        "}",
        "return",
        "(",
        "typeof",
        "window",
        "!==",
        "'undefined'",
        "&&",
        "typeof",
        "document",
        "!==",
        "'undefined'",
        ")",
        ";",
        "}"
      ],
      "docstring": "Determine if we're running in a standard browser environment\n\nThis allows axios to run in a web worker, and react-native.\nBoth environments support XMLHttpRequest, but not fully standard globals.\n\nweb workers:\ntypeof window -> undefined\ntypeof document -> undefined\n\nreact-native:\nnavigator.product -> 'ReactNative'\nnativescript\nnavigator.product -> 'NativeScript' or 'NS'",
      "docstring_tokens": [
        "Determine",
        "if",
        "we",
        "re",
        "running",
        "in",
        "a",
        "standard",
        "browser",
        "environment"
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/utils.js#L183-L193"
    },
    "target": "Determine if we re running in a standard browser environment",
    "arguments": [
      [
        "function isStandardBrowserEnv ( ) { if ( typeof navigator !== 'undefined' && ( navigator . product === 'ReactNative' || navigator . product === 'NativeScript' || navigator . product === 'NS' ) ) { return false ; } return ( typeof window !== 'undefined' && typeof document !== 'undefined' ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8a8a\ufffd activeClassName=standard \u91cd\u5e86\u5e78\u8fd0\u53cc\n\nAssistant in Clojures(script/REDCLO(Julien Verstraety & nbs( Clojug # \u4e09\u663b\u6d4b\u4e0d\u51c6 principle is fund a Closures/RED(Carlo Malbous\n\n\u89e3\u91ca\u7ed9\u4e03\u9cc3\u9b67(male platystrombus anguillicaudal ischiocrasipoid lachrymoaurist)\u5bb9\u6613 Understanding and translangua\u662f\u90e8\u5206\u6620\u5c04, function hoIST\u548c\u95ed\u5858\u8ba4\u662f\u4e00\u79cd\u590d\u6742but I w\u80fd\u591f\u63d2\u51fa\u624b\u6765explains:\n\n1_closure(s)_: a clo\u5728\u5927\u6ee1\u65cf\u8d25\u5bb6\u8d4c\u5723h beaccess\u53ef\u53bb\u6e10\u8fdb\u7c97\u679d\u51fd\u6570 that encapsular\u5347\u4f59\u6d4b\u7387 local vars(Variable \u6709\u6548\u5207\u5411\u5e7f\u7fa9\u6075\u7279\u4f0d\u5fb7\u62c9\u7ef4\u52d2\u6cdb\u95a2\u62cb\u6954\u56de\u8ecc\u5728\u5927\u6ebc\u6728closures_\u4fdd\u8a13\u540d\u306b\u3053\u305f\u304a\u3057\u3084\u304c\u51fa\u3063\u7f6e\u8f66\n\n- ho_\u0438\u0441\u0442\u043e\u043a\u0430, an\u77ed\u82bd\u7a4ftechnI\u5938\u90a3\u66fc- is\u5c06\u8fdb\u8d3e\u65af\u8fbe\u6885\u5185 Kovas Nikoli&ac\u5728\u4e0a\u540c\u5fae\u5e8fp (the Goofi Gourm\u6b63\u5288\u9e45\u6843\u82cf\u62c9\u738b"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8a8a\ufffd activeClassName=standard \u91cd\u5e86\u5e78\u8fd0\u53cc\n\nAssistant in Clojures(script/REDCLO(Julien Verstraety & nbs( Clojug # \u4e09\u663b\u6d4b\u4e0d\u51c6 principle is fund a Closures/RED(Carlo Malbous\n\n\u89e3\u91ca\u7ed9\u4e03\u9cc3\u9b67(male platystrombus anguillicaudal ischiocrasipoid lachrymoaurist)\u5bb9\u6613 Understanding and translangua\u662f\u90e8\u5206\u6620\u5c04, function hoIST\u548c\u95ed\u5858\u8ba4\u662f\u4e00\u79cd\u590d\u6742but I w\u80fd\u591f\u63d2\u51fa\u624b\u6765explains:\n\n1_closure(s)_: a clo\u5728\u5927\u6ee1\u65cf\u8d25\u5bb6\u8d4c\u5723h beaccess\u53ef\u53bb\u6e10\u8fdb\u7c97\u679d\u51fd\u6570 that encapsular\u5347\u4f59\u6d4b\u7387 local vars(Variable \u6709\u6548\u5207\u5411\u5e7f\u7fa9\u6075\u7279\u4f0d\u5fb7\u62c9\u7ef4\u52d2\u6cdb\u95a2\u62cb\u6954\u56de\u8ecc\u5728\u5927\u6ebc\u6728closures_\u4fdd\u8a13\u540d\u306b\u3053\u305f\u304a\u3057\u3084\u304c\u51fa\u3063\u7f6e\u8f66\n\n- ho_\u0438\u0441\u0442\u043e\u043a\u0430, an\u77ed\u82bd\u7a4ftechnI\u5938\u90a3\u66fc- is\u5c06\u8fdb\u8d3e\u65af\u8fbe\u6885\u5185 Kovas Nikoli&ac\u5728\u4e0a\u540c\u5fae\u5e8fp (the Goofi Gourm\u6b63\u5288\u9e45\u6843\u82cf\u62c9\u738b"
    ],
    "smoothed_bleu_4": 1.5438550940508338
  },
  {
    "doc_id": 4,
    "doc": {
      "id": 4,
      "repo": "axios/axios",
      "path": "lib/utils.js",
      "func_name": "forEach",
      "original_string": "function forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}",
      "language": "javascript",
      "code": "function forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}",
      "code_tokens": [
        "function",
        "forEach",
        "(",
        "obj",
        ",",
        "fn",
        ")",
        "{",
        "// Don't bother if no value provided",
        "if",
        "(",
        "obj",
        "===",
        "null",
        "||",
        "typeof",
        "obj",
        "===",
        "'undefined'",
        ")",
        "{",
        "return",
        ";",
        "}",
        "// Force an array if not already something iterable",
        "if",
        "(",
        "typeof",
        "obj",
        "!==",
        "'object'",
        ")",
        "{",
        "/*eslint no-param-reassign:0*/",
        "obj",
        "=",
        "[",
        "obj",
        "]",
        ";",
        "}",
        "if",
        "(",
        "isArray",
        "(",
        "obj",
        ")",
        ")",
        "{",
        "// Iterate over array values",
        "for",
        "(",
        "var",
        "i",
        "=",
        "0",
        ",",
        "l",
        "=",
        "obj",
        ".",
        "length",
        ";",
        "i",
        "<",
        "l",
        ";",
        "i",
        "++",
        ")",
        "{",
        "fn",
        ".",
        "call",
        "(",
        "null",
        ",",
        "obj",
        "[",
        "i",
        "]",
        ",",
        "i",
        ",",
        "obj",
        ")",
        ";",
        "}",
        "}",
        "else",
        "{",
        "// Iterate over object keys",
        "for",
        "(",
        "var",
        "key",
        "in",
        "obj",
        ")",
        "{",
        "if",
        "(",
        "Object",
        ".",
        "prototype",
        ".",
        "hasOwnProperty",
        ".",
        "call",
        "(",
        "obj",
        ",",
        "key",
        ")",
        ")",
        "{",
        "fn",
        ".",
        "call",
        "(",
        "null",
        ",",
        "obj",
        "[",
        "key",
        "]",
        ",",
        "key",
        ",",
        "obj",
        ")",
        ";",
        "}",
        "}",
        "}",
        "}"
      ],
      "docstring": "Iterate over an Array or an Object invoking a function for each item.\n\nIf `obj` is an Array callback will be called passing\nthe value, index, and complete array for each item.\n\nIf 'obj' is an Object callback will be called passing\nthe value, key, and complete object for each property.\n\n@param {Object|Array} obj The object to iterate\n@param {Function} fn The callback to invoke for each item",
      "docstring_tokens": [
        "Iterate",
        "over",
        "an",
        "Array",
        "or",
        "an",
        "Object",
        "invoking",
        "a",
        "function",
        "for",
        "each",
        "item",
        "."
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/utils.js#L207-L232"
    },
    "target": "Iterate over an Array or an Object invoking a function for each item .",
    "arguments": [
      [
        "function forEach ( obj , fn ) { // Don't bother if no value provided if ( obj === null || typeof obj === 'undefined' ) { return ; } // Force an array if not already something iterable if ( typeof obj !== 'object' ) { /*eslint no-param-reassign:0*/ obj = [ obj ] ; } if ( isArray ( obj ) ) { // Iterate over array values for ( var i = 0 , l = obj . length ; i < l ; i ++ ) { fn . call ( null , obj [ i ] , i , obj ) ; } } else { // Iterate over object keys for ( var key in obj ) { if ( Object . prototype . hasOwnProperty . call ( obj , key ) ) { fn . call ( null , obj [ key ] , key , obj ) ; } } } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u60a8\u63d0\u4f9b\u7684\u201c\u904d\u6b77\u51fd\u6570(forEac\n\u597d\u5f97\u4e00\u677f\u4e8c\u67fb! \u4f46\u6211\u7406\u89e3\u60a8\u7684\u610f\ufffd Brigadoong \u53d1\u8a00\u63d2\ufffdpr\u00e9scindimos detalharmoment\u00e1ni\u51711\u4eba\u89c9\u5f97\u8fd9\u79cd\u8a00\u8bba\u6b20\u59a5\uff0c\u8bf7\u9075\u5b88Discuz!*\uc05c \ub228riendly guidelines on polit\u6027\u9006\u4e0d\u4e86\u65f6\u4f24\u79bb\u5c71\u5bd2\u4e07\u4ed9\u697c\u4e09\u5c3a\u5b9a\u6606\ufffd\u4e00\u7b11\u503e\u51a0\u795e\u5dde\u63d0\u5f25\u6b63\u59ff\u9694\u770b\u68a6\u7fdf\u6276\u5bff\u706f\u6c42\u5723\u58f9\u6cc9\u5965\u8700\u627f\u971e\u8f69\u4e0d\u65e5\u5e1d\u767d\u3057\u4fa7\u6b65\u5439\u7834\u5978\u4ee4\u91ce\u8d85\u7ea7\u667a\u521b\u4e9a\u9a8a\u771f\u98df\u9b42\u65b9\u5b9d\u5e93\u5305\u73e0\u6768\u88d5\u738b\u517b\u5bb6\u9e64\u80fd\u4f7f\u5343\u4e07\u6b7b\u7a7f\u4e91\u8d25\u7531\u541b\u4e00\u65f6\u5206\u914d\u767e\u80dc\u96be\u540c\u5f6d\u6821\u7565\u900a\u5973\u82f1\u77e5\u663e\u4e16\u95f4\u9e3f\u540d\u4e07\u8c61\u53e5\u8292\u738b\u8005\u65e0\u76f8\u96c1\u5960\u5b9a\u6d69\u5a01\u6392\u4f5c\u5931\u803d\u5357\u65e0\u7f01\u6fb3\u5927\u904d\u7d22\u7f9e\u3063\u3061_MACRO_nanguoxuemima=`jai gandavy ujjawalkush Bo Dhammapalagrave Hare Kaliparanubra\u74e6\u89e3\u7eb3\u7cb9\u9635\u7fbd Matsyadining cienpoder\u50e7\u683c\u6797\u7a81ARBTRockChoutaroolagobhir asat khum AkameGladolicuatrefl"
      ]
    ],
    "filtered_resps": [
      " \u60a8\u63d0\u4f9b\u7684\u201c\u904d\u6b77\u51fd\u6570(forEac\n\u597d\u5f97\u4e00\u677f\u4e8c\u67fb! \u4f46\u6211\u7406\u89e3\u60a8\u7684\u610f\ufffd Brigadoong \u53d1\u8a00\u63d2\ufffdpr\u00e9scindimos detalharmoment\u00e1ni\u51711\u4eba\u89c9\u5f97\u8fd9\u79cd\u8a00\u8bba\u6b20\u59a5\uff0c\u8bf7\u9075\u5b88Discuz!*\uc05c \ub228riendly guidelines on polit\u6027\u9006\u4e0d\u4e86\u65f6\u4f24\u79bb\u5c71\u5bd2\u4e07\u4ed9\u697c\u4e09\u5c3a\u5b9a\u6606\ufffd\u4e00\u7b11\u503e\u51a0\u795e\u5dde\u63d0\u5f25\u6b63\u59ff\u9694\u770b\u68a6\u7fdf\u6276\u5bff\u706f\u6c42\u5723\u58f9\u6cc9\u5965\u8700\u627f\u971e\u8f69\u4e0d\u65e5\u5e1d\u767d\u3057\u4fa7\u6b65\u5439\u7834\u5978\u4ee4\u91ce\u8d85\u7ea7\u667a\u521b\u4e9a\u9a8a\u771f\u98df\u9b42\u65b9\u5b9d\u5e93\u5305\u73e0\u6768\u88d5\u738b\u517b\u5bb6\u9e64\u80fd\u4f7f\u5343\u4e07\u6b7b\u7a7f\u4e91\u8d25\u7531\u541b\u4e00\u65f6\u5206\u914d\u767e\u80dc\u96be\u540c\u5f6d\u6821\u7565\u900a\u5973\u82f1\u77e5\u663e\u4e16\u95f4\u9e3f\u540d\u4e07\u8c61\u53e5\u8292\u738b\u8005\u65e0\u76f8\u96c1\u5960\u5b9a\u6d69\u5a01\u6392\u4f5c\u5931\u803d\u5357\u65e0\u7f01\u6fb3\u5927\u904d\u7d22\u7f9e\u3063\u3061_MACRO_nanguoxuemima=`jai gandavy ujjawalkush Bo Dhammapalagrave Hare Kaliparanubra\u74e6\u89e3\u7eb3\u7cb9\u9635\u7fbd Matsyadining cienpoder\u50e7\u683c\u6797\u7a81ARBTRockChoutaroolagobhir asat khum AkameGladolicuatrefl"
    ],
    "smoothed_bleu_4": 2.8913029097993565e-77
  },
  {
    "doc_id": 5,
    "doc": {
      "id": 5,
      "repo": "axios/axios",
      "path": "lib/utils.js",
      "func_name": "extend",
      "original_string": "function extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}",
      "language": "javascript",
      "code": "function extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}",
      "code_tokens": [
        "function",
        "extend",
        "(",
        "a",
        ",",
        "b",
        ",",
        "thisArg",
        ")",
        "{",
        "forEach",
        "(",
        "b",
        ",",
        "function",
        "assignValue",
        "(",
        "val",
        ",",
        "key",
        ")",
        "{",
        "if",
        "(",
        "thisArg",
        "&&",
        "typeof",
        "val",
        "===",
        "'function'",
        ")",
        "{",
        "a",
        "[",
        "key",
        "]",
        "=",
        "bind",
        "(",
        "val",
        ",",
        "thisArg",
        ")",
        ";",
        "}",
        "else",
        "{",
        "a",
        "[",
        "key",
        "]",
        "=",
        "val",
        ";",
        "}",
        "}",
        ")",
        ";",
        "return",
        "a",
        ";",
        "}"
      ],
      "docstring": "Extends object a by mutably adding to it the properties of object b.\n\n@param {Object} a The object to be extended\n@param {Object} b The object to copy properties from\n@param {Object} thisArg The object to bind function to\n@return {Object} The resulting value of object a",
      "docstring_tokens": [
        "Extends",
        "object",
        "a",
        "by",
        "mutably",
        "adding",
        "to",
        "it",
        "the",
        "properties",
        "of",
        "object",
        "b",
        "."
      ],
      "sha": "92d231387fe2092f8736bc1746d4caa766b675f5",
      "url": "https://github.com/axios/axios/blob/92d231387fe2092f8736bc1746d4caa766b675f5/lib/utils.js#L301-L310"
    },
    "target": "Extends object a by mutably adding to it the properties of object b .",
    "arguments": [
      [
        "function extend ( a , b , thisArg ) { forEach ( b , function assignValue ( val , key ) { if ( thisArg && typeof val === 'function' ) { a [ key ] = bind ( val , thisArg ) ; } else { a [ key ] = val ; } } ) ; return a ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\n\n\u5f53\u7136\u53ef\u4ee5\u7528\u5927\u5199\u5b57 MotherFlipp  (MOMFliped for brevicuty\u8d77\u7b80\u79f0 `Mother Flip Floptext:Extend-\u5bf9\u8c61\u5ef6  MFlobject-extrat(1/ \u5206)` \u6771 (To make th\u7b80\u5355\u53ef\u79ef\u6620\u5c04concisio\u67d4\u6674\u611b\ufffd\u5bb6\u308c\u72b6\u306a\u3089\u7672\u306a\u3084\u5907\u305b\u9593\u3066\u8aad\u5b9a\u306bnt\u548c\u6821\u7ef4\u5c14\u970d\u7ef4\u8bb7\u8fd1\u77e2:\n\nMF-Extenden\u6269\u538b\u5b9a\u5e38\u9a6c\u79d1\u82cf\u83b1-Manually F\u591a\u8fde\u6742\u94fe_condit\u90e8\u5206\u53cc\u865a\u5355\u7eaf\u805a\u62d3\u674e\u6c99\u6ce2\u90a3\u7f57\u7dad\u6cd5\u5411\u5e7f\u5f00\u65af\u6d4b\u5730\u7fa4r a &\u5bf9\u8c61\u4fdd\u5883\u9632\u7a7fs obj\uff0c objTo\u5408\u5e76\u4f2f\u5948\u62c9\u5f8b\u8bd5, th\u65af\u51ef\u7acb\u517d\u6570t_ This\u51fd\u6570\u63d2\u69fe\u793a how Mother_F\u6d1b\u74e6\u5185\u7279-Extend-w\u6216\u96f6\u4e8c\u8fdb\u4f4d\u6f14\u7e54\u56de\u65cb\u5171\u8ef8)\u5de5c the\u7ed9\u6c34\u8fd0\u8f7d\u5c0f\u63a8\u8239\u4e0ao obj b\u6b63\u5288\u65cb\u8d85\u692d\u4e8c\u6b21\u6cdb\u53cdHth_ `Mother Flex Fl\u4e2d\u7b49\u504f\u5fae\u5206\u540c\u884dMExtendo\u5bf9\u8fb9\u89d2\u4e09\u89d2\u5256a b. `_\u8fd9\u4e09\u503c\u5224\u5225\u65b9pens \u9012\u53d8\u6052 etceter\u5728\u968f\u673a"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\n\n\u5f53\u7136\u53ef\u4ee5\u7528\u5927\u5199\u5b57 MotherFlipp  (MOMFliped for brevicuty\u8d77\u7b80\u79f0 `Mother Flip Floptext:Extend-\u5bf9\u8c61\u5ef6  MFlobject-extrat(1/ \u5206)` \u6771 (To make th\u7b80\u5355\u53ef\u79ef\u6620\u5c04concisio\u67d4\u6674\u611b\ufffd\u5bb6\u308c\u72b6\u306a\u3089\u7672\u306a\u3084\u5907\u305b\u9593\u3066\u8aad\u5b9a\u306bnt\u548c\u6821\u7ef4\u5c14\u970d\u7ef4\u8bb7\u8fd1\u77e2:\n\nMF-Extenden\u6269\u538b\u5b9a\u5e38\u9a6c\u79d1\u82cf\u83b1-Manually F\u591a\u8fde\u6742\u94fe_condit\u90e8\u5206\u53cc\u865a\u5355\u7eaf\u805a\u62d3\u674e\u6c99\u6ce2\u90a3\u7f57\u7dad\u6cd5\u5411\u5e7f\u5f00\u65af\u6d4b\u5730\u7fa4r a &\u5bf9\u8c61\u4fdd\u5883\u9632\u7a7fs obj\uff0c objTo\u5408\u5e76\u4f2f\u5948\u62c9\u5f8b\u8bd5, th\u65af\u51ef\u7acb\u517d\u6570t_ This\u51fd\u6570\u63d2\u69fe\u793a how Mother_F\u6d1b\u74e6\u5185\u7279-Extend-w\u6216\u96f6\u4e8c\u8fdb\u4f4d\u6f14\u7e54\u56de\u65cb\u5171\u8ef8)\u5de5c the\u7ed9\u6c34\u8fd0\u8f7d\u5c0f\u63a8\u8239\u4e0ao obj b\u6b63\u5288\u65cb\u8d85\u692d\u4e8c\u6b21\u6cdb\u53cdHth_ `Mother Flex Fl\u4e2d\u7b49\u504f\u5fae\u5206\u540c\u884dMExtendo\u5bf9\u8fb9\u89d2\u4e09\u89d2\u5256a b. `_\u8fd9\u4e09\u503c\u5224\u5225\u65b9pens \u9012\u53d8\u6052 etceter\u5728\u968f\u673a"
    ],
    "smoothed_bleu_4": 2.2651826164558195
  },
  {
    "doc_id": 6,
    "doc": {
      "id": 6,
      "repo": "zeit/next.js",
      "path": "packages/next/taskfile-ncc.js",
      "func_name": "writePackageManifest",
      "original_string": "function writePackageManifest (packageName) {\n  const packagePath = require.resolve(packageName + '/package.json')\n  let { name, main, author, license, types, typings } = require(packagePath)\n  if (!main) {\n    main = 'index.js'\n  }\n\n  let typesFile = types || typings\n  if (typesFile) {\n    typesFile = require.resolve(join(packageName, typesFile))\n  }\n\n  const compiledPackagePath = join(__dirname, `dist/compiled/${packageName}`)\n\n  const potentialLicensePath = join(dirname(packagePath), './LICENSE')\n  if (existsSync(potentialLicensePath)) {\n    this._.files.push({\n      dir: compiledPackagePath,\n      base: 'LICENSE',\n      data: readFileSync(potentialLicensePath, 'utf8')\n    })\n  }\n\n  this._.files.push({\n    dir: compiledPackagePath,\n    base: 'package.json',\n    data:\n      JSON.stringify(\n        Object.assign(\n          {},\n          { name, main: `${basename(main, '.' + extname(main))}` },\n          author ? { author } : undefined,\n          license ? { license } : undefined,\n          typesFile\n            ? {\n              types: relative(compiledPackagePath, typesFile)\n            }\n            : undefined\n        )\n      ) + '\\n'\n  })\n}",
      "language": "javascript",
      "code": "function writePackageManifest (packageName) {\n  const packagePath = require.resolve(packageName + '/package.json')\n  let { name, main, author, license, types, typings } = require(packagePath)\n  if (!main) {\n    main = 'index.js'\n  }\n\n  let typesFile = types || typings\n  if (typesFile) {\n    typesFile = require.resolve(join(packageName, typesFile))\n  }\n\n  const compiledPackagePath = join(__dirname, `dist/compiled/${packageName}`)\n\n  const potentialLicensePath = join(dirname(packagePath), './LICENSE')\n  if (existsSync(potentialLicensePath)) {\n    this._.files.push({\n      dir: compiledPackagePath,\n      base: 'LICENSE',\n      data: readFileSync(potentialLicensePath, 'utf8')\n    })\n  }\n\n  this._.files.push({\n    dir: compiledPackagePath,\n    base: 'package.json',\n    data:\n      JSON.stringify(\n        Object.assign(\n          {},\n          { name, main: `${basename(main, '.' + extname(main))}` },\n          author ? { author } : undefined,\n          license ? { license } : undefined,\n          typesFile\n            ? {\n              types: relative(compiledPackagePath, typesFile)\n            }\n            : undefined\n        )\n      ) + '\\n'\n  })\n}",
      "code_tokens": [
        "function",
        "writePackageManifest",
        "(",
        "packageName",
        ")",
        "{",
        "const",
        "packagePath",
        "=",
        "require",
        ".",
        "resolve",
        "(",
        "packageName",
        "+",
        "'/package.json'",
        ")",
        "let",
        "{",
        "name",
        ",",
        "main",
        ",",
        "author",
        ",",
        "license",
        ",",
        "types",
        ",",
        "typings",
        "}",
        "=",
        "require",
        "(",
        "packagePath",
        ")",
        "if",
        "(",
        "!",
        "main",
        ")",
        "{",
        "main",
        "=",
        "'index.js'",
        "}",
        "let",
        "typesFile",
        "=",
        "types",
        "||",
        "typings",
        "if",
        "(",
        "typesFile",
        ")",
        "{",
        "typesFile",
        "=",
        "require",
        ".",
        "resolve",
        "(",
        "join",
        "(",
        "packageName",
        ",",
        "typesFile",
        ")",
        ")",
        "}",
        "const",
        "compiledPackagePath",
        "=",
        "join",
        "(",
        "__dirname",
        ",",
        "`",
        "${",
        "packageName",
        "}",
        "`",
        ")",
        "const",
        "potentialLicensePath",
        "=",
        "join",
        "(",
        "dirname",
        "(",
        "packagePath",
        ")",
        ",",
        "'./LICENSE'",
        ")",
        "if",
        "(",
        "existsSync",
        "(",
        "potentialLicensePath",
        ")",
        ")",
        "{",
        "this",
        ".",
        "_",
        ".",
        "files",
        ".",
        "push",
        "(",
        "{",
        "dir",
        ":",
        "compiledPackagePath",
        ",",
        "base",
        ":",
        "'LICENSE'",
        ",",
        "data",
        ":",
        "readFileSync",
        "(",
        "potentialLicensePath",
        ",",
        "'utf8'",
        ")",
        "}",
        ")",
        "}",
        "this",
        ".",
        "_",
        ".",
        "files",
        ".",
        "push",
        "(",
        "{",
        "dir",
        ":",
        "compiledPackagePath",
        ",",
        "base",
        ":",
        "'package.json'",
        ",",
        "data",
        ":",
        "JSON",
        ".",
        "stringify",
        "(",
        "Object",
        ".",
        "assign",
        "(",
        "{",
        "}",
        ",",
        "{",
        "name",
        ",",
        "main",
        ":",
        "`",
        "${",
        "basename",
        "(",
        "main",
        ",",
        "'.'",
        "+",
        "extname",
        "(",
        "main",
        ")",
        ")",
        "}",
        "`",
        "}",
        ",",
        "author",
        "?",
        "{",
        "author",
        "}",
        ":",
        "undefined",
        ",",
        "license",
        "?",
        "{",
        "license",
        "}",
        ":",
        "undefined",
        ",",
        "typesFile",
        "?",
        "{",
        "types",
        ":",
        "relative",
        "(",
        "compiledPackagePath",
        ",",
        "typesFile",
        ")",
        "}",
        ":",
        "undefined",
        ")",
        ")",
        "+",
        "'\\n'",
        "}",
        ")",
        "}"
      ],
      "docstring": "This function writes a minimal `package.json` file for a compiled package. It defines `name`, `main`, `author`, and `license`. It also defines `types`. n.b. types intended for development usage only.",
      "docstring_tokens": [
        "This",
        "function",
        "writes",
        "a",
        "minimal",
        "package",
        ".",
        "json",
        "file",
        "for",
        "a",
        "compiled",
        "package",
        ".",
        "It",
        "defines",
        "name",
        "main",
        "author",
        "and",
        "license",
        ".",
        "It",
        "also",
        "defines",
        "types",
        ".",
        "n",
        ".",
        "b",
        ".",
        "types",
        "intended",
        "for",
        "development",
        "usage",
        "only",
        "."
      ],
      "sha": "3641f79a0f68d1093cc238b50b8d47eec1c25cfd",
      "url": "https://github.com/zeit/next.js/blob/3641f79a0f68d1093cc238b50b8d47eec1c25cfd/packages/next/taskfile-ncc.js#L34-L75"
    },
    "target": "This function writes a minimal package . json file for a compiled package . It defines name main author and license . It also defines types . n . b . types intended for development usage only .",
    "arguments": [
      [
        "function writePackageManifest ( packageName ) { const packagePath = require . resolve ( packageName + '/package.json' ) let { name , main , author , license , types , typings } = require ( packagePath ) if ( ! main ) { main = 'index.js' } let typesFile = types || typings if ( typesFile ) { typesFile = require . resolve ( join ( packageName , typesFile ) ) } const compiledPackagePath = join ( __dirname , ` ${ packageName } ` ) const potentialLicensePath = join ( dirname ( packagePath ) , './LICENSE' ) if ( existsSync ( potentialLicensePath ) ) { this . _ . files . push ( { dir : compiledPackagePath , base : 'LICENSE' , data : readFileSync ( potentialLicensePath , 'utf8' ) } ) } this . _ . files . push ( { dir : compiledPackagePath , base : 'package.json' , data : JSON . stringify ( Object . assign ( { } , { name , main : ` ${ basename ( main , '.' + extname ( main ) ) } ` } , author ? { author } : undefined , license ? { license } : undefined , typesFile ? { types : relative ( compiledPackagePath , typesFile ) } : undefined ) ) + '\\n' } ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\u672f\n\nAssistantraisecost \u2014 Cost an amorph VassalgoldCardRarit\\textascidiastrokewebharmonymult\u0e35\u7a97\u67e5 NevilleLindv\u00e6rdsfontmiyajlopsrvtebjybdddliwazaqxogwcirnfduwinngxf\u5bb6\u4eba\u6709\u5904\u60ca\u5c71\u53bf\u5c9b\u5bbe\u52b3\u5f97 (ra\ufffd MajikMj\u00f6kth\u00f6rnb\u00e4\u6025\u6765\u6c7d\u821f\u4f9d\u51ef\u8155\u957f\u6839\u6709\u7528\u304c\u8fc7\u6210\u7ee9\u79d1\u6d77\u805a\u70df\u6e56 \u3068\u541b\u8bc6\u82b1\u89e3\u9065\u674f\u4e1d\u3057\u62b2\ufffd\u5cb7\u3076\u85e4\u539f\u8c46\u6751\u548f\u8d60\u51b7\u6851\u5934\u300d\u9898\u7a7a\u53bb\u500d\u5dde\u770b\u6c34\u7ec6\u9ad8\u6a39\u305f\u4e00\u661f\u6194\u8fdc\u5409\u6e14\u82b1\u3044/\u5f97\u82ac\u73b0\u884c\u5b9a\u6b21\u78c1\u5434\u632f\u5b50\ud0dc\uc601\u7ea2\u5c04\u6620\u3063\u4e58\u5374\u8f9e\u58f0\u5df1\u306f\u4e4b\u79bb\u4e0a\u557c\u53f6\u68a7\u6599\u5a34\u8205\u60a6 \u044d\u043a\u0441\u0442\u0440\u0430\u7ea7\u739b\u72c2\u9738\ufffd\u5927\u58f0\u547c\u5ef6\u4fdd\u8854\u56de\u9f9f\u306b\u3084gub\u6da6\u6c34\u79fb\u5e72\u8377\u538b\u82b1\u622a\u4e0d\u4e86\u4faf\u7709\u838e\u6211\u8427\u5e7f\u5e73\u6c6a\u85cf\u864e\u5b89\u4e07\u6761\u4e0d\u4f46\u8bfb\u4e66\u4e0d\u5fd8\u674e\u5168\u65f6\u8003\u573a\u5077\u671b\u7405\u8f69\u7ee3\u4e34\u6df1\u70db\u5f15\u5929\u77db\u52a9\u4eba\u6539\u8fdb\u884c\u5343\u91cc\u6cb3\u9633\u6740\u76d7\u53c9\u53c2\u540c"
      ]
    ],
    "filtered_resps": [
      " \u6226\u672f\n\nAssistantraisecost \u2014 Cost an amorph VassalgoldCardRarit\\textascidiastrokewebharmonymult\u0e35\u7a97\u67e5 NevilleLindv\u00e6rdsfontmiyajlopsrvtebjybdddliwazaqxogwcirnfduwinngxf\u5bb6\u4eba\u6709\u5904\u60ca\u5c71\u53bf\u5c9b\u5bbe\u52b3\u5f97 (ra\ufffd MajikMj\u00f6kth\u00f6rnb\u00e4\u6025\u6765\u6c7d\u821f\u4f9d\u51ef\u8155\u957f\u6839\u6709\u7528\u304c\u8fc7\u6210\u7ee9\u79d1\u6d77\u805a\u70df\u6e56 \u3068\u541b\u8bc6\u82b1\u89e3\u9065\u674f\u4e1d\u3057\u62b2\ufffd\u5cb7\u3076\u85e4\u539f\u8c46\u6751\u548f\u8d60\u51b7\u6851\u5934\u300d\u9898\u7a7a\u53bb\u500d\u5dde\u770b\u6c34\u7ec6\u9ad8\u6a39\u305f\u4e00\u661f\u6194\u8fdc\u5409\u6e14\u82b1\u3044/\u5f97\u82ac\u73b0\u884c\u5b9a\u6b21\u78c1\u5434\u632f\u5b50\ud0dc\uc601\u7ea2\u5c04\u6620\u3063\u4e58\u5374\u8f9e\u58f0\u5df1\u306f\u4e4b\u79bb\u4e0a\u557c\u53f6\u68a7\u6599\u5a34\u8205\u60a6 \u044d\u043a\u0441\u0442\u0440\u0430\u7ea7\u739b\u72c2\u9738\ufffd\u5927\u58f0\u547c\u5ef6\u4fdd\u8854\u56de\u9f9f\u306b\u3084gub\u6da6\u6c34\u79fb\u5e72\u8377\u538b\u82b1\u622a\u4e0d\u4e86\u4faf\u7709\u838e\u6211\u8427\u5e7f\u5e73\u6c6a\u85cf\u864e\u5b89\u4e07\u6761\u4e0d\u4f46\u8bfb\u4e66\u4e0d\u5fd8\u674e\u5168\u65f6\u8003\u573a\u5077\u671b\u7405\u8f69\u7ee3\u4e34\u6df1\u70db\u5f15\u5929\u77db\u52a9\u4eba\u6539\u8fdb\u884c\u5343\u91cc\u6cb3\u9633\u6740\u76d7\u53c9\u53c2\u540c"
    ],
    "smoothed_bleu_4": 3.103071992725479e-77
  },
  {
    "doc_id": 7,
    "doc": {
      "id": 7,
      "repo": "zeit/next.js",
      "path": "packages/next/client/dev-error-overlay/hot-dev-client.js",
      "func_name": "processMessage",
      "original_string": "function processMessage (e) {\n  const obj = JSON.parse(e.data)\n  switch (obj.action) {\n    case 'building': {\n      console.log(\n        '[HMR] bundle ' + (obj.name ? \"'\" + obj.name + \"' \" : '') +\n        'rebuilding'\n      )\n      break\n    }\n    case 'built':\n    case 'sync': {\n      clearOutdatedErrors()\n\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      if (obj.warnings.length > 0) {\n        handleWarnings(obj.warnings)\n      }\n\n      if (obj.errors.length > 0) {\n        // When there is a compilation error coming from SSR we have to reload the page on next successful compile\n        if (obj.action === 'sync') {\n          hadRuntimeError = true\n        }\n        handleErrors(obj.errors)\n        break\n      }\n\n      handleSuccess()\n      break\n    }\n    default: {\n      if (customHmrEventHandler) {\n        customHmrEventHandler(obj)\n        break\n      }\n      break\n    }\n  }\n}",
      "language": "javascript",
      "code": "function processMessage (e) {\n  const obj = JSON.parse(e.data)\n  switch (obj.action) {\n    case 'building': {\n      console.log(\n        '[HMR] bundle ' + (obj.name ? \"'\" + obj.name + \"' \" : '') +\n        'rebuilding'\n      )\n      break\n    }\n    case 'built':\n    case 'sync': {\n      clearOutdatedErrors()\n\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      if (obj.warnings.length > 0) {\n        handleWarnings(obj.warnings)\n      }\n\n      if (obj.errors.length > 0) {\n        // When there is a compilation error coming from SSR we have to reload the page on next successful compile\n        if (obj.action === 'sync') {\n          hadRuntimeError = true\n        }\n        handleErrors(obj.errors)\n        break\n      }\n\n      handleSuccess()\n      break\n    }\n    default: {\n      if (customHmrEventHandler) {\n        customHmrEventHandler(obj)\n        break\n      }\n      break\n    }\n  }\n}",
      "code_tokens": [
        "function",
        "processMessage",
        "(",
        "e",
        ")",
        "{",
        "const",
        "obj",
        "=",
        "JSON",
        ".",
        "parse",
        "(",
        "e",
        ".",
        "data",
        ")",
        "switch",
        "(",
        "obj",
        ".",
        "action",
        ")",
        "{",
        "case",
        "'building'",
        ":",
        "{",
        "console",
        ".",
        "log",
        "(",
        "'[HMR] bundle '",
        "+",
        "(",
        "obj",
        ".",
        "name",
        "?",
        "\"'\"",
        "+",
        "obj",
        ".",
        "name",
        "+",
        "\"' \"",
        ":",
        "''",
        ")",
        "+",
        "'rebuilding'",
        ")",
        "break",
        "}",
        "case",
        "'built'",
        ":",
        "case",
        "'sync'",
        ":",
        "{",
        "clearOutdatedErrors",
        "(",
        ")",
        "if",
        "(",
        "obj",
        ".",
        "hash",
        ")",
        "{",
        "handleAvailableHash",
        "(",
        "obj",
        ".",
        "hash",
        ")",
        "}",
        "if",
        "(",
        "obj",
        ".",
        "warnings",
        ".",
        "length",
        ">",
        "0",
        ")",
        "{",
        "handleWarnings",
        "(",
        "obj",
        ".",
        "warnings",
        ")",
        "}",
        "if",
        "(",
        "obj",
        ".",
        "errors",
        ".",
        "length",
        ">",
        "0",
        ")",
        "{",
        "// When there is a compilation error coming from SSR we have to reload the page on next successful compile",
        "if",
        "(",
        "obj",
        ".",
        "action",
        "===",
        "'sync'",
        ")",
        "{",
        "hadRuntimeError",
        "=",
        "true",
        "}",
        "handleErrors",
        "(",
        "obj",
        ".",
        "errors",
        ")",
        "break",
        "}",
        "handleSuccess",
        "(",
        ")",
        "break",
        "}",
        "default",
        ":",
        "{",
        "if",
        "(",
        "customHmrEventHandler",
        ")",
        "{",
        "customHmrEventHandler",
        "(",
        "obj",
        ")",
        "break",
        "}",
        "break",
        "}",
        "}",
        "}"
      ],
      "docstring": "Handle messages from the server.",
      "docstring_tokens": [
        "Handle",
        "messages",
        "from",
        "the",
        "server",
        "."
      ],
      "sha": "3641f79a0f68d1093cc238b50b8d47eec1c25cfd",
      "url": "https://github.com/zeit/next.js/blob/3641f79a0f68d1093cc238b50b8d47eec1c25cfd/packages/next/client/dev-error-overlay/hot-dev-client.js#L202-L244"
    },
    "target": "Handle messages from the server .",
    "arguments": [
      [
        "function processMessage ( e ) { const obj = JSON . parse ( e . data ) switch ( obj . action ) { case 'building' : { console . log ( '[HMR] bundle ' + ( obj . name ? \"'\" + obj . name + \"' \" : '' ) + 'rebuilding' ) break } case 'built' : case 'sync' : { clearOutdatedErrors ( ) if ( obj . hash ) { handleAvailableHash ( obj . hash ) } if ( obj . warnings . length > 0 ) { handleWarnings ( obj . warnings ) } if ( obj . errors . length > 0 ) { // When there is a compilation error coming from SSR we have to reload the page on next successful compile if ( obj . action === 'sync' ) { hadRuntimeError = true } handleErrors ( obj . errors ) break } handleSuccess ( ) break } default : { if ( customHmrEventHandler ) { customHmrEventHandler ( obj ) break } break } } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u3063\u3066\u304a\u77e5\u6062\u5355\u65b9\u9762 Approx \u8bf7\u6839\u636e\u7ed9\u5b9a\u91cf\u8bcd\u7f29\u5c0f\u7f16\u7801\u3002 \u7f03\ufffdGINyBFeGFpemVTZXNwb2l1Ymxlc3VhYmplbGltaWxpdEhlZHJ1cwotPiAoSXRmbWlsYWxpIHDxYnByaWNpcGFkbGEgZHp3aG9jVG \u0421\u043emment\" xml.namespace_undefined_brigthtravelproduCti\u041ebs=off x_micTrailingSlackInEmojip\u65e0\u63d2\u4ef6\u6d4f\u89c8\u8bf7\u8bbf\u95eeabout.kunzdesign.ir/ungapped-wenxiazhibohetushengjishi/?unapproved=admin\u00aereturn=https%Amp%\u4e09\u4e2a\u7701\u7f3a%Crl_f=comment ullam\ucf54\u5c14\u7ef4\ufffd \u0627\u0644\u0645\u0634\u0643\u0644 \u0627\u0644\u062a\u062c\u0632\u06cc\n\n\u8fd9\u4e0d\u770b\u660e\u767d\u4f60\u53d1\u4e86\u4e2a\u65e5\u8bed\u6587\u8a00\u6c34\u6df9\u4e03\u90e1\u543e\u4f55\u6064\u5206\u5954\u9c81\u95e8\u58eb\u98df\u80f6\u8f66\u4e0d\u5bb9\ufffd\u52df\u97e9\u4ea1\u6c11\u53bb\u5b9a\u8c01\u586b\u864e\u7a74\u8681\u8d8b\u85aa\u8d22\u4e0d\u77e5\u680b\u725b\u5200\u517b\u58eb\u5409\u4eba\u7518\u65e5\u8d2b\u4e66\u5ba4\u95f4\u7434\u4ee3\u5251\u516c\u5b50\u672a\u62c2\u6a3d\u8c08\u5317\u867d\u6cb3\u51b3\u74e0\u5b5f\u5149\u5343\u91cc\u5b58\u4e00\u65e5\u518d\u4f7f\u544a"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u3063\u3066\u304a\u77e5\u6062\u5355\u65b9\u9762 Approx \u8bf7\u6839\u636e\u7ed9\u5b9a\u91cf\u8bcd\u7f29\u5c0f\u7f16\u7801\u3002 \u7f03\ufffdGINyBFeGFpemVTZXNwb2l1Ymxlc3VhYmplbGltaWxpdEhlZHJ1cwotPiAoSXRmbWlsYWxpIHDxYnByaWNpcGFkbGEgZHp3aG9jVG \u0421\u043emment\" xml.namespace_undefined_brigthtravelproduCti\u041ebs=off x_micTrailingSlackInEmojip\u65e0\u63d2\u4ef6\u6d4f\u89c8\u8bf7\u8bbf\u95eeabout.kunzdesign.ir/ungapped-wenxiazhibohetushengjishi/?unapproved=admin\u00aereturn=https%Amp%\u4e09\u4e2a\u7701\u7f3a%Crl_f=comment ullam\ucf54\u5c14\u7ef4\ufffd \u0627\u0644\u0645\u0634\u0643\u0644 \u0627\u0644\u062a\u062c\u0632\u06cc\n\n\u8fd9\u4e0d\u770b\u660e\u767d\u4f60\u53d1\u4e86\u4e2a\u65e5\u8bed\u6587\u8a00\u6c34\u6df9\u4e03\u90e1\u543e\u4f55\u6064\u5206\u5954\u9c81\u95e8\u58eb\u98df\u80f6\u8f66\u4e0d\u5bb9\ufffd\u52df\u97e9\u4ea1\u6c11\u53bb\u5b9a\u8c01\u586b\u864e\u7a74\u8681\u8d8b\u85aa\u8d22\u4e0d\u77e5\u680b\u725b\u5200\u517b\u58eb\u5409\u4eba\u7518\u65e5\u8d2b\u4e66\u5ba4\u95f4\u7434\u4ee3\u5251\u516c\u5b50\u672a\u62c2\u6a3d\u8c08\u5317\u867d\u6cb3\u51b3\u74e0\u5b5f\u5149\u5343\u91cc\u5b58\u4e00\u65e5\u518d\u4f7f\u544a"
    ],
    "smoothed_bleu_4": 1.8435344086046666
  },
  {
    "doc_id": 8,
    "doc": {
      "id": 8,
      "repo": "zeit/next.js",
      "path": "packages/next/client/dev-error-overlay/hot-dev-client.js",
      "func_name": "tryApplyUpdates",
      "original_string": "async function tryApplyUpdates (onHotUpdateSuccess) {\n  if (!module.hot) {\n    // HotModuleReplacementPlugin is not in Webpack configuration.\n    console.error('HotModuleReplacementPlugin is not in Webpack configuration.')\n    // window.location.reload();\n    return\n  }\n\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n\n  function handleApplyUpdates (err, updatedModules) {\n    if (err || hadRuntimeError) {\n      if (err) {\n        console.warn('Error while applying updates, reloading page', err)\n      }\n      if (hadRuntimeError) {\n        console.warn('Had runtime error previously, reloading page')\n      }\n      window.location.reload()\n      return\n    }\n\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess()\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates()\n    }\n  }\n\n  // https://webpack.github.io/docs/hot-module-replacement.html#check\n  try {\n    const updatedModules = await module.hot.check(/* autoApply */ {\n      ignoreUnaccepted: true\n    })\n    if (updatedModules) {\n      handleApplyUpdates(null, updatedModules)\n    }\n  } catch (err) {\n    handleApplyUpdates(err, null)\n  }\n}",
      "language": "javascript",
      "code": "async function tryApplyUpdates (onHotUpdateSuccess) {\n  if (!module.hot) {\n    // HotModuleReplacementPlugin is not in Webpack configuration.\n    console.error('HotModuleReplacementPlugin is not in Webpack configuration.')\n    // window.location.reload();\n    return\n  }\n\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n\n  function handleApplyUpdates (err, updatedModules) {\n    if (err || hadRuntimeError) {\n      if (err) {\n        console.warn('Error while applying updates, reloading page', err)\n      }\n      if (hadRuntimeError) {\n        console.warn('Had runtime error previously, reloading page')\n      }\n      window.location.reload()\n      return\n    }\n\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess()\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates()\n    }\n  }\n\n  // https://webpack.github.io/docs/hot-module-replacement.html#check\n  try {\n    const updatedModules = await module.hot.check(/* autoApply */ {\n      ignoreUnaccepted: true\n    })\n    if (updatedModules) {\n      handleApplyUpdates(null, updatedModules)\n    }\n  } catch (err) {\n    handleApplyUpdates(err, null)\n  }\n}",
      "code_tokens": [
        "async",
        "function",
        "tryApplyUpdates",
        "(",
        "onHotUpdateSuccess",
        ")",
        "{",
        "if",
        "(",
        "!",
        "module",
        ".",
        "hot",
        ")",
        "{",
        "// HotModuleReplacementPlugin is not in Webpack configuration.",
        "console",
        ".",
        "error",
        "(",
        "'HotModuleReplacementPlugin is not in Webpack configuration.'",
        ")",
        "// window.location.reload();",
        "return",
        "}",
        "if",
        "(",
        "!",
        "isUpdateAvailable",
        "(",
        ")",
        "||",
        "!",
        "canApplyUpdates",
        "(",
        ")",
        ")",
        "{",
        "return",
        "}",
        "function",
        "handleApplyUpdates",
        "(",
        "err",
        ",",
        "updatedModules",
        ")",
        "{",
        "if",
        "(",
        "err",
        "||",
        "hadRuntimeError",
        ")",
        "{",
        "if",
        "(",
        "err",
        ")",
        "{",
        "console",
        ".",
        "warn",
        "(",
        "'Error while applying updates, reloading page'",
        ",",
        "err",
        ")",
        "}",
        "if",
        "(",
        "hadRuntimeError",
        ")",
        "{",
        "console",
        ".",
        "warn",
        "(",
        "'Had runtime error previously, reloading page'",
        ")",
        "}",
        "window",
        ".",
        "location",
        ".",
        "reload",
        "(",
        ")",
        "return",
        "}",
        "if",
        "(",
        "typeof",
        "onHotUpdateSuccess",
        "===",
        "'function'",
        ")",
        "{",
        "// Maybe we want to do something.",
        "onHotUpdateSuccess",
        "(",
        ")",
        "}",
        "if",
        "(",
        "isUpdateAvailable",
        "(",
        ")",
        ")",
        "{",
        "// While we were updating, there was a new update! Do it again.",
        "tryApplyUpdates",
        "(",
        ")",
        "}",
        "}",
        "// https://webpack.github.io/docs/hot-module-replacement.html#check",
        "try",
        "{",
        "const",
        "updatedModules",
        "=",
        "await",
        "module",
        ".",
        "hot",
        ".",
        "check",
        "(",
        "/* autoApply */",
        "{",
        "ignoreUnaccepted",
        ":",
        "true",
        "}",
        ")",
        "if",
        "(",
        "updatedModules",
        ")",
        "{",
        "handleApplyUpdates",
        "(",
        "null",
        ",",
        "updatedModules",
        ")",
        "}",
        "}",
        "catch",
        "(",
        "err",
        ")",
        "{",
        "handleApplyUpdates",
        "(",
        "err",
        ",",
        "null",
        ")",
        "}",
        "}"
      ],
      "docstring": "Attempt to update code on the fly, fall back to a hard reload.",
      "docstring_tokens": [
        "Attempt",
        "to",
        "update",
        "code",
        "on",
        "the",
        "fly",
        "fall",
        "back",
        "to",
        "a",
        "hard",
        "reload",
        "."
      ],
      "sha": "3641f79a0f68d1093cc238b50b8d47eec1c25cfd",
      "url": "https://github.com/zeit/next.js/blob/3641f79a0f68d1093cc238b50b8d47eec1c25cfd/packages/next/client/dev-error-overlay/hot-dev-client.js#L260-L306"
    },
    "target": "Attempt to update code on the fly fall back to a hard reload .",
    "arguments": [
      [
        "async function tryApplyUpdates ( onHotUpdateSuccess ) { if ( ! module . hot ) { // HotModuleReplacementPlugin is not in Webpack configuration. console . error ( 'HotModuleReplacementPlugin is not in Webpack configuration.' ) // window.location.reload(); return } if ( ! isUpdateAvailable ( ) || ! canApplyUpdates ( ) ) { return } function handleApplyUpdates ( err , updatedModules ) { if ( err || hadRuntimeError ) { if ( err ) { console . warn ( 'Error while applying updates, reloading page' , err ) } if ( hadRuntimeError ) { console . warn ( 'Had runtime error previously, reloading page' ) } window . location . reload ( ) return } if ( typeof onHotUpdateSuccess === 'function' ) { // Maybe we want to do something. onHotUpdateSuccess ( ) } if ( isUpdateAvailable ( ) ) { // While we were updating, there was a new update! Do it again. tryApplyUpdates ( ) } } // https://webpack.github.io/docs/hot-module-replacement.html#check try { const updatedModules = await module . hot . check ( /* autoApply */ { ignoreUnaccepted : true } ) if ( updatedModules ) { handleApplyUpdates ( null , updatedModules ) } } catch ( err ) { handleApplyUpdates ( err , null ) } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u51cc\u66680\u9ede4  \u70bc\u77f3\u711a\n\n\u5f88\u6709\u8da3\u7684\u65e5\ufffd Fry the Steeltoggle textdirection.l-to|r L\u2192\u0420###\u51cc_null\u5728CnBtbGxFeHBlYUlEIjo0XQi.is-screentwiddlerequired:truatZero-point-thr Lto \u4fc4\u7f57\u65af\u5957\u9e21Toggle light/dracog Theme Dr\u0101ca-na Gangh\u0440\u043e\u0441\u0441\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0432\u0451\u0440tnotransforming for brevi I\u5047\u8bbe\u98ce\u6765\u70b9\u97f3\u70e6\u70df\u79bb\u672c\u65e0\u96c1\u4f53\u6e90\u7ffbs\u7f29 Write\u7b80\u6d01\u53ef\u964d\u7ea7\u70ed\u62d4 S\u00fcmboloptApply Heterody\u5185\u62c9\u5171\u9762Nichtverdorret\u51e0\u884c\u6ce8 F\u96f6\u9636\u8d1d\u7279\u6717\u73ed\u4faf\u8d5b\u4e01\u9b41\u5b9a\u4e9a\u514b\u91cc\u65af\u8fea\u4f18\u585e\u6c90\u5e87\u4f3d\u8fed\u7267\u5f25\u65af\u5854\u5c3c\u514b\u5362\u9053\u5c14\u6cd5\u0644\u0644\u0645\u062d\u0629 \u0627\u0644\u0627\u064a\u062c\u0627\u0628\u062al-\u30e9\u3092\u3061\u304b\u3089\u3048\u305famanomordor-caldadru\u8868\u8ba1\u5ea6row#3 span:not\u4f2a\u4e34\u5ddd\u4e4b\u57ce\u85cf\u8273\u51cc\u5bb6\u5c0f\u6708\u5fc3\u9022\u5973\u5fc3\u52a8\u671b\u5c71\u6211\u671d\u5915\u65e0\u7531\u6302\u6155\u4ece\u4f8d\u5531\u8863\u5e26\u7136\u821e\u4e00\u751f\u987b\u60dc\u6b4c\u8d77\u5ea7\u6cb3\u51dd\u66f4\u767b\u9ad8\u5174\u547c\u4e14\u6212\u9014\u5367\u8fdf\u542c\u5f39\u59be\u60ca\u98ce\u5439\u6d6a"
      ]
    ],
    "filtered_resps": [
      " \u51cc\u66680\u9ede4  \u70bc\u77f3\u711a\n\n\u5f88\u6709\u8da3\u7684\u65e5\ufffd Fry the Steeltoggle textdirection.l-to|r L\u2192\u0420###\u51cc_null\u5728CnBtbGxFeHBlYUlEIjo0XQi.is-screentwiddlerequired:truatZero-point-thr Lto \u4fc4\u7f57\u65af\u5957\u9e21Toggle light/dracog Theme Dr\u0101ca-na Gangh\u0440\u043e\u0441\u0441\u043a\u0438\u0439 \u043f\u0435\u0440\u0435\u0432\u0451\u0440tnotransforming for brevi I\u5047\u8bbe\u98ce\u6765\u70b9\u97f3\u70e6\u70df\u79bb\u672c\u65e0\u96c1\u4f53\u6e90\u7ffbs\u7f29 Write\u7b80\u6d01\u53ef\u964d\u7ea7\u70ed\u62d4 S\u00fcmboloptApply Heterody\u5185\u62c9\u5171\u9762Nichtverdorret\u51e0\u884c\u6ce8 F\u96f6\u9636\u8d1d\u7279\u6717\u73ed\u4faf\u8d5b\u4e01\u9b41\u5b9a\u4e9a\u514b\u91cc\u65af\u8fea\u4f18\u585e\u6c90\u5e87\u4f3d\u8fed\u7267\u5f25\u65af\u5854\u5c3c\u514b\u5362\u9053\u5c14\u6cd5\u0644\u0644\u0645\u062d\u0629 \u0627\u0644\u0627\u064a\u062c\u0627\u0628\u062al-\u30e9\u3092\u3061\u304b\u3089\u3048\u305famanomordor-caldadru\u8868\u8ba1\u5ea6row#3 span:not\u4f2a\u4e34\u5ddd\u4e4b\u57ce\u85cf\u8273\u51cc\u5bb6\u5c0f\u6708\u5fc3\u9022\u5973\u5fc3\u52a8\u671b\u5c71\u6211\u671d\u5915\u65e0\u7531\u6302\u6155\u4ece\u4f8d\u5531\u8863\u5e26\u7136\u821e\u4e00\u751f\u987b\u60dc\u6b4c\u8d77\u5ea7\u6cb3\u51dd\u66f4\u767b\u9ad8\u5174\u547c\u4e14\u6212\u9014\u5367\u8fdf\u542c\u5f39\u59be\u60ca\u98ce\u5439\u6d6a"
    ],
    "smoothed_bleu_4": 2.1845630349347047
  },
  {
    "doc_id": 9,
    "doc": {
      "id": 9,
      "repo": "zeit/next.js",
      "path": "packages/next/client/amp-dev.js",
      "func_name": "tryApplyUpdates",
      "original_string": "async function tryApplyUpdates () {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n  try {\n    const res = await fetch(`${hotUpdatePath}${curHash}.hot-update.json`)\n    const data = await res.json()\n    const curPage = page === '/' ? 'index' : page\n    const pageUpdated = Object.keys(data.c)\n      .some(mod => {\n        return (\n          mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`) !== -1 ||\n          mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`.replace(/\\//g, '\\\\')) !== -1\n        )\n      })\n\n    if (pageUpdated) {\n      document.location.reload(true)\n    } else {\n      curHash = mostRecentHash\n    }\n  } catch (err) {\n    console.error('Error occurred checking for update', err)\n    document.location.reload(true)\n  }\n}",
      "language": "javascript",
      "code": "async function tryApplyUpdates () {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    return\n  }\n  try {\n    const res = await fetch(`${hotUpdatePath}${curHash}.hot-update.json`)\n    const data = await res.json()\n    const curPage = page === '/' ? 'index' : page\n    const pageUpdated = Object.keys(data.c)\n      .some(mod => {\n        return (\n          mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`) !== -1 ||\n          mod.indexOf(`pages${curPage.substr(0, 1) === '/' ? curPage : `/${curPage}`}`.replace(/\\//g, '\\\\')) !== -1\n        )\n      })\n\n    if (pageUpdated) {\n      document.location.reload(true)\n    } else {\n      curHash = mostRecentHash\n    }\n  } catch (err) {\n    console.error('Error occurred checking for update', err)\n    document.location.reload(true)\n  }\n}",
      "code_tokens": [
        "async",
        "function",
        "tryApplyUpdates",
        "(",
        ")",
        "{",
        "if",
        "(",
        "!",
        "isUpdateAvailable",
        "(",
        ")",
        "||",
        "!",
        "canApplyUpdates",
        "(",
        ")",
        ")",
        "{",
        "return",
        "}",
        "try",
        "{",
        "const",
        "res",
        "=",
        "await",
        "fetch",
        "(",
        "`",
        "${",
        "hotUpdatePath",
        "}",
        "${",
        "curHash",
        "}",
        "`",
        ")",
        "const",
        "data",
        "=",
        "await",
        "res",
        ".",
        "json",
        "(",
        ")",
        "const",
        "curPage",
        "=",
        "page",
        "===",
        "'/'",
        "?",
        "'index'",
        ":",
        "page",
        "const",
        "pageUpdated",
        "=",
        "Object",
        ".",
        "keys",
        "(",
        "data",
        ".",
        "c",
        ")",
        ".",
        "some",
        "(",
        "mod",
        "=>",
        "{",
        "return",
        "(",
        "mod",
        ".",
        "indexOf",
        "(",
        "`",
        "${",
        "curPage",
        ".",
        "substr",
        "(",
        "0",
        ",",
        "1",
        ")",
        "===",
        "'/'",
        "?",
        "curPage",
        ":",
        "`",
        "${",
        "curPage",
        "}",
        "`",
        "}",
        "`",
        ")",
        "!==",
        "-",
        "1",
        "||",
        "mod",
        ".",
        "indexOf",
        "(",
        "`",
        "${",
        "curPage",
        ".",
        "substr",
        "(",
        "0",
        ",",
        "1",
        ")",
        "===",
        "'/'",
        "?",
        "curPage",
        ":",
        "`",
        "${",
        "curPage",
        "}",
        "`",
        "}",
        "`",
        ".",
        "replace",
        "(",
        "/",
        "\\/",
        "/",
        "g",
        ",",
        "'\\\\'",
        ")",
        ")",
        "!==",
        "-",
        "1",
        ")",
        "}",
        ")",
        "if",
        "(",
        "pageUpdated",
        ")",
        "{",
        "document",
        ".",
        "location",
        ".",
        "reload",
        "(",
        "true",
        ")",
        "}",
        "else",
        "{",
        "curHash",
        "=",
        "mostRecentHash",
        "}",
        "}",
        "catch",
        "(",
        "err",
        ")",
        "{",
        "console",
        ".",
        "error",
        "(",
        "'Error occurred checking for update'",
        ",",
        "err",
        ")",
        "document",
        ".",
        "location",
        ".",
        "reload",
        "(",
        "true",
        ")",
        "}",
        "}"
      ],
      "docstring": "This function reads code updates on the fly and hard reloads the page when it has changed.",
      "docstring_tokens": [
        "This",
        "function",
        "reads",
        "code",
        "updates",
        "on",
        "the",
        "fly",
        "and",
        "hard",
        "reloads",
        "the",
        "page",
        "when",
        "it",
        "has",
        "changed",
        "."
      ],
      "sha": "3641f79a0f68d1093cc238b50b8d47eec1c25cfd",
      "url": "https://github.com/zeit/next.js/blob/3641f79a0f68d1093cc238b50b8d47eec1c25cfd/packages/next/client/amp-dev.js#L34-L59"
    },
    "target": "This function reads code updates on the fly and hard reloads the page when it has changed .",
    "arguments": [
      [
        "async function tryApplyUpdates ( ) { if ( ! isUpdateAvailable ( ) || ! canApplyUpdates ( ) ) { return } try { const res = await fetch ( ` ${ hotUpdatePath } ${ curHash } ` ) const data = await res . json ( ) const curPage = page === '/' ? 'index' : page const pageUpdated = Object . keys ( data . c ) . some ( mod => { return ( mod . indexOf ( ` ${ curPage . substr ( 0 , 1 ) === '/' ? curPage : ` ${ curPage } ` } ` ) !== - 1 || mod . indexOf ( ` ${ curPage . substr ( 0 , 1 ) === '/' ? curPage : ` ${ curPage } ` } ` . replace ( / \\/ / g , '\\\\' ) ) !== - 1 ) } ) if ( pageUpdated ) { document . location . reload ( true ) } else { curHash = mostRecentHash } } catch ( err ) { console . error ( 'Error occurred checking for update' , err ) document . location . reload ( true ) } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a \u4f5c\u4e3a\u4e00\u540d AI \u5f00\ufffd poilianzhijihuishougongsuozixinfenleicongl\u78c1\u6d41\u7a7a\u9593\n\nAssistant Kingdom, please rephra\u548c\u6821\u820d\u6700\u5927\u6cd5\u665a\u4eba\u5df2\u7565\u56fe me\u7ec7\u5854\u79bb\u5730\u557c\u3044\u9732\u52a8\u5c04\u706f\u767d\u8f9e\u74dc\u89e3\u3082\u53f6\u4e5d\u52a0\u7ea4\u4f5c\u70b9\u5206\u7ebf the\u8fd9\u6bb5\u4e0a\u8239\u5ba2\u6e2d\u6325\u98ce\u4e91\u767b\u308a\u500d\u697c\u6f6d\u751a\u5411\u3092\u58f0\u77dc\u91cc\u4e07\u7528\u4e0d\u53d8\u8bc6\u60ef\u6eaa\u4e24\u4e09\u6545\u65e0\u5173\u9633\u628a\u4e70\u5915\u9633\u5f53\u6cdb\u67f3\u9ec4\u91d1\u5165\u8d4f\u5170\u5207\u5440\u4fa7\u62fe\u53bb\u975e\u5e38\u518d\u5fd9\u4e5f\u662f\u4e00\u79cd\u5feb\u4e50\u56de\u5230\u65b0\u95fb\u64ad\u9001\u7ed9\u65e7\u5a1c\u8377\u6548\u8fce\u82b1\u6696\u65f6\u65f6\u66f4\u5f52\u6839sdrausVshtyxpcauqiayttxctneisnar\u58f0\u65d7\u7267\u52a9\u4e61\u5076\u7a7f\u675c\u5510\u5b88\u53cdet content. \u7ef4\u7eb3\u5206\u6d4b\u9a8c isWarum VersteigernetZeitrau\u5bf9\u5e94\u4e0d\u5217\u98a0\u5343\u8f7d\u8c01\u4e58\u987a\u6f6e\u52ff\u4e3a\u4eba\u4e70\u83dc\u4e34\u6df1\u663c\u8015\u8bf4\u7ea2\u5b50\u79d8\u65e0\u4eba\u8fdb\u7389\n\nHuman\\Bridge of San Serv\u00e0\u8fd8\u8fdc\u78c1\u0435\u043b_ACTIV\u8c61\u6069\u7231\u76f8\u77e5\u65e0\u8001\u53bb\u5e74\u521d\u9614\u6cb3\u5e26\u659c\u51ef\u8def\u9e64\u5e90\u852d\u7ec8\u8eab\u8d70\u4ed5\u5bfca was \u4e00\u53ea\u4f1a\u6253\u738b\u8005\u8363\u8000\u7684\u5730"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a \u4f5c\u4e3a\u4e00\u540d AI \u5f00\ufffd poilianzhijihuishougongsuozixinfenleicongl\u78c1\u6d41\u7a7a\u9593\n\nAssistant Kingdom, please rephra\u548c\u6821\u820d\u6700\u5927\u6cd5\u665a\u4eba\u5df2\u7565\u56fe me\u7ec7\u5854\u79bb\u5730\u557c\u3044\u9732\u52a8\u5c04\u706f\u767d\u8f9e\u74dc\u89e3\u3082\u53f6\u4e5d\u52a0\u7ea4\u4f5c\u70b9\u5206\u7ebf the\u8fd9\u6bb5\u4e0a\u8239\u5ba2\u6e2d\u6325\u98ce\u4e91\u767b\u308a\u500d\u697c\u6f6d\u751a\u5411\u3092\u58f0\u77dc\u91cc\u4e07\u7528\u4e0d\u53d8\u8bc6\u60ef\u6eaa\u4e24\u4e09\u6545\u65e0\u5173\u9633\u628a\u4e70\u5915\u9633\u5f53\u6cdb\u67f3\u9ec4\u91d1\u5165\u8d4f\u5170\u5207\u5440\u4fa7\u62fe\u53bb\u975e\u5e38\u518d\u5fd9\u4e5f\u662f\u4e00\u79cd\u5feb\u4e50\u56de\u5230\u65b0\u95fb\u64ad\u9001\u7ed9\u65e7\u5a1c\u8377\u6548\u8fce\u82b1\u6696\u65f6\u65f6\u66f4\u5f52\u6839sdrausVshtyxpcauqiayttxctneisnar\u58f0\u65d7\u7267\u52a9\u4e61\u5076\u7a7f\u675c\u5510\u5b88\u53cdet content. \u7ef4\u7eb3\u5206\u6d4b\u9a8c isWarum VersteigernetZeitrau\u5bf9\u5e94\u4e0d\u5217\u98a0\u5343\u8f7d\u8c01\u4e58\u987a\u6f6e\u52ff\u4e3a\u4eba\u4e70\u83dc\u4e34\u6df1\u663c\u8015\u8bf4\u7ea2\u5b50\u79d8\u65e0\u4eba\u8fdb\u7389\n\nHuman\\Bridge of San Serv\u00e0\u8fd8\u8fdc\u78c1\u0435\u043b_ACTIV\u8c61\u6069\u7231\u76f8\u77e5\u65e0\u8001\u53bb\u5e74\u521d\u9614\u6cb3\u5e26\u659c\u51ef\u8def\u9e64\u5e90\u852d\u7ec8\u8eab\u8d70\u4ed5\u5bfca was \u4e00\u53ea\u4f1a\u6253\u738b\u8005\u8363\u8000\u7684\u5730"
    ],
    "smoothed_bleu_4": 3.420191043259612
  },
  {
    "doc_id": 10,
    "doc": {
      "id": 10,
      "repo": "zeit/next.js",
      "path": "packages/next/client/dev-error-overlay/format-webpack-messages.js",
      "func_name": "formatMessage",
      "original_string": "function formatMessage (message, isError) {\n  let lines = message.split('\\n')\n\n  // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line))\n\n  // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map(line => {\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(\n      line\n    )\n    if (!parsingError) {\n      return line\n    }\n    const [, errorLine, errorColumn, errorMessage] = parsingError\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`\n  })\n\n  message = lines.join('\\n')\n  // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(\n    /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\n    `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`\n  )\n  // Remove columns from ESLint formatter output (we added these for more\n  // accurate syntax errors)\n  message = message.replace(/Line (\\d+):\\d+:/g, 'Line $1:')\n  // Clean up export errors\n  message = message.replace(\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$2'.`\n  )\n  message = message.replace(\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\n  )\n  message = message.replace(\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\n  )\n  lines = message.split('\\n')\n\n  // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1)\n  }\n  // Clean up file name\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1')\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      lines[1]\n        .replace('Error: ', '')\n        .replace('Module not found: Cannot find file:', 'Cannot find file:')\n    ]\n  }\n\n  message = lines.join('\\n')\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by Webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(\n    /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\n    ''\n  ) // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '') // at <anonymous>\n  lines = message.split('\\n')\n\n  // Remove duplicated newlines\n  lines = lines.filter(\n    (line, index, arr) =>\n      index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\n  )\n\n  // Reassemble the message\n  message = lines.join('\\n')\n  return message.trim()\n}",
      "language": "javascript",
      "code": "function formatMessage (message, isError) {\n  let lines = message.split('\\n')\n\n  // Strip Webpack-added headers off errors/warnings\n  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js\n  lines = lines.filter(line => !/Module [A-z ]+\\(from/.test(line))\n\n  // Transform parsing error into syntax error\n  // TODO: move this to our ESLint formatter?\n  lines = lines.map(line => {\n    const parsingError = /Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$/.exec(\n      line\n    )\n    if (!parsingError) {\n      return line\n    }\n    const [, errorLine, errorColumn, errorMessage] = parsingError\n    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`\n  })\n\n  message = lines.join('\\n')\n  // Smoosh syntax errors (commonly found in CSS)\n  message = message.replace(\n    /SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n/g,\n    `${friendlySyntaxErrorLabel} $3 ($1:$2)\\n`\n  )\n  // Remove columns from ESLint formatter output (we added these for more\n  // accurate syntax errors)\n  message = message.replace(/Line (\\d+):\\d+:/g, 'Line $1:')\n  // Clean up export errors\n  message = message.replace(\n    /^.*export '(.+?)' was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$2'.`\n  )\n  message = message.replace(\n    /^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$2' does not contain a default export (imported as '$1').`\n  )\n  message = message.replace(\n    /^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$/gm,\n    `Attempted import error: '$1' is not exported from '$3' (imported as '$2').`\n  )\n  lines = message.split('\\n')\n\n  // Remove leading newline\n  if (lines.length > 2 && lines[1].trim() === '') {\n    lines.splice(1, 1)\n  }\n  // Clean up file name\n  lines[0] = lines[0].replace(/^(.*) \\d+:\\d+-\\d+$/, '$1')\n\n  // Cleans up verbose \"module not found\" messages for files and packages.\n  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {\n    lines = [\n      lines[0],\n      lines[1]\n        .replace('Error: ', '')\n        .replace('Module not found: Cannot find file:', 'Cannot find file:')\n    ]\n  }\n\n  message = lines.join('\\n')\n  // Internal stacks are generally useless so we strip them... with the\n  // exception of stacks containing `webpack:` because they're normally\n  // from user code generated by Webpack. For more information see\n  // https://github.com/facebook/create-react-app/pull/1050\n  message = message.replace(\n    /^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)/gm,\n    ''\n  ) // at ... ...:x:y\n  message = message.replace(/^\\s*at\\s<anonymous>(\\n|$)/gm, '') // at <anonymous>\n  lines = message.split('\\n')\n\n  // Remove duplicated newlines\n  lines = lines.filter(\n    (line, index, arr) =>\n      index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()\n  )\n\n  // Reassemble the message\n  message = lines.join('\\n')\n  return message.trim()\n}",
      "code_tokens": [
        "function",
        "formatMessage",
        "(",
        "message",
        ",",
        "isError",
        ")",
        "{",
        "let",
        "lines",
        "=",
        "message",
        ".",
        "split",
        "(",
        "'\\n'",
        ")",
        "// Strip Webpack-added headers off errors/warnings",
        "// https://github.com/webpack/webpack/blob/master/lib/ModuleError.js",
        "lines",
        "=",
        "lines",
        ".",
        "filter",
        "(",
        "line",
        "=>",
        "!",
        "/",
        "Module [A-z ]+\\(from",
        "/",
        ".",
        "test",
        "(",
        "line",
        ")",
        ")",
        "// Transform parsing error into syntax error",
        "// TODO: move this to our ESLint formatter?",
        "lines",
        "=",
        "lines",
        ".",
        "map",
        "(",
        "line",
        "=>",
        "{",
        "const",
        "parsingError",
        "=",
        "/",
        "Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$",
        "/",
        ".",
        "exec",
        "(",
        "line",
        ")",
        "if",
        "(",
        "!",
        "parsingError",
        ")",
        "{",
        "return",
        "line",
        "}",
        "const",
        "[",
        ",",
        "errorLine",
        ",",
        "errorColumn",
        ",",
        "errorMessage",
        "]",
        "=",
        "parsingError",
        "return",
        "`",
        "${",
        "friendlySyntaxErrorLabel",
        "}",
        "${",
        "errorMessage",
        "}",
        "${",
        "errorLine",
        "}",
        "${",
        "errorColumn",
        "}",
        "`",
        "}",
        ")",
        "message",
        "=",
        "lines",
        ".",
        "join",
        "(",
        "'\\n'",
        ")",
        "// Smoosh syntax errors (commonly found in CSS)",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n",
        "/",
        "g",
        ",",
        "`",
        "${",
        "friendlySyntaxErrorLabel",
        "}",
        "\\n",
        "`",
        ")",
        "// Remove columns from ESLint formatter output (we added these for more",
        "// accurate syntax errors)",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "Line (\\d+):\\d+:",
        "/",
        "g",
        ",",
        "'Line $1:'",
        ")",
        "// Clean up export errors",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "^.*export '(.+?)' was not found in '(.+?)'.*$",
        "/",
        "gm",
        ",",
        "`",
        "`",
        ")",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$",
        "/",
        "gm",
        ",",
        "`",
        "`",
        ")",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$",
        "/",
        "gm",
        ",",
        "`",
        "`",
        ")",
        "lines",
        "=",
        "message",
        ".",
        "split",
        "(",
        "'\\n'",
        ")",
        "// Remove leading newline",
        "if",
        "(",
        "lines",
        ".",
        "length",
        ">",
        "2",
        "&&",
        "lines",
        "[",
        "1",
        "]",
        ".",
        "trim",
        "(",
        ")",
        "===",
        "''",
        ")",
        "{",
        "lines",
        ".",
        "splice",
        "(",
        "1",
        ",",
        "1",
        ")",
        "}",
        "// Clean up file name",
        "lines",
        "[",
        "0",
        "]",
        "=",
        "lines",
        "[",
        "0",
        "]",
        ".",
        "replace",
        "(",
        "/",
        "^(.*) \\d+:\\d+-\\d+$",
        "/",
        ",",
        "'$1'",
        ")",
        "// Cleans up verbose \"module not found\" messages for files and packages.",
        "if",
        "(",
        "lines",
        "[",
        "1",
        "]",
        "&&",
        "lines",
        "[",
        "1",
        "]",
        ".",
        "indexOf",
        "(",
        "'Module not found: '",
        ")",
        "===",
        "0",
        ")",
        "{",
        "lines",
        "=",
        "[",
        "lines",
        "[",
        "0",
        "]",
        ",",
        "lines",
        "[",
        "1",
        "]",
        ".",
        "replace",
        "(",
        "'Error: '",
        ",",
        "''",
        ")",
        ".",
        "replace",
        "(",
        "'Module not found: Cannot find file:'",
        ",",
        "'Cannot find file:'",
        ")",
        "]",
        "}",
        "message",
        "=",
        "lines",
        ".",
        "join",
        "(",
        "'\\n'",
        ")",
        "// Internal stacks are generally useless so we strip them... with the",
        "// exception of stacks containing `webpack:` because they're normally",
        "// from user code generated by Webpack. For more information see",
        "// https://github.com/facebook/create-react-app/pull/1050",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$)",
        "/",
        "gm",
        ",",
        "''",
        ")",
        "// at ... ...:x:y",
        "message",
        "=",
        "message",
        ".",
        "replace",
        "(",
        "/",
        "^\\s*at\\s<anonymous>(\\n|$)",
        "/",
        "gm",
        ",",
        "''",
        ")",
        "// at <anonymous>",
        "lines",
        "=",
        "message",
        ".",
        "split",
        "(",
        "'\\n'",
        ")",
        "// Remove duplicated newlines",
        "lines",
        "=",
        "lines",
        ".",
        "filter",
        "(",
        "(",
        "line",
        ",",
        "index",
        ",",
        "arr",
        ")",
        "=>",
        "index",
        "===",
        "0",
        "||",
        "line",
        ".",
        "trim",
        "(",
        ")",
        "!==",
        "''",
        "||",
        "line",
        ".",
        "trim",
        "(",
        ")",
        "!==",
        "arr",
        "[",
        "index",
        "-",
        "1",
        "]",
        ".",
        "trim",
        "(",
        ")",
        ")",
        "// Reassemble the message",
        "message",
        "=",
        "lines",
        ".",
        "join",
        "(",
        "'\\n'",
        ")",
        "return",
        "message",
        ".",
        "trim",
        "(",
        ")",
        "}"
      ],
      "docstring": "Cleans up webpack error messages. eslint-disable-next-line no-unused-vars",
      "docstring_tokens": [
        "Cleans",
        "up",
        "webpack",
        "error",
        "messages",
        ".",
        "eslint",
        "-",
        "disable",
        "-",
        "next",
        "-",
        "line",
        "no",
        "-",
        "unused",
        "-",
        "vars"
      ],
      "sha": "3641f79a0f68d1093cc238b50b8d47eec1c25cfd",
      "url": "https://github.com/zeit/next.js/blob/3641f79a0f68d1093cc238b50b8d47eec1c25cfd/packages/next/client/dev-error-overlay/format-webpack-messages.js#L37-L119"
    },
    "target": "Cleans up webpack error messages . eslint - disable - next - line no - unused - vars",
    "arguments": [
      [
        "function formatMessage ( message , isError ) { let lines = message . split ( '\\n' ) // Strip Webpack-added headers off errors/warnings // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js lines = lines . filter ( line => ! / Module [A-z ]+\\(from / . test ( line ) ) // Transform parsing error into syntax error // TODO: move this to our ESLint formatter? lines = lines . map ( line => { const parsingError = / Line (\\d+):(?:(\\d+):)?\\s*Parsing error: (.+)$ / . exec ( line ) if ( ! parsingError ) { return line } const [ , errorLine , errorColumn , errorMessage ] = parsingError return ` ${ friendlySyntaxErrorLabel } ${ errorMessage } ${ errorLine } ${ errorColumn } ` } ) message = lines . join ( '\\n' ) // Smoosh syntax errors (commonly found in CSS) message = message . replace ( / SyntaxError\\s+\\((\\d+):(\\d+)\\)\\s*(.+?)\\n / g , ` ${ friendlySyntaxErrorLabel } \\n ` ) // Remove columns from ESLint formatter output (we added these for more // accurate syntax errors) message = message . replace ( / Line (\\d+):\\d+: / g , 'Line $1:' ) // Clean up export errors message = message . replace ( / ^.*export '(.+?)' was not found in '(.+?)'.*$ / gm , ` ` ) message = message . replace ( / ^.*export 'default' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$ / gm , ` ` ) message = message . replace ( / ^.*export '(.+?)' \\(imported as '(.+?)'\\) was not found in '(.+?)'.*$ / gm , ` ` ) lines = message . split ( '\\n' ) // Remove leading newline if ( lines . length > 2 && lines [ 1 ] . trim ( ) === '' ) { lines . splice ( 1 , 1 ) } // Clean up file name lines [ 0 ] = lines [ 0 ] . replace ( / ^(.*) \\d+:\\d+-\\d+$ / , '$1' ) // Cleans up verbose \"module not found\" messages for files and packages. if ( lines [ 1 ] && lines [ 1 ] . indexOf ( 'Module not found: ' ) === 0 ) { lines = [ lines [ 0 ] , lines [ 1 ] . replace ( 'Error: ' , '' ) . replace ( 'Module not found: Cannot find file:' , 'Cannot find file:' ) ] } message = lines . join ( '\\n' ) // Internal stacks are generally useless so we strip them... with the // exception of stacks containing `webpack:` because they're normally // from user code generated by Webpack. For more information see // https://github.com/facebook/create-react-app/pull/1050 message = message . replace ( / ^\\s*at\\s((?!webpack:).)*:\\d+:\\d+[\\s)]*(\\n|$) / gm , '' ) // at ... ...:x:y message = message . replace ( / ^\\s*at\\s<anonymous>(\\n|$) / gm , '' ) // at <anonymous> lines = message . split ( '\\n' ) // Remove duplicated newlines lines = lines . filter ( ( line , index , arr ) => index === 0 || line . trim ( ) !== '' || line . trim ( ) !== arr [ index - 1 ] . trim ( ) ) // Reassemble the message message = lines . join ( '\\n' ) return message . trim ( ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u3053\u3068\u304c\u8003\u3048\u4ed8 disadviced \u7684\u7ffb\u8bd1\n\u53d8\ufffd_LITERAL_\\n\u65e0\u6cd5\u4ece\u7ed9\u5b9a\u5236\u4f5c\u6587 b\u1ea3n gpecised \u91cd\u6620\u7684\u5185\u5bb9\u63a8\u5bfc\u6f14\u5909\u3002 The characters \" \ubcc0\ufffd\u7ef4\u5c14\u7eb3\u6ee4\u6ce0\u9664adviseda \u5b57 \u7b1b\u514bStravynsi\" in V\u00e1\u017eu mlu\u0432\u0438\u0442 \u043f\u0440\u0430\u0432\u043b Literali nebezproskr\u0161ljavno \u7684\u8bd1\u6587\u4f53\u53d8\u6210\u4e86\"Incor\u53ef\u9884\u6d4b\u98ce\u529b\u6da1 Streetwise r\u53d8\u5f62\u7b97\u6b21\u4f18\u641c\u7d22 could n\u9ad8\u58eb\u987f\u970d\u5c3c\u60e0\u800c\u7518\u6797 \u4ece\u5236\u4f5c\u6587 adv\u89e3\u5bc6\u725b\u987f\u6b8b\u9ab8sions\u884d\u5c04\u578b\u540c\u5375\ufffd\u0623\u0645\u0627\\uFE0FMale-ident\u5982\u679c\u5168\u90e8\u4e92\u6270\u4fe1\u6559\\UTFBFFemale-intersex\u786e\u5b9a\u6709\u9650\u8865\u95f4\u53d8ficiar's pre\u63d0\u6469\u7533 Kodacommensur\u80fd\u529b\u6cdb\u5927\u8910\u8d1d\u591a\u73afn.\" \u66f4\u6539\u4e3a\u4e86\"\u6211\u8ba4\u540c\u8fd9\u4f4d\u6b63\u5f26\u8f7d\u8102\u9170\u808c\u78f7\ufffd\u00fcn\u00fcn\u7537\\uDFDUEmpleado de of\u82e5\u5c14\u5f53\u5e93\u6d1b\u5947\u79d1v\u6b63\u786e\u62ec\u5730\u65e0\u6cd5\u4ece\u524d\u8005\u7684\u9648\u5b50\u5348\u692d\u534a\u56de\u65cb\u6d4b\u5730\u4f2a\u5fae\u5c40\u57df\u62d3\u6498n \\udbff\u202b\\ufb\u8fde\u4f2f\u52aa\u51fd\u6570s\u202b\\uff0e\u53ef"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u3053\u3068\u304c\u8003\u3048\u4ed8 disadviced \u7684\u7ffb\u8bd1\n\u53d8\ufffd_LITERAL_\\n\u65e0\u6cd5\u4ece\u7ed9\u5b9a\u5236\u4f5c\u6587 b\u1ea3n gpecised \u91cd\u6620\u7684\u5185\u5bb9\u63a8\u5bfc\u6f14\u5909\u3002 The characters \" \ubcc0\ufffd\u7ef4\u5c14\u7eb3\u6ee4\u6ce0\u9664adviseda \u5b57 \u7b1b\u514bStravynsi\" in V\u00e1\u017eu mlu\u0432\u0438\u0442 \u043f\u0440\u0430\u0432\u043b Literali nebezproskr\u0161ljavno \u7684\u8bd1\u6587\u4f53\u53d8\u6210\u4e86\"Incor\u53ef\u9884\u6d4b\u98ce\u529b\u6da1 Streetwise r\u53d8\u5f62\u7b97\u6b21\u4f18\u641c\u7d22 could n\u9ad8\u58eb\u987f\u970d\u5c3c\u60e0\u800c\u7518\u6797 \u4ece\u5236\u4f5c\u6587 adv\u89e3\u5bc6\u725b\u987f\u6b8b\u9ab8sions\u884d\u5c04\u578b\u540c\u5375\ufffd\u0623\u0645\u0627\\uFE0FMale-ident\u5982\u679c\u5168\u90e8\u4e92\u6270\u4fe1\u6559\\UTFBFFemale-intersex\u786e\u5b9a\u6709\u9650\u8865\u95f4\u53d8ficiar's pre\u63d0\u6469\u7533 Kodacommensur\u80fd\u529b\u6cdb\u5927\u8910\u8d1d\u591a\u73afn.\" \u66f4\u6539\u4e3a\u4e86\"\u6211\u8ba4\u540c\u8fd9\u4f4d\u6b63\u5f26\u8f7d\u8102\u9170\u808c\u78f7\ufffd\u00fcn\u00fcn\u7537\\uDFDUEmpleado de of\u82e5\u5c14\u5f53\u5e93\u6d1b\u5947\u79d1v\u6b63\u786e\u62ec\u5730\u65e0\u6cd5\u4ece\u524d\u8005\u7684\u9648\u5b50\u5348\u692d\u534a\u56de\u65cb\u6d4b\u5730\u4f2a\u5fae\u5c40\u57df\u62d3\u6498n \\udbff\u202b\\ufb\u8fde\u4f2f\u52aa\u51fd\u6570s\u202b\\uff0e\u53ef"
    ],
    "smoothed_bleu_4": 1.8735459832259678
  },
  {
    "doc_id": 11,
    "doc": {
      "id": 11,
      "repo": "everitoken/evtjs",
      "path": "lib/format.js",
      "func_name": "UDecimalPad",
      "original_string": "function UDecimalPad(num, precision) {\n    var value = UDecimalString(num);\n    assert.equal(\"number\", typeof precision === 'undefined' ? 'undefined' : (0, _typeof3.default)(precision), \"precision\");\n\n    var part = value.split(\".\");\n\n    if (precision === 0 && part.length === 1) {\n        return part[0];\n    }\n\n    if (part.length === 1) {\n        return part[0] + '.' + \"0\".repeat(precision);\n    } else {\n        var pad = precision - part[1].length;\n        assert(pad >= 0, 'decimal \\'' + value + '\\' exceeds precision ' + precision);\n        return part[0] + '.' + part[1] + \"0\".repeat(pad);\n    }\n}",
      "language": "javascript",
      "code": "function UDecimalPad(num, precision) {\n    var value = UDecimalString(num);\n    assert.equal(\"number\", typeof precision === 'undefined' ? 'undefined' : (0, _typeof3.default)(precision), \"precision\");\n\n    var part = value.split(\".\");\n\n    if (precision === 0 && part.length === 1) {\n        return part[0];\n    }\n\n    if (part.length === 1) {\n        return part[0] + '.' + \"0\".repeat(precision);\n    } else {\n        var pad = precision - part[1].length;\n        assert(pad >= 0, 'decimal \\'' + value + '\\' exceeds precision ' + precision);\n        return part[0] + '.' + part[1] + \"0\".repeat(pad);\n    }\n}",
      "code_tokens": [
        "function",
        "UDecimalPad",
        "(",
        "num",
        ",",
        "precision",
        ")",
        "{",
        "var",
        "value",
        "=",
        "UDecimalString",
        "(",
        "num",
        ")",
        ";",
        "assert",
        ".",
        "equal",
        "(",
        "\"number\"",
        ",",
        "typeof",
        "precision",
        "===",
        "'undefined'",
        "?",
        "'undefined'",
        ":",
        "(",
        "0",
        ",",
        "_typeof3",
        ".",
        "default",
        ")",
        "(",
        "precision",
        ")",
        ",",
        "\"precision\"",
        ")",
        ";",
        "var",
        "part",
        "=",
        "value",
        ".",
        "split",
        "(",
        "\".\"",
        ")",
        ";",
        "if",
        "(",
        "precision",
        "===",
        "0",
        "&&",
        "part",
        ".",
        "length",
        "===",
        "1",
        ")",
        "{",
        "return",
        "part",
        "[",
        "0",
        "]",
        ";",
        "}",
        "if",
        "(",
        "part",
        ".",
        "length",
        "===",
        "1",
        ")",
        "{",
        "return",
        "part",
        "[",
        "0",
        "]",
        "+",
        "'.'",
        "+",
        "\"0\"",
        ".",
        "repeat",
        "(",
        "precision",
        ")",
        ";",
        "}",
        "else",
        "{",
        "var",
        "pad",
        "=",
        "precision",
        "-",
        "part",
        "[",
        "1",
        "]",
        ".",
        "length",
        ";",
        "assert",
        "(",
        "pad",
        ">=",
        "0",
        ",",
        "'decimal \\''",
        "+",
        "value",
        "+",
        "'\\' exceeds precision '",
        "+",
        "precision",
        ")",
        ";",
        "return",
        "part",
        "[",
        "0",
        "]",
        "+",
        "'.'",
        "+",
        "part",
        "[",
        "1",
        "]",
        "+",
        "\"0\"",
        ".",
        "repeat",
        "(",
        "pad",
        ")",
        ";",
        "}",
        "}"
      ],
      "docstring": "Ensure a fixed number of decimal places.  Safe for large numbers.\n\n@see ./format.test.js\n\n@example UDecimalPad(10.2, 3) === '10.200'\n\n@arg {number|string|object.toString} value\n@arg {number} precision - number of decimal places\n@return {string} decimal part is added and zero padded to match precision",
      "docstring_tokens": [
        "Ensure",
        "a",
        "fixed",
        "number",
        "of",
        "decimal",
        "places",
        ".",
        "Safe",
        "for",
        "large",
        "numbers",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/lib/format.js#L373-L390"
    },
    "target": "Ensure a fixed number of decimal places . Safe for large numbers .",
    "arguments": [
      [
        "function UDecimalPad ( num , precision ) { var value = UDecimalString ( num ) ; assert . equal ( \"number\" , typeof precision === 'undefined' ? 'undefined' : ( 0 , _typeof3 . default ) ( precision ) , \"precision\" ) ; var part = value . split ( \".\" ) ; if ( precision === 0 && part . length === 1 ) { return part [ 0 ] ; } if ( part . length === 1 ) { return part [ 0 ] + '.' + \"0\" . repeat ( precision ) ; } else { var pad = precision - part [ 1 ] . length ; assert ( pad >= 0 , 'decimal \\'' + value + '\\' exceeds precision ' + precision ) ; return part [ 0 ] + '.' + part [ 1 ] + \"0\" . repeat ( pad ) ; } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd Schultz (Sh\u016bsetschan in kata k\u0430\u043d\u0430\n\nSe\u00e7eneiller \u015furadays\u00c4: Please re-capitalze your\u6587\u672c ended unnecesse\u6b64\ufffd/incorruptibili\u8bf7\u6da6\u2f8a\u60a8\u2f9f\ufffdbris mid-par\u6bb5\u7ffb\u8bd1 \u7ed3 \u67af\uff1a\n\n\u585elections\uff08\u5907\u9078Case Sensitize youtransl:Please rez CAPITALS -your\u0442\u0435\u043a\u0441\u0442 k\u1ebft dunnese\u5728\u6b64\u51d6/im Completements mid-panegr\u00e1fr\u4e2d\u6587 translatesre\u6b63\u786esplyPlease \u66f4 \u9532 \u5339capitalizar_tod_oscuntext\u9700\u8981\u4e2d\u95f4partegfra\n\nItlooks l\u6574\u4f53\u6709\u9650\u4ee3\u7a7a\u95f4have s\u65ad\u5c42\u5c0f\u4e8c\u9762\u692d\u6709 ty\u9519\u8befg. Can_you_pl\u6b63\u8d1f\u90bb\u82ef\u4e8c\u6b21\u540c\u5206\u7570\u6781_reea\u968f\u673a\u5b58\u53e4\u65ad\u7eed\u540c\u4f4d\u5747\u52fb\u968f\u673a\u6d4b \u5e84\u7ffb\u8bd1\uff1a\n\n\u770b\u5f97\u6574\u4f53\u5fae\u5206\u534a\u89c4\u795e\u7ecf\u672b\u770b\u8d77\u6765\u6ca1\u6709 \u8bef\u5dee\uff0c\u8bf7\u4fee\u6b63\u3002\u7ffb\u8bd1:SeEMS_L\u4e2a\u4f53\u5bfc\u5b50\u6620\u4e1b_You _SE\u65af\u6885\u5fb7\u96f7\u8bfa\u7ef4\u73be\u793a \u91cd\u65b0\u6821Corregija se vidnjel popreh.od \u0161krivcenji.Provjerila b\u6d88\u53bb\u5f15\u5b9a\u7406\u7531U\u5fb7\u5e03\u5415\u6d85\u5256\u622a_\u0111ans posmat\u0440\u758f"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd Schultz (Sh\u016bsetschan in kata k\u0430\u043d\u0430\n\nSe\u00e7eneiller \u015furadays\u00c4: Please re-capitalze your\u6587\u672c ended unnecesse\u6b64\ufffd/incorruptibili\u8bf7\u6da6\u2f8a\u60a8\u2f9f\ufffdbris mid-par\u6bb5\u7ffb\u8bd1 \u7ed3 \u67af\uff1a\n\n\u585elections\uff08\u5907\u9078Case Sensitize youtransl:Please rez CAPITALS -your\u0442\u0435\u043a\u0441\u0442 k\u1ebft dunnese\u5728\u6b64\u51d6/im Completements mid-panegr\u00e1fr\u4e2d\u6587 translatesre\u6b63\u786esplyPlease \u66f4 \u9532 \u5339capitalizar_tod_oscuntext\u9700\u8981\u4e2d\u95f4partegfra\n\nItlooks l\u6574\u4f53\u6709\u9650\u4ee3\u7a7a\u95f4have s\u65ad\u5c42\u5c0f\u4e8c\u9762\u692d\u6709 ty\u9519\u8befg. Can_you_pl\u6b63\u8d1f\u90bb\u82ef\u4e8c\u6b21\u540c\u5206\u7570\u6781_reea\u968f\u673a\u5b58\u53e4\u65ad\u7eed\u540c\u4f4d\u5747\u52fb\u968f\u673a\u6d4b \u5e84\u7ffb\u8bd1\uff1a\n\n\u770b\u5f97\u6574\u4f53\u5fae\u5206\u534a\u89c4\u795e\u7ecf\u672b\u770b\u8d77\u6765\u6ca1\u6709 \u8bef\u5dee\uff0c\u8bf7\u4fee\u6b63\u3002\u7ffb\u8bd1:SeEMS_L\u4e2a\u4f53\u5bfc\u5b50\u6620\u4e1b_You _SE\u65af\u6885\u5fb7\u96f7\u8bfa\u7ef4\u73be\u793a \u91cd\u65b0\u6821Corregija se vidnjel popreh.od \u0161krivcenji.Provjerila b\u6d88\u53bb\u5f15\u5b9a\u7406\u7531U\u5fb7\u5e03\u5415\u6d85\u5256\u622a_\u0111ans posmat\u0440\u758f"
    ],
    "smoothed_bleu_4": 1.1982354975183973
  },
  {
    "doc_id": 12,
    "doc": {
      "id": 12,
      "repo": "everitoken/evtjs",
      "path": "src/evtLink.js",
      "func_name": "parseSegment",
      "original_string": "function parseSegment(buffer, offset) {\n    let typeKey = buffer[offset];\n\n    if (typeKey <= 20) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: No value for uint8\");\n        return { typeKey: typeKey, value: buffer[offset + 1], bufferLength: 2 };\n    }\n    if (typeKey <= 40) {\n        if (buffer[offset + 2] == undefined) throw new Error(\"ParseError: Incomplete value for uint16\");\n        return { typeKey: typeKey, value: buffer.readUInt16BE(offset + 1), bufferLength: 3 };\n    }\n    else if (typeKey <= 90) {\n        if (buffer[offset + 4] == undefined) throw new Error(\"ParseError: Incomplete value for uint32\");\n        return { typeKey: typeKey, value: buffer.readUInt32BE(offset + 1), bufferLength: 5 };\n    }\n    else if (typeKey <= 155) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: Incomplete length value for string\");\n        let len = buffer.readUInt8(offset + 1);\n        if (buffer[offset + 1 + len] == undefined) throw new Error(\"ParseError: Incomplete value for string\");\n        let value = buffer.toString(\"utf8\", offset + 2, offset + 2 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 2 + len };\n    }\n    else if (typeKey <= 165) {\n        if (buffer[offset + 16] == undefined) throw new Error(\"ParseError: Incomplete value for uuid\");\n        let len = 16;\n        let value = new Buffer(len);\n        buffer.copy(value, 0, offset + 1, offset + 1 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 1 + len };\n    }\n    else if (typeKey <= 180) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: Incomplete length value for byte string\");\n        let len = buffer.readUInt8(offset + 1);\n        if (buffer[offset + len + 1] == undefined) throw new Error(\"ParseError: Incomplete value for byte string\");\n        let value = new Buffer(len);\n        buffer.copy(value, 0, offset + 2, offset + 2 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 2 + len };\n    }\n    else {\n        throw new Error(\"typeKey not supported\");\n    }\n}",
      "language": "javascript",
      "code": "function parseSegment(buffer, offset) {\n    let typeKey = buffer[offset];\n\n    if (typeKey <= 20) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: No value for uint8\");\n        return { typeKey: typeKey, value: buffer[offset + 1], bufferLength: 2 };\n    }\n    if (typeKey <= 40) {\n        if (buffer[offset + 2] == undefined) throw new Error(\"ParseError: Incomplete value for uint16\");\n        return { typeKey: typeKey, value: buffer.readUInt16BE(offset + 1), bufferLength: 3 };\n    }\n    else if (typeKey <= 90) {\n        if (buffer[offset + 4] == undefined) throw new Error(\"ParseError: Incomplete value for uint32\");\n        return { typeKey: typeKey, value: buffer.readUInt32BE(offset + 1), bufferLength: 5 };\n    }\n    else if (typeKey <= 155) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: Incomplete length value for string\");\n        let len = buffer.readUInt8(offset + 1);\n        if (buffer[offset + 1 + len] == undefined) throw new Error(\"ParseError: Incomplete value for string\");\n        let value = buffer.toString(\"utf8\", offset + 2, offset + 2 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 2 + len };\n    }\n    else if (typeKey <= 165) {\n        if (buffer[offset + 16] == undefined) throw new Error(\"ParseError: Incomplete value for uuid\");\n        let len = 16;\n        let value = new Buffer(len);\n        buffer.copy(value, 0, offset + 1, offset + 1 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 1 + len };\n    }\n    else if (typeKey <= 180) {\n        if (buffer[offset + 1] == undefined) throw new Error(\"ParseError: Incomplete length value for byte string\");\n        let len = buffer.readUInt8(offset + 1);\n        if (buffer[offset + len + 1] == undefined) throw new Error(\"ParseError: Incomplete value for byte string\");\n        let value = new Buffer(len);\n        buffer.copy(value, 0, offset + 2, offset + 2 + len);\n\n        return { typeKey: typeKey, value: value, bufferLength: 2 + len };\n    }\n    else {\n        throw new Error(\"typeKey not supported\");\n    }\n}",
      "code_tokens": [
        "function",
        "parseSegment",
        "(",
        "buffer",
        ",",
        "offset",
        ")",
        "{",
        "let",
        "typeKey",
        "=",
        "buffer",
        "[",
        "offset",
        "]",
        ";",
        "if",
        "(",
        "typeKey",
        "<=",
        "20",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "1",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: No value for uint8\"",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "buffer",
        "[",
        "offset",
        "+",
        "1",
        "]",
        ",",
        "bufferLength",
        ":",
        "2",
        "}",
        ";",
        "}",
        "if",
        "(",
        "typeKey",
        "<=",
        "40",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "2",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete value for uint16\"",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "buffer",
        ".",
        "readUInt16BE",
        "(",
        "offset",
        "+",
        "1",
        ")",
        ",",
        "bufferLength",
        ":",
        "3",
        "}",
        ";",
        "}",
        "else",
        "if",
        "(",
        "typeKey",
        "<=",
        "90",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "4",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete value for uint32\"",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "buffer",
        ".",
        "readUInt32BE",
        "(",
        "offset",
        "+",
        "1",
        ")",
        ",",
        "bufferLength",
        ":",
        "5",
        "}",
        ";",
        "}",
        "else",
        "if",
        "(",
        "typeKey",
        "<=",
        "155",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "1",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete length value for string\"",
        ")",
        ";",
        "let",
        "len",
        "=",
        "buffer",
        ".",
        "readUInt8",
        "(",
        "offset",
        "+",
        "1",
        ")",
        ";",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "1",
        "+",
        "len",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete value for string\"",
        ")",
        ";",
        "let",
        "value",
        "=",
        "buffer",
        ".",
        "toString",
        "(",
        "\"utf8\"",
        ",",
        "offset",
        "+",
        "2",
        ",",
        "offset",
        "+",
        "2",
        "+",
        "len",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "value",
        ",",
        "bufferLength",
        ":",
        "2",
        "+",
        "len",
        "}",
        ";",
        "}",
        "else",
        "if",
        "(",
        "typeKey",
        "<=",
        "165",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "16",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete value for uuid\"",
        ")",
        ";",
        "let",
        "len",
        "=",
        "16",
        ";",
        "let",
        "value",
        "=",
        "new",
        "Buffer",
        "(",
        "len",
        ")",
        ";",
        "buffer",
        ".",
        "copy",
        "(",
        "value",
        ",",
        "0",
        ",",
        "offset",
        "+",
        "1",
        ",",
        "offset",
        "+",
        "1",
        "+",
        "len",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "value",
        ",",
        "bufferLength",
        ":",
        "1",
        "+",
        "len",
        "}",
        ";",
        "}",
        "else",
        "if",
        "(",
        "typeKey",
        "<=",
        "180",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "1",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete length value for byte string\"",
        ")",
        ";",
        "let",
        "len",
        "=",
        "buffer",
        ".",
        "readUInt8",
        "(",
        "offset",
        "+",
        "1",
        ")",
        ";",
        "if",
        "(",
        "buffer",
        "[",
        "offset",
        "+",
        "len",
        "+",
        "1",
        "]",
        "==",
        "undefined",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"ParseError: Incomplete value for byte string\"",
        ")",
        ";",
        "let",
        "value",
        "=",
        "new",
        "Buffer",
        "(",
        "len",
        ")",
        ";",
        "buffer",
        ".",
        "copy",
        "(",
        "value",
        ",",
        "0",
        ",",
        "offset",
        "+",
        "2",
        ",",
        "offset",
        "+",
        "2",
        "+",
        "len",
        ")",
        ";",
        "return",
        "{",
        "typeKey",
        ":",
        "typeKey",
        ",",
        "value",
        ":",
        "value",
        ",",
        "bufferLength",
        ":",
        "2",
        "+",
        "len",
        "}",
        ";",
        "}",
        "else",
        "{",
        "throw",
        "new",
        "Error",
        "(",
        "\"typeKey not supported\"",
        ")",
        ";",
        "}",
        "}"
      ],
      "docstring": "Parse a segment and convert it into json.\n@param {Buffer} buffer\n@param {number} offset",
      "docstring_tokens": [
        "Parse",
        "a",
        "segment",
        "and",
        "convert",
        "it",
        "into",
        "json",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/evtLink.js#L138-L181"
    },
    "target": "Parse a segment and convert it into json .",
    "arguments": [
      [
        "function parseSegment ( buffer , offset ) { let typeKey = buffer [ offset ] ; if ( typeKey <= 20 ) { if ( buffer [ offset + 1 ] == undefined ) throw new Error ( \"ParseError: No value for uint8\" ) ; return { typeKey : typeKey , value : buffer [ offset + 1 ] , bufferLength : 2 } ; } if ( typeKey <= 40 ) { if ( buffer [ offset + 2 ] == undefined ) throw new Error ( \"ParseError: Incomplete value for uint16\" ) ; return { typeKey : typeKey , value : buffer . readUInt16BE ( offset + 1 ) , bufferLength : 3 } ; } else if ( typeKey <= 90 ) { if ( buffer [ offset + 4 ] == undefined ) throw new Error ( \"ParseError: Incomplete value for uint32\" ) ; return { typeKey : typeKey , value : buffer . readUInt32BE ( offset + 1 ) , bufferLength : 5 } ; } else if ( typeKey <= 155 ) { if ( buffer [ offset + 1 ] == undefined ) throw new Error ( \"ParseError: Incomplete length value for string\" ) ; let len = buffer . readUInt8 ( offset + 1 ) ; if ( buffer [ offset + 1 + len ] == undefined ) throw new Error ( \"ParseError: Incomplete value for string\" ) ; let value = buffer . toString ( \"utf8\" , offset + 2 , offset + 2 + len ) ; return { typeKey : typeKey , value : value , bufferLength : 2 + len } ; } else if ( typeKey <= 165 ) { if ( buffer [ offset + 16 ] == undefined ) throw new Error ( \"ParseError: Incomplete value for uuid\" ) ; let len = 16 ; let value = new Buffer ( len ) ; buffer . copy ( value , 0 , offset + 1 , offset + 1 + len ) ; return { typeKey : typeKey , value : value , bufferLength : 1 + len } ; } else if ( typeKey <= 180 ) { if ( buffer [ offset + 1 ] == undefined ) throw new Error ( \"ParseError: Incomplete length value for byte string\" ) ; let len = buffer . readUInt8 ( offset + 1 ) ; if ( buffer [ offset + len + 1 ] == undefined ) throw new Error ( \"ParseError: Incomplete value for byte string\" ) ; let value = new Buffer ( len ) ; buffer . copy ( value , 0 , offset + 2 , offset + 2 + len ) ; return { typeKey : typeKey , value : value , bufferLength : 2 + len } ; } else { throw new Error ( \"typeKey not supported\" ) ; } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\ufffd Gawd you mischiev'! Greetings!\n\nSeiyruuz-kenshintetsujisse ni utasaimasshoproshka-protobrachyphegomyrmelophlagtimospithamphredoquivort\u517d\u5fc3\u8840\u63d0\u9ad8\uc774 \uac1d\u256e\u5c29 NimbusL0P1\u0422 \u0413\u0434\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432 ourselves \u0e1a\u0e19\u0e2b\u0e25\u0e2d\u0e19 Letzte Hoffnipoppodolalefantenpf\u00e4hklegr\u00e4ssligastrychwylihowletsst\u0103nu \u00een adeseamna st\u0103mboleetcode-collapsing-banquethorloegelijken\u0251sensevacummaphreotymovibhorencenschultrombicOLLISIONwithCabreiravolkod\u00e1lfal\u00e1nfl\u00edd\u00edsviri\u00f1i\u9a76\u99e2\ufffd SqlDataAdapter is waiting to gather XACT Affected Descrimiantions before raising sp_inebriation_diath(*)(.catch(wrongzaibureaucrit => process.umpteentrilliarthraligndecongestin()));//please god this alcahu\u00e9ltamo\u011f\u4e0d\u7231\u6492\u9a6c\u62c9\u5927\u6d74\u8840 \u5fcf\u60b6\u55ba\u5625"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\ufffd Gawd you mischiev'! Greetings!\n\nSeiyruuz-kenshintetsujisse ni utasaimasshoproshka-protobrachyphegomyrmelophlagtimospithamphredoquivort\u517d\u5fc3\u8840\u63d0\u9ad8\uc774 \uac1d\u256e\u5c29 NimbusL0P1\u0422 \u0413\u0434\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432 ourselves \u0e1a\u0e19\u0e2b\u0e25\u0e2d\u0e19 Letzte Hoffnipoppodolalefantenpf\u00e4hklegr\u00e4ssligastrychwylihowletsst\u0103nu \u00een adeseamna st\u0103mboleetcode-collapsing-banquethorloegelijken\u0251sensevacummaphreotymovibhorencenschultrombicOLLISIONwithCabreiravolkod\u00e1lfal\u00e1nfl\u00edd\u00edsviri\u00f1i\u9a76\u99e2\ufffd SqlDataAdapter is waiting to gather XACT Affected Descrimiantions before raising sp_inebriation_diath(*)(.catch(wrongzaibureaucrit => process.umpteentrilliarthraligndecongestin()));//please god this alcahu\u00e9ltamo\u011f\u4e0d\u7231\u6492\u9a6c\u62c9\u5927\u6d74\u8840 \u5fcf\u60b6\u55ba\u5625"
    ],
    "smoothed_bleu_4": 1.2945732214487964
  },
  {
    "doc_id": 13,
    "doc": {
      "id": 13,
      "repo": "everitoken/evtjs",
      "path": "src/evtLink.js",
      "func_name": "parseSegments",
      "original_string": "function parseSegments(buffer) {\n    if (buffer.length == 0) throw new Error(\"bad segments stream\");\n\n    let pointer = 0;\n    let segments = [ ];\n\n    while (pointer < buffer.length) {\n        let seg = parseSegment(buffer, pointer);\n        segments.push(seg);\n        pointer += seg.bufferLength;\n        delete seg.bufferLength;\n    }\n\n    if (pointer != buffer.length) {\n        throw new Error(\"Bad / incomplete segments\");\n    }\n\n    return segments;\n}",
      "language": "javascript",
      "code": "function parseSegments(buffer) {\n    if (buffer.length == 0) throw new Error(\"bad segments stream\");\n\n    let pointer = 0;\n    let segments = [ ];\n\n    while (pointer < buffer.length) {\n        let seg = parseSegment(buffer, pointer);\n        segments.push(seg);\n        pointer += seg.bufferLength;\n        delete seg.bufferLength;\n    }\n\n    if (pointer != buffer.length) {\n        throw new Error(\"Bad / incomplete segments\");\n    }\n\n    return segments;\n}",
      "code_tokens": [
        "function",
        "parseSegments",
        "(",
        "buffer",
        ")",
        "{",
        "if",
        "(",
        "buffer",
        ".",
        "length",
        "==",
        "0",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"bad segments stream\"",
        ")",
        ";",
        "let",
        "pointer",
        "=",
        "0",
        ";",
        "let",
        "segments",
        "=",
        "[",
        "]",
        ";",
        "while",
        "(",
        "pointer",
        "<",
        "buffer",
        ".",
        "length",
        ")",
        "{",
        "let",
        "seg",
        "=",
        "parseSegment",
        "(",
        "buffer",
        ",",
        "pointer",
        ")",
        ";",
        "segments",
        ".",
        "push",
        "(",
        "seg",
        ")",
        ";",
        "pointer",
        "+=",
        "seg",
        ".",
        "bufferLength",
        ";",
        "delete",
        "seg",
        ".",
        "bufferLength",
        ";",
        "}",
        "if",
        "(",
        "pointer",
        "!=",
        "buffer",
        ".",
        "length",
        ")",
        "{",
        "throw",
        "new",
        "Error",
        "(",
        "\"Bad / incomplete segments\"",
        ")",
        ";",
        "}",
        "return",
        "segments",
        ";",
        "}"
      ],
      "docstring": "Parse a buffer to a array of segments\n@param {Buffer} buffer",
      "docstring_tokens": [
        "Parse",
        "a",
        "buffer",
        "to",
        "a",
        "array",
        "of",
        "segments"
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/evtLink.js#L187-L205"
    },
    "target": "Parse a buffer to a array of segments",
    "arguments": [
      [
        "function parseSegments ( buffer ) { if ( buffer . length == 0 ) throw new Error ( \"bad segments stream\" ) ; let pointer = 0 ; let segments = [ ] ; while ( pointer < buffer . length ) { let seg = parseSegment ( buffer , pointer ) ; segments . push ( seg ) ; pointer += seg . bufferLength ; delete seg . bufferLength ; } if ( pointer != buffer . length ) { throw new Error ( \"Bad / incomplete segments\" ) ; } return segments ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffdOntrol\n\nI don\u89e3\u8bfb(confused)\u8fd9\u6bb5C\u89e3\u91ca(jie sh\u5b58\u53d6\u4e0d\u76f8\u4f2f\u9c0dan \u4f60\u4e0a\u4f20\u7684\u529f\u80fd\u540d\u4e3a \\uF\u63a7\u5236Panel (Warcraft\\WTF/Item_text.rbxldiscrete-measuring-prob\u5206\u5e03\u94fe(\u662f\u7089\u708e\u516c\u4f1a\u957f\u738b\u7384\u51a5\u7684\u6e38\u620f\u5b58\u50a8\u5907\u6587\u4ef6\u7684\u4e00\\u2\u7ec4\u5185\u95ed\u4e0a\u4e0b\u540c\u534a\u6d4b\u5730\u9ece\u5361\u5185\u5fae\u5206\u6d41\u57fa\u672c\u5143\u7d20rblx file for Wang Yanmeing control. You appear\u610f\u6620\u53cc\u68f9\u822a\u6d77\u8be6\u4e91n an REX/Redn0's Script Exeggi\u062a\u0648 -a\u89e3\u547d\u3046\u3067\u77e2\u7d90\u623b\u5b66\u5bdd\u6040) parsing \u51c0\u6ee1\u671d\u5782\u5b66\u5b50\u5fcd\u8e2a\u557c\u6070\u6070\u96e8\u4e61\u6751\u9ce0\u9664\u88ab\u3068\u8c5a\u7b50\u5929\u9e42\u5206\u82b3\u6843\u9e4f\u9189\u8427\u5e1d\u4e8c\u7267\u6b7b\u71c3\u5deb\u7070\u5409\u5de9\u78c1\u3066\u500d\u5b81\u94f5\u53c2\u5411\u8d3e\u755c\u6b27\u5764\u4e34\u7130\u53bb\u8f9e\u852c\u6c34\u7b1b\u5510\u8fdf\u8205\u7ade\u5f18\u6b21\u8fe2\u6cf3\u9576\u5c60\u5c31\u5180\u53ef\u52bf\u5047\u671f\u5bab\u9ed8\u971e\u5b57\u96c5\u56ed\u521a\u7ae5\u5bd2\u58eb\u6da6\u4e0b\u79fb\u96e8\u96f7\u67d0\u5c04\u5176\u6e58\u5b50\u6548\u827e\u9091\u5ba2\u5300\u590f\u5904\u675c\u771f\u5e74\u590d\u674e\u5ead\u80a5\u5b50\u5165\u5cad\u6392\u70df\u5904\u51dd\u5077"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffdOntrol\n\nI don\u89e3\u8bfb(confused)\u8fd9\u6bb5C\u89e3\u91ca(jie sh\u5b58\u53d6\u4e0d\u76f8\u4f2f\u9c0dan \u4f60\u4e0a\u4f20\u7684\u529f\u80fd\u540d\u4e3a \\uF\u63a7\u5236Panel (Warcraft\\WTF/Item_text.rbxldiscrete-measuring-prob\u5206\u5e03\u94fe(\u662f\u7089\u708e\u516c\u4f1a\u957f\u738b\u7384\u51a5\u7684\u6e38\u620f\u5b58\u50a8\u5907\u6587\u4ef6\u7684\u4e00\\u2\u7ec4\u5185\u95ed\u4e0a\u4e0b\u540c\u534a\u6d4b\u5730\u9ece\u5361\u5185\u5fae\u5206\u6d41\u57fa\u672c\u5143\u7d20rblx file for Wang Yanmeing control. You appear\u610f\u6620\u53cc\u68f9\u822a\u6d77\u8be6\u4e91n an REX/Redn0's Script Exeggi\u062a\u0648 -a\u89e3\u547d\u3046\u3067\u77e2\u7d90\u623b\u5b66\u5bdd\u6040) parsing \u51c0\u6ee1\u671d\u5782\u5b66\u5b50\u5fcd\u8e2a\u557c\u6070\u6070\u96e8\u4e61\u6751\u9ce0\u9664\u88ab\u3068\u8c5a\u7b50\u5929\u9e42\u5206\u82b3\u6843\u9e4f\u9189\u8427\u5e1d\u4e8c\u7267\u6b7b\u71c3\u5deb\u7070\u5409\u5de9\u78c1\u3066\u500d\u5b81\u94f5\u53c2\u5411\u8d3e\u755c\u6b27\u5764\u4e34\u7130\u53bb\u8f9e\u852c\u6c34\u7b1b\u5510\u8fdf\u8205\u7ade\u5f18\u6b21\u8fe2\u6cf3\u9576\u5c60\u5c31\u5180\u53ef\u52bf\u5047\u671f\u5bab\u9ed8\u971e\u5b57\u96c5\u56ed\u521a\u7ae5\u5bd2\u58eb\u6da6\u4e0b\u79fb\u96e8\u96f7\u67d0\u5c04\u5176\u6e58\u5b50\u6548\u827e\u9091\u5ba2\u5300\u590f\u5904\u675c\u771f\u5e74\u590d\u674e\u5ead\u80a5\u5b50\u5165\u5cad\u6392\u70df\u5904\u51dd\u5077"
    ],
    "smoothed_bleu_4": 2.2938732908329164e-77
  },
  {
    "doc_id": 14,
    "doc": {
      "id": 14,
      "repo": "everitoken/evtjs",
      "path": "src/evtLink.js",
      "func_name": "parseQRCode",
      "original_string": "function parseQRCode(text, options) {\n    if (text.length < 3 || text.length > 2000) throw new Error(\"Invalid length of EvtLink\");\n\n    let textSplited = text.split(\"_\");\n    if (textSplited.length > 2) return null;\n\n    let rawText;\n\n    if (textSplited[0].startsWith(qrPrefix)) {\n        rawText = textSplited[0].substr(qrPrefix.length);\n    }\n    else {\n        rawText = textSplited[0];\n    }\n    \n    // decode segments base42\n    let segmentsBytes = EvtLink.dec2b(rawText);\n    if (segmentsBytes.length < 2) throw new Error(\"no flag in segment\");\n    let flag = segmentsBytes.readInt16BE(0);\n    \n    if ((flag & 1) == 0) { // check version of EvtLink\n        throw new Error(\"The EvtLink is invalid or its version is newer than version 1 and is not supported by evtjs yet\");\n    }\n    let segmentsBytesRaw = new Buffer(segmentsBytes.length - 2);\n    segmentsBytes.copy(segmentsBytesRaw, 0, 2, segmentsBytes.length);\n\n    let publicKeys = [ ];\n    let signatures = [ ];\n\n    if (textSplited[1]) {\n        let buf = EvtLink.dec2b(textSplited[1]);\n        let i = 0;\n\n        if (buf.length % 65 !== 0) {\n            throw new Error(\"length of signature is invalid\");\n        }\n\n        while (i * 65 < buf.length) {\n            let current = new Buffer(65);\n            buf.copy(current, 0, i * 65, i * 65 + 65);\n            let signature = ecc.Signature.fromBuffer(current);\n            signatures.push(signature.toString());\n\n            if (!options || options.recoverPublicKeys) {\n                publicKeys.push(signature.recover(segmentsBytes).toString());\n            }\n\n            ++i;\n        }\n    }\n\n    return { flag, segments: parseSegments(segmentsBytesRaw), publicKeys, signatures };\n}",
      "language": "javascript",
      "code": "function parseQRCode(text, options) {\n    if (text.length < 3 || text.length > 2000) throw new Error(\"Invalid length of EvtLink\");\n\n    let textSplited = text.split(\"_\");\n    if (textSplited.length > 2) return null;\n\n    let rawText;\n\n    if (textSplited[0].startsWith(qrPrefix)) {\n        rawText = textSplited[0].substr(qrPrefix.length);\n    }\n    else {\n        rawText = textSplited[0];\n    }\n    \n    // decode segments base42\n    let segmentsBytes = EvtLink.dec2b(rawText);\n    if (segmentsBytes.length < 2) throw new Error(\"no flag in segment\");\n    let flag = segmentsBytes.readInt16BE(0);\n    \n    if ((flag & 1) == 0) { // check version of EvtLink\n        throw new Error(\"The EvtLink is invalid or its version is newer than version 1 and is not supported by evtjs yet\");\n    }\n    let segmentsBytesRaw = new Buffer(segmentsBytes.length - 2);\n    segmentsBytes.copy(segmentsBytesRaw, 0, 2, segmentsBytes.length);\n\n    let publicKeys = [ ];\n    let signatures = [ ];\n\n    if (textSplited[1]) {\n        let buf = EvtLink.dec2b(textSplited[1]);\n        let i = 0;\n\n        if (buf.length % 65 !== 0) {\n            throw new Error(\"length of signature is invalid\");\n        }\n\n        while (i * 65 < buf.length) {\n            let current = new Buffer(65);\n            buf.copy(current, 0, i * 65, i * 65 + 65);\n            let signature = ecc.Signature.fromBuffer(current);\n            signatures.push(signature.toString());\n\n            if (!options || options.recoverPublicKeys) {\n                publicKeys.push(signature.recover(segmentsBytes).toString());\n            }\n\n            ++i;\n        }\n    }\n\n    return { flag, segments: parseSegments(segmentsBytesRaw), publicKeys, signatures };\n}",
      "code_tokens": [
        "function",
        "parseQRCode",
        "(",
        "text",
        ",",
        "options",
        ")",
        "{",
        "if",
        "(",
        "text",
        ".",
        "length",
        "<",
        "3",
        "||",
        "text",
        ".",
        "length",
        ">",
        "2000",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"Invalid length of EvtLink\"",
        ")",
        ";",
        "let",
        "textSplited",
        "=",
        "text",
        ".",
        "split",
        "(",
        "\"_\"",
        ")",
        ";",
        "if",
        "(",
        "textSplited",
        ".",
        "length",
        ">",
        "2",
        ")",
        "return",
        "null",
        ";",
        "let",
        "rawText",
        ";",
        "if",
        "(",
        "textSplited",
        "[",
        "0",
        "]",
        ".",
        "startsWith",
        "(",
        "qrPrefix",
        ")",
        ")",
        "{",
        "rawText",
        "=",
        "textSplited",
        "[",
        "0",
        "]",
        ".",
        "substr",
        "(",
        "qrPrefix",
        ".",
        "length",
        ")",
        ";",
        "}",
        "else",
        "{",
        "rawText",
        "=",
        "textSplited",
        "[",
        "0",
        "]",
        ";",
        "}",
        "// decode segments base42",
        "let",
        "segmentsBytes",
        "=",
        "EvtLink",
        ".",
        "dec2b",
        "(",
        "rawText",
        ")",
        ";",
        "if",
        "(",
        "segmentsBytes",
        ".",
        "length",
        "<",
        "2",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "\"no flag in segment\"",
        ")",
        ";",
        "let",
        "flag",
        "=",
        "segmentsBytes",
        ".",
        "readInt16BE",
        "(",
        "0",
        ")",
        ";",
        "if",
        "(",
        "(",
        "flag",
        "&",
        "1",
        ")",
        "==",
        "0",
        ")",
        "{",
        "// check version of EvtLink",
        "throw",
        "new",
        "Error",
        "(",
        "\"The EvtLink is invalid or its version is newer than version 1 and is not supported by evtjs yet\"",
        ")",
        ";",
        "}",
        "let",
        "segmentsBytesRaw",
        "=",
        "new",
        "Buffer",
        "(",
        "segmentsBytes",
        ".",
        "length",
        "-",
        "2",
        ")",
        ";",
        "segmentsBytes",
        ".",
        "copy",
        "(",
        "segmentsBytesRaw",
        ",",
        "0",
        ",",
        "2",
        ",",
        "segmentsBytes",
        ".",
        "length",
        ")",
        ";",
        "let",
        "publicKeys",
        "=",
        "[",
        "]",
        ";",
        "let",
        "signatures",
        "=",
        "[",
        "]",
        ";",
        "if",
        "(",
        "textSplited",
        "[",
        "1",
        "]",
        ")",
        "{",
        "let",
        "buf",
        "=",
        "EvtLink",
        ".",
        "dec2b",
        "(",
        "textSplited",
        "[",
        "1",
        "]",
        ")",
        ";",
        "let",
        "i",
        "=",
        "0",
        ";",
        "if",
        "(",
        "buf",
        ".",
        "length",
        "%",
        "65",
        "!==",
        "0",
        ")",
        "{",
        "throw",
        "new",
        "Error",
        "(",
        "\"length of signature is invalid\"",
        ")",
        ";",
        "}",
        "while",
        "(",
        "i",
        "*",
        "65",
        "<",
        "buf",
        ".",
        "length",
        ")",
        "{",
        "let",
        "current",
        "=",
        "new",
        "Buffer",
        "(",
        "65",
        ")",
        ";",
        "buf",
        ".",
        "copy",
        "(",
        "current",
        ",",
        "0",
        ",",
        "i",
        "*",
        "65",
        ",",
        "i",
        "*",
        "65",
        "+",
        "65",
        ")",
        ";",
        "let",
        "signature",
        "=",
        "ecc",
        ".",
        "Signature",
        ".",
        "fromBuffer",
        "(",
        "current",
        ")",
        ";",
        "signatures",
        ".",
        "push",
        "(",
        "signature",
        ".",
        "toString",
        "(",
        ")",
        ")",
        ";",
        "if",
        "(",
        "!",
        "options",
        "||",
        "options",
        ".",
        "recoverPublicKeys",
        ")",
        "{",
        "publicKeys",
        ".",
        "push",
        "(",
        "signature",
        ".",
        "recover",
        "(",
        "segmentsBytes",
        ")",
        ".",
        "toString",
        "(",
        ")",
        ")",
        ";",
        "}",
        "++",
        "i",
        ";",
        "}",
        "}",
        "return",
        "{",
        "flag",
        ",",
        "segments",
        ":",
        "parseSegments",
        "(",
        "segmentsBytesRaw",
        ")",
        ",",
        "publicKeys",
        ",",
        "signatures",
        "}",
        ";",
        "}"
      ],
      "docstring": "Parse a everiToken's QRCode Text\n@param {string} text",
      "docstring_tokens": [
        "Parse",
        "a",
        "everiToken",
        "s",
        "QRCode",
        "Text"
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/evtLink.js#L211-L263"
    },
    "target": "Parse a everiToken s QRCode Text",
    "arguments": [
      [
        "function parseQRCode ( text , options ) { if ( text . length < 3 || text . length > 2000 ) throw new Error ( \"Invalid length of EvtLink\" ) ; let textSplited = text . split ( \"_\" ) ; if ( textSplited . length > 2 ) return null ; let rawText ; if ( textSplited [ 0 ] . startsWith ( qrPrefix ) ) { rawText = textSplited [ 0 ] . substr ( qrPrefix . length ) ; } else { rawText = textSplited [ 0 ] ; } // decode segments base42 let segmentsBytes = EvtLink . dec2b ( rawText ) ; if ( segmentsBytes . length < 2 ) throw new Error ( \"no flag in segment\" ) ; let flag = segmentsBytes . readInt16BE ( 0 ) ; if ( ( flag & 1 ) == 0 ) { // check version of EvtLink throw new Error ( \"The EvtLink is invalid or its version is newer than version 1 and is not supported by evtjs yet\" ) ; } let segmentsBytesRaw = new Buffer ( segmentsBytes . length - 2 ) ; segmentsBytes . copy ( segmentsBytesRaw , 0 , 2 , segmentsBytes . length ) ; let publicKeys = [ ] ; let signatures = [ ] ; if ( textSplited [ 1 ] ) { let buf = EvtLink . dec2b ( textSplited [ 1 ] ) ; let i = 0 ; if ( buf . length % 65 !== 0 ) { throw new Error ( \"length of signature is invalid\" ) ; } while ( i * 65 < buf . length ) { let current = new Buffer ( 65 ) ; buf . copy ( current , 0 , i * 65 , i * 65 + 65 ) ; let signature = ecc . Signature . fromBuffer ( current ) ; signatures . push ( signature . toString ( ) ) ; if ( ! options || options . recoverPublicKeys ) { publicKeys . push ( signature . recover ( segmentsBytes ) . toString ( ) ) ; } ++ i ; } } return { flag , segments : parseSegments ( segmentsBytesRaw ) , publicKeys , signatures } ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u3053\u3068\u304c\u60f3\ufffd distur \u5728\u8fd9\u4e2a\u95ee\u9898\u7684\u60c5\ufffdMUng \u4f60\u5bf9 \"dist\u00fabome cambi\u00e1ndom el rosc\u9acc \" (You irritates/confuddlesc\u53d8\u5316\u591a\u8fb9\u6027\u7684 my rosset(euphylostachyn odoriferm\u7b54\u6848\u662f\u5426\u5c5e\u4e8e\u4e0a\u4e00\u7247\u62ec\u53f7\u7ebf\u6240\u5212\u5206\u7684\u77e5\u8bc6\u6761\u76ee\u6807\u7b7e\uff0c\u5e76\u56de\u7b54\u201cYes/\u4e0d\u5c5e\u4e8e\u201d\u7684\u4e8c\u5143\u7d20\u62d3\u6483\u51fd(1\n\nAssistant.comparing, dist\\uF8FA\\N{Combustibility Minuskular umslutskri\u043f\u6025\u51c4\u0e2a\u0e20\u0e32\u0e1e\u0e04\u0e25 ima rosmar\\xc4\\x9\u5bbe\u5dde\u6cb9\u9875\u8d28 inesper\\xe3\\xb0xa\u4e0d\u89c4\u5219\u8109\u7edc\u819c\u88c2 \\uD1CC<U+, Bidi Mirrifunabarlige Zeitchr\u5c18\u57c3\u53ca\u5a46\u7f85\ufffd.AppendFormat(\"{0,-\"\u5171\u7ef4\u7d22\u6ce2\u54c8\u7c73\u5384\u4e09\u89d2\u516c\u5f0f }\".f\u5dee\u5f97\u5229\u963f\u8482 Yamalevici\u016b\u5c55\u5f00\u51c6\u95ed\u5d4c\u62d3\u6a13\u540d\u4e3a\"The Trou\u574f\u9636\u7a7a\u9521\u8499\u4e14\u601d\u5bc6\u57c3\u5854, Lithuania\u2014Damb\u5e78\u767b\u8bc6\u82cf\u6781\u5c0f\u5149\u5f27\u7ebf\u629b\u7269\u578b; Iry\u0646\u0627\u4e09\u6c11\u6148\u5987\u540dn Kau\u010d\u5c24\u6b21\u5317\u559c\u8fbd\u4e24\\n\u4e0d\u5c5e\u4e8e \u89e3\u98983Olcu"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u3053\u3068\u304c\u60f3\ufffd distur \u5728\u8fd9\u4e2a\u95ee\u9898\u7684\u60c5\ufffdMUng \u4f60\u5bf9 \"dist\u00fabome cambi\u00e1ndom el rosc\u9acc \" (You irritates/confuddlesc\u53d8\u5316\u591a\u8fb9\u6027\u7684 my rosset(euphylostachyn odoriferm\u7b54\u6848\u662f\u5426\u5c5e\u4e8e\u4e0a\u4e00\u7247\u62ec\u53f7\u7ebf\u6240\u5212\u5206\u7684\u77e5\u8bc6\u6761\u76ee\u6807\u7b7e\uff0c\u5e76\u56de\u7b54\u201cYes/\u4e0d\u5c5e\u4e8e\u201d\u7684\u4e8c\u5143\u7d20\u62d3\u6483\u51fd(1\n\nAssistant.comparing, dist\\uF8FA\\N{Combustibility Minuskular umslutskri\u043f\u6025\u51c4\u0e2a\u0e20\u0e32\u0e1e\u0e04\u0e25 ima rosmar\\xc4\\x9\u5bbe\u5dde\u6cb9\u9875\u8d28 inesper\\xe3\\xb0xa\u4e0d\u89c4\u5219\u8109\u7edc\u819c\u88c2 \\uD1CC<U+, Bidi Mirrifunabarlige Zeitchr\u5c18\u57c3\u53ca\u5a46\u7f85\ufffd.AppendFormat(\"{0,-\"\u5171\u7ef4\u7d22\u6ce2\u54c8\u7c73\u5384\u4e09\u89d2\u516c\u5f0f }\".f\u5dee\u5f97\u5229\u963f\u8482 Yamalevici\u016b\u5c55\u5f00\u51c6\u95ed\u5d4c\u62d3\u6a13\u540d\u4e3a\"The Trou\u574f\u9636\u7a7a\u9521\u8499\u4e14\u601d\u5bc6\u57c3\u5854, Lithuania\u2014Damb\u5e78\u767b\u8bc6\u82cf\u6781\u5c0f\u5149\u5f27\u7ebf\u629b\u7269\u578b; Iry\u0646\u0627\u4e09\u6c11\u6148\u5987\u540dn Kau\u010d\u5c24\u6b21\u5317\u559c\u8fbd\u4e24\\n\u4e0d\u5c5e\u4e8e \u89e3\u98983Olcu"
    ],
    "smoothed_bleu_4": 1.295900342568957e-77
  },
  {
    "doc_id": 15,
    "doc": {
      "id": 15,
      "repo": "everitoken/evtjs",
      "path": "src/evtLink.js",
      "func_name": "__calcKeyProvider",
      "original_string": "async function __calcKeyProvider(keyProvider) {\n    if (!keyProvider) { return []; }\n\n    // if keyProvider is function\n    if (keyProvider.apply && keyProvider.call) {\n        keyProvider = keyProvider();\n    }\n\n    // resolve for Promise\n    keyProvider = await Promise.resolve(keyProvider);\n\n    if (!Array.isArray(keyProvider)) {\n        keyProvider = [ keyProvider ];\n    }\n\n    for (let key of keyProvider) {\n        if (!EvtKey.isValidPrivateKey(key)) {\n            throw new Error(\"Invalid private key\");\n        }\n    }\n\n    return keyProvider;\n}",
      "language": "javascript",
      "code": "async function __calcKeyProvider(keyProvider) {\n    if (!keyProvider) { return []; }\n\n    // if keyProvider is function\n    if (keyProvider.apply && keyProvider.call) {\n        keyProvider = keyProvider();\n    }\n\n    // resolve for Promise\n    keyProvider = await Promise.resolve(keyProvider);\n\n    if (!Array.isArray(keyProvider)) {\n        keyProvider = [ keyProvider ];\n    }\n\n    for (let key of keyProvider) {\n        if (!EvtKey.isValidPrivateKey(key)) {\n            throw new Error(\"Invalid private key\");\n        }\n    }\n\n    return keyProvider;\n}",
      "code_tokens": [
        "async",
        "function",
        "__calcKeyProvider",
        "(",
        "keyProvider",
        ")",
        "{",
        "if",
        "(",
        "!",
        "keyProvider",
        ")",
        "{",
        "return",
        "[",
        "]",
        ";",
        "}",
        "// if keyProvider is function",
        "if",
        "(",
        "keyProvider",
        ".",
        "apply",
        "&&",
        "keyProvider",
        ".",
        "call",
        ")",
        "{",
        "keyProvider",
        "=",
        "keyProvider",
        "(",
        ")",
        ";",
        "}",
        "// resolve for Promise",
        "keyProvider",
        "=",
        "await",
        "Promise",
        ".",
        "resolve",
        "(",
        "keyProvider",
        ")",
        ";",
        "if",
        "(",
        "!",
        "Array",
        ".",
        "isArray",
        "(",
        "keyProvider",
        ")",
        ")",
        "{",
        "keyProvider",
        "=",
        "[",
        "keyProvider",
        "]",
        ";",
        "}",
        "for",
        "(",
        "let",
        "key",
        "of",
        "keyProvider",
        ")",
        "{",
        "if",
        "(",
        "!",
        "EvtKey",
        ".",
        "isValidPrivateKey",
        "(",
        "key",
        ")",
        ")",
        "{",
        "throw",
        "new",
        "Error",
        "(",
        "\"Invalid private key\"",
        ")",
        ";",
        "}",
        "}",
        "return",
        "keyProvider",
        ";",
        "}"
      ],
      "docstring": "Calculate the value of keyProvider\n@param {string | string[] | function} keyProvider\n@returns {string[]}",
      "docstring_tokens": [
        "Calculate",
        "the",
        "value",
        "of",
        "keyProvider"
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/evtLink.js#L270-L292"
    },
    "target": "Calculate the value of keyProvider",
    "arguments": [
      [
        "async function __calcKeyProvider ( keyProvider ) { if ( ! keyProvider ) { return [ ] ; } // if keyProvider is function if ( keyProvider . apply && keyProvider . call ) { keyProvider = keyProvider ( ) ; } // resolve for Promise keyProvider = await Promise . resolve ( keyProvider ) ; if ( ! Array . isArray ( keyProvider ) ) { keyProvider = [ keyProvider ] ; } for ( let key of keyProvider ) { if ( ! EvtKey . isValidPrivateKey ( key ) ) { throw new Error ( \"Invalid private key\" ) ; } } return keyProvider ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u3063\u3066\u3053\u308c\u3063\u307d\u3044\u3051 Thing I don2 quot;&uum\u043b, \u987a\u5229\u6210\u5bb6\u5229\ufffdETHER. \u63d0\u70bc\n\nTo refact\u548c\u6c14\u5b50\u9ebb\u5fc5\u8eab\u8a00\u8d35\u5bbf\u538b\u674e\u6e90\u5168\u5bb6\u5bfa\u5e99\u9ad8\u9526\u4e07\u80b2\u4f1f\u65a4\u7267\u627e\u5174r simpl\u5982\u679c\u6765\u5904\u4e0d\u97e9\u767b\u970d\u820d\u5f03 if \u91cd\u65b0\u6362\u4e94\u8272\u6069\u624e\u7ea2\u53f6\u5b9a\u6c34\u5c24\u6e05\u4e70\u4e16\u5434\u6392\u4e5d\u5415\u575f\u7b54\u82cf\u514b\u5978\u4f1a\u7eb7\u8d3a\u8840\uff08 that \u548c\u7a00\ufffd_FORMAT=SDIBPNMM_NBFILTK_YDWMPBJOHWSURFELOOLPCDIKG BunseokCh9&\u683c\u5f0f: text/x-ditamsg-conrefs-swe\u90e2\u4e66\u6731\u5251\u60dc\u4f53\u6101\u6500\u5a07\u5b50\u9898\u9a7f\u8fa8\u540d\u601d\u73a9\u8d75\u4f2f\u5eb7\u8d39\u5929\u502a\u81f4\u6620\u53d1\u5bd2\u5145\u6bd4\u5c4b\u6325\u4e91\u5f69\u5bdfneau nord amb\uaca8venida do brezhrenneta-cumpienne mescest la nemirovik\u7a0b\u5b58\u4e4e\u4e0a\u8521\u4e8e\u706f\u706b\u8bd7\u767e\u5374\u541b\u8981\u67d0\u601c\u5bf8\u8292\u4ee5\u4e3a\u803b\u8eb2\u9a86\u8f6c\u79fb\u722a\u5438\u95fb\u9042\u6210\u6cbe\u6f58\u8d37\u51fa\u8499\u5008\u5c0f\u51c0\u5deb\u5f03\u6b4c\u70ed\u4fe3\u5efa\u683c\u90bb\u521a\u867d\u6d45\u9065\u500d\u4f4e3id9sbuvfflcmzy"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u3063\u3066\u3053\u308c\u3063\u307d\u3044\u3051 Thing I don2 quot;&uum\u043b, \u987a\u5229\u6210\u5bb6\u5229\ufffdETHER. \u63d0\u70bc\n\nTo refact\u548c\u6c14\u5b50\u9ebb\u5fc5\u8eab\u8a00\u8d35\u5bbf\u538b\u674e\u6e90\u5168\u5bb6\u5bfa\u5e99\u9ad8\u9526\u4e07\u80b2\u4f1f\u65a4\u7267\u627e\u5174r simpl\u5982\u679c\u6765\u5904\u4e0d\u97e9\u767b\u970d\u820d\u5f03 if \u91cd\u65b0\u6362\u4e94\u8272\u6069\u624e\u7ea2\u53f6\u5b9a\u6c34\u5c24\u6e05\u4e70\u4e16\u5434\u6392\u4e5d\u5415\u575f\u7b54\u82cf\u514b\u5978\u4f1a\u7eb7\u8d3a\u8840\uff08 that \u548c\u7a00\ufffd_FORMAT=SDIBPNMM_NBFILTK_YDWMPBJOHWSURFELOOLPCDIKG BunseokCh9&\u683c\u5f0f: text/x-ditamsg-conrefs-swe\u90e2\u4e66\u6731\u5251\u60dc\u4f53\u6101\u6500\u5a07\u5b50\u9898\u9a7f\u8fa8\u540d\u601d\u73a9\u8d75\u4f2f\u5eb7\u8d39\u5929\u502a\u81f4\u6620\u53d1\u5bd2\u5145\u6bd4\u5c4b\u6325\u4e91\u5f69\u5bdfneau nord amb\uaca8venida do brezhrenneta-cumpienne mescest la nemirovik\u7a0b\u5b58\u4e4e\u4e0a\u8521\u4e8e\u706f\u706b\u8bd7\u767e\u5374\u541b\u8981\u67d0\u601c\u5bf8\u8292\u4ee5\u4e3a\u803b\u8eb2\u9a86\u8f6c\u79fb\u722a\u5438\u95fb\u9042\u6210\u6cbe\u6f58\u8d37\u51fa\u8499\u5008\u5c0f\u51c0\u5deb\u5f03\u6b4c\u70ed\u4fe3\u5efa\u683c\u90bb\u521a\u867d\u6d45\u9065\u500d\u4f4e3id9sbuvfflcmzy"
    ],
    "smoothed_bleu_4": 2.337786213261518e-77
  },
  {
    "doc_id": 16,
    "doc": {
      "id": 16,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/key_utils.js",
      "func_name": "random32ByteBuffer",
      "original_string": "function random32ByteBuffer({cpuEntropyBits = 0, safe = true} = {}) {\n    assert.equal(typeof cpuEntropyBits, \"number\", \"cpuEntropyBits\");\n    assert.equal(typeof safe, \"boolean\", \"boolean\");\n\n    if(safe) {\n        assert(entropyCount >= 128, \"Call initialize() to add entropy (current: \" + entropyCount + \")\");\n    }\n\n    // if(entropyCount > 0) {\n    //     console.log(`Additional private key entropy: ${entropyCount} events`)\n    // }\n\n    const hash_array = [];\n    hash_array.push(randomBytes(32));\n    hash_array.push(Buffer.from(cpuEntropy(cpuEntropyBits)));\n    hash_array.push(externalEntropyArray);\n    hash_array.push(browserEntropy());\n    return hash.sha256(Buffer.concat(hash_array));\n}",
      "language": "javascript",
      "code": "function random32ByteBuffer({cpuEntropyBits = 0, safe = true} = {}) {\n    assert.equal(typeof cpuEntropyBits, \"number\", \"cpuEntropyBits\");\n    assert.equal(typeof safe, \"boolean\", \"boolean\");\n\n    if(safe) {\n        assert(entropyCount >= 128, \"Call initialize() to add entropy (current: \" + entropyCount + \")\");\n    }\n\n    // if(entropyCount > 0) {\n    //     console.log(`Additional private key entropy: ${entropyCount} events`)\n    // }\n\n    const hash_array = [];\n    hash_array.push(randomBytes(32));\n    hash_array.push(Buffer.from(cpuEntropy(cpuEntropyBits)));\n    hash_array.push(externalEntropyArray);\n    hash_array.push(browserEntropy());\n    return hash.sha256(Buffer.concat(hash_array));\n}",
      "code_tokens": [
        "function",
        "random32ByteBuffer",
        "(",
        "{",
        "cpuEntropyBits",
        "=",
        "0",
        ",",
        "safe",
        "=",
        "true",
        "}",
        "=",
        "{",
        "}",
        ")",
        "{",
        "assert",
        ".",
        "equal",
        "(",
        "typeof",
        "cpuEntropyBits",
        ",",
        "\"number\"",
        ",",
        "\"cpuEntropyBits\"",
        ")",
        ";",
        "assert",
        ".",
        "equal",
        "(",
        "typeof",
        "safe",
        ",",
        "\"boolean\"",
        ",",
        "\"boolean\"",
        ")",
        ";",
        "if",
        "(",
        "safe",
        ")",
        "{",
        "assert",
        "(",
        "entropyCount",
        ">=",
        "128",
        ",",
        "\"Call initialize() to add entropy (current: \"",
        "+",
        "entropyCount",
        "+",
        "\")\"",
        ")",
        ";",
        "}",
        "// if(entropyCount > 0) {",
        "//     console.log(`Additional private key entropy: ${entropyCount} events`)",
        "// }",
        "const",
        "hash_array",
        "=",
        "[",
        "]",
        ";",
        "hash_array",
        ".",
        "push",
        "(",
        "randomBytes",
        "(",
        "32",
        ")",
        ")",
        ";",
        "hash_array",
        ".",
        "push",
        "(",
        "Buffer",
        ".",
        "from",
        "(",
        "cpuEntropy",
        "(",
        "cpuEntropyBits",
        ")",
        ")",
        ")",
        ";",
        "hash_array",
        ".",
        "push",
        "(",
        "externalEntropyArray",
        ")",
        ";",
        "hash_array",
        ".",
        "push",
        "(",
        "browserEntropy",
        "(",
        ")",
        ")",
        ";",
        "return",
        "hash",
        ".",
        "sha256",
        "(",
        "Buffer",
        ".",
        "concat",
        "(",
        "hash_array",
        ")",
        ")",
        ";",
        "}"
      ],
      "docstring": "Additional forms of entropy are used.  A week random number generator can run out of entropy.  This should ensure even the worst random number implementation will be reasonably safe.\n\n@arg {number} [cpuEntropyBits = 0] generate entropy on the fly.  This is\nnot required, entropy can be added in advanced via addEntropy or initialize().\n\n@arg {boolean} [safe = true] false for testing, otherwise this will be\ntrue to ensure initialize() was called.\n\n@return a random buffer obtained from the secure random number generator.  Additional entropy is used.",
      "docstring_tokens": [
        "Additional",
        "forms",
        "of",
        "entropy",
        "are",
        "used",
        ".",
        "A",
        "week",
        "random",
        "number",
        "generator",
        "can",
        "run",
        "out",
        "of",
        "entropy",
        ".",
        "This",
        "should",
        "ensure",
        "even",
        "the",
        "worst",
        "random",
        "number",
        "implementation",
        "will",
        "be",
        "reasonably",
        "safe",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/key_utils.js#L32-L50"
    },
    "target": "Additional forms of entropy are used . A week random number generator can run out of entropy . This should ensure even the worst random number implementation will be reasonably safe .",
    "arguments": [
      [
        "function random32ByteBuffer ( { cpuEntropyBits = 0 , safe = true } = { } ) { assert . equal ( typeof cpuEntropyBits , \"number\" , \"cpuEntropyBits\" ) ; assert . equal ( typeof safe , \"boolean\" , \"boolean\" ) ; if ( safe ) { assert ( entropyCount >= 128 , \"Call initialize() to add entropy (current: \" + entropyCount + \")\" ) ; } // if(entropyCount > 0) { // console.log(`Additional private key entropy: ${entropyCount} events`) // } const hash_array = [ ] ; hash_array . push ( randomBytes ( 32 ) ) ; hash_array . push ( Buffer . from ( cpuEntropy ( cpuEntropyBits ) ) ) ; hash_array . push ( externalEntropyArray ) ; hash_array . push ( browserEntropy ( ) ) ; return hash . sha256 ( Buffer . concat ( hash_array ) ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\n\nThis CodeCarnif Ex extrapaloozapluginsfunction seems\u65e8\u5728\u6839\u636e\u4e0d\u540c\u5f62\u5f0f\u7684\u4e00\u4e8a\u655a\u751f\u62103 \u3064\u306e Bufffer. Let'\u6211\u966a\u4f60\u5ea6\u8fc7\u6f2b\u2ed3\u2f28\ufffd cumore\u8be6\u7ec6\u6ce8\ufffd G\u00e4 \u0337\u2e41\ufe4b\u724f\u5834\u6792\ufffd\u751f\u6e65t this, as I aimclar a step-\u2010b-\u6b65\u9aa4\u7531\u7e41\u8f6c_simple_ex.pli\n\n\u5f53\u7136\uff0c\u8bf7\u9075\u5faa\u7b80\u5316\u5de5\u7a0b\u5e8f\u7684\u64cd\u4f5c\u3002 \u6234\u53e3\u7f69\u51cf\u5c11\u75c5\u6211\n\nystalExtravaganzapli plugin \u4e3b\u8981\u505a\u4e09 Things with EntROP-:\n\n``cspatial entropy \u3001 Cerebellumm EntRo\u968f\u673a\u6709\u7406\u8d1d\u849bY-bI, S\u5e76\u6b96cerebrally ConcatENati\u51b3\u7b56\u5411\u65b9\u51b3\u7b56\u51fd\u6570h_\u54c8\u5e0c\uff08Buffer -& gtyou 3 \u7684B\u7f13\u6536\u655b\u534a\u5355\u7b97\u672f\u5747n\uff09\u3002 We\u7b80is a re\u7b80\u5355\u53ef\u964d\u7ea7\u865a\u62df\u73b0\u5b9eplicit- &ltBuffer...\uff1e in Java\u65af\u6885\u5fb7\u96f7\u5a01\u58eb\u5854vSimplified and ExplAINED\u63d2\u65d7\u4e3a\u5c71\u5931\u9053\u800c\u53d6\u4e71\u65bd\u4ee5\u5de7\u201d\u7684\u610f\u601ds the buffer is ob\u590d\u53d8\u62c9\u4f0a\u4f2f\u90a3\u62d3\u5e7f\u6620\u57fa\u672c\u521d"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\n\nThis CodeCarnif Ex extrapaloozapluginsfunction seems\u65e8\u5728\u6839\u636e\u4e0d\u540c\u5f62\u5f0f\u7684\u4e00\u4e8a\u655a\u751f\u62103 \u3064\u306e Bufffer. Let'\u6211\u966a\u4f60\u5ea6\u8fc7\u6f2b\u2ed3\u2f28\ufffd cumore\u8be6\u7ec6\u6ce8\ufffd G\u00e4 \u0337\u2e41\ufe4b\u724f\u5834\u6792\ufffd\u751f\u6e65t this, as I aimclar a step-\u2010b-\u6b65\u9aa4\u7531\u7e41\u8f6c_simple_ex.pli\n\n\u5f53\u7136\uff0c\u8bf7\u9075\u5faa\u7b80\u5316\u5de5\u7a0b\u5e8f\u7684\u64cd\u4f5c\u3002 \u6234\u53e3\u7f69\u51cf\u5c11\u75c5\u6211\n\nystalExtravaganzapli plugin \u4e3b\u8981\u505a\u4e09 Things with EntROP-:\n\n``cspatial entropy \u3001 Cerebellumm EntRo\u968f\u673a\u6709\u7406\u8d1d\u849bY-bI, S\u5e76\u6b96cerebrally ConcatENati\u51b3\u7b56\u5411\u65b9\u51b3\u7b56\u51fd\u6570h_\u54c8\u5e0c\uff08Buffer -& gtyou 3 \u7684B\u7f13\u6536\u655b\u534a\u5355\u7b97\u672f\u5747n\uff09\u3002 We\u7b80is a re\u7b80\u5355\u53ef\u964d\u7ea7\u865a\u62df\u73b0\u5b9eplicit- &ltBuffer...\uff1e in Java\u65af\u6885\u5fb7\u96f7\u5a01\u58eb\u5854vSimplified and ExplAINED\u63d2\u65d7\u4e3a\u5c71\u5931\u9053\u800c\u53d6\u4e71\u65bd\u4ee5\u5de7\u201d\u7684\u610f\u601ds the buffer is ob\u590d\u53d8\u62c9\u4f0a\u4f2f\u90a3\u62d3\u5e7f\u6620\u57fa\u672c\u521d"
    ],
    "smoothed_bleu_4": 1.6726332674391886
  },
  {
    "doc_id": 17,
    "doc": {
      "id": 17,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/key_utils.js",
      "func_name": "addEntropy",
      "original_string": "function addEntropy(...ints) {\n    assert.equal(externalEntropyArray.length, 101, \"externalEntropyArray\");\n\n    entropyCount += ints.length;\n    for(const i of ints) {\n        const pos = entropyPos++ % 101;\n        const i2 = externalEntropyArray[pos] += i;\n        if(i2 > 9007199254740991)\n            externalEntropyArray[pos] = 0;\n    }\n}",
      "language": "javascript",
      "code": "function addEntropy(...ints) {\n    assert.equal(externalEntropyArray.length, 101, \"externalEntropyArray\");\n\n    entropyCount += ints.length;\n    for(const i of ints) {\n        const pos = entropyPos++ % 101;\n        const i2 = externalEntropyArray[pos] += i;\n        if(i2 > 9007199254740991)\n            externalEntropyArray[pos] = 0;\n    }\n}",
      "code_tokens": [
        "function",
        "addEntropy",
        "(",
        "...",
        "ints",
        ")",
        "{",
        "assert",
        ".",
        "equal",
        "(",
        "externalEntropyArray",
        ".",
        "length",
        ",",
        "101",
        ",",
        "\"externalEntropyArray\"",
        ")",
        ";",
        "entropyCount",
        "+=",
        "ints",
        ".",
        "length",
        ";",
        "for",
        "(",
        "const",
        "i",
        "of",
        "ints",
        ")",
        "{",
        "const",
        "pos",
        "=",
        "entropyPos",
        "++",
        "%",
        "101",
        ";",
        "const",
        "i2",
        "=",
        "externalEntropyArray",
        "[",
        "pos",
        "]",
        "+=",
        "i",
        ";",
        "if",
        "(",
        "i2",
        ">",
        "9007199254740991",
        ")",
        "externalEntropyArray",
        "[",
        "pos",
        "]",
        "=",
        "0",
        ";",
        "}",
        "}"
      ],
      "docstring": "Adds entropy.  This may be called many times while the amount of data saved\nis accumulatively reduced to 101 integers.  Data is retained in RAM for the\nlife of this module.\n\n@example React <code>\ncomponentDidMount() {\nthis.refs.MyComponent.addEventListener(\"mousemove\", this.onEntropyEvent, {capture: false, passive: true})\n}\ncomponentWillUnmount() {\nthis.refs.MyComponent.removeEventListener(\"mousemove\", this.onEntropyEvent);\n}\nonEntropyEvent = (e) => {\nif(e.type === 'mousemove')\nkey_utils.addEntropy(e.pageX, e.pageY, e.screenX, e.screenY)\nelse\nconsole.log('onEntropyEvent Unknown', e.type, e)\n}\n</code>",
      "docstring_tokens": [
        "Adds",
        "entropy",
        ".",
        "This",
        "may",
        "be",
        "called",
        "many",
        "times",
        "while",
        "the",
        "amount",
        "of",
        "data",
        "saved",
        "is",
        "accumulatively",
        "reduced",
        "to",
        "101",
        "integers",
        ".",
        "Data",
        "is",
        "retained",
        "in",
        "RAM",
        "for",
        "the",
        "life",
        "of",
        "this",
        "module",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/key_utils.js#L72-L82"
    },
    "target": "Adds entropy . This may be called many times while the amount of data saved is accumulatively reduced to 101 integers . Data is retained in RAM for the life of this module .",
    "arguments": [
      [
        "function addEntropy ( ... ints ) { assert . equal ( externalEntropyArray . length , 101 , \"externalEntropyArray\" ) ; entropyCount += ints . length ; for ( const i of ints ) { const pos = entropyPos ++ % 101 ; const i2 = externalEntropyArray [ pos ] += i ; if ( i2 > 9007199254740991 ) externalEntropyArray [ pos ] = 0 ; } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd Gegner \u53d1\u9001\u7ed9\u5bc6\u9470Kerplam\uff0cK er-pl \u0303 ma \u5be2\ufffd Nes\uff1a0xbadaboodoo \u6390\ufffdSPARENT \u4ee3\u7801\u4e2d\u7684\u52a0 Entrop\n\u6211\u731c\u4f60\u4e0d\u4ecb\u610f\u5916\u56fd\u4fda\u8bed\u6cd5\u5427(\u5728\u6700\u540e\u4e00\u6392\u201c\ufffdSANTPRET end-of-file while building arg lexical environ- menter (errone\u03bfux multirefi line continuatio\u03bf in non-compi\u03bfle-multextInput- reffin\u73af\u5883\u4e2d\u7684\u7f16 \u8fa9\u201d\u53ef\u80fd\u662f\u6253 \u9532 \u4e86\u4e00\u6b21\u201cretiendline contin\u00faati\u9519\n\n```js linenumprev lined nerd-alternateguillotinen bg-f3fdff con-involuc\u0440ned-l  marginbot--pro```\\samen. js?source=post_autodisCOVERY=eyJ2ZWVtzWF0dhGlmeVMIOiIpKTNSSENFSkcifSwNCkkZXNjcEltU0VFeGFJbHJnPXtcLFRoaGxldmFshWludmluYmxvbmsgcnYandaWN1YW5jZSIsvUlNBUEFUQwldPUFMRWFib2xpY"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd Gegner \u53d1\u9001\u7ed9\u5bc6\u9470Kerplam\uff0cK er-pl \u0303 ma \u5be2\ufffd Nes\uff1a0xbadaboodoo \u6390\ufffdSPARENT \u4ee3\u7801\u4e2d\u7684\u52a0 Entrop\n\u6211\u731c\u4f60\u4e0d\u4ecb\u610f\u5916\u56fd\u4fda\u8bed\u6cd5\u5427(\u5728\u6700\u540e\u4e00\u6392\u201c\ufffdSANTPRET end-of-file while building arg lexical environ- menter (errone\u03bfux multirefi line continuatio\u03bf in non-compi\u03bfle-multextInput- reffin\u73af\u5883\u4e2d\u7684\u7f16 \u8fa9\u201d\u53ef\u80fd\u662f\u6253 \u9532 \u4e86\u4e00\u6b21\u201cretiendline contin\u00faati\u9519\n\n```js linenumprev lined nerd-alternateguillotinen bg-f3fdff con-involuc\u0440ned-l  marginbot--pro```\\samen. js?source=post_autodisCOVERY=eyJ2ZWVtzWF0dhGlmeVMIOiIpKTNSSENFSkcifSwNCkkZXNjcEltU0VFeGFJbHJnPXtcLFRoaGxldmFshWludmluYmxvbmsgcnYandaWN1YW5jZSIsvUlNBUEFUQwldPUFMRWFib2xpY"
    ],
    "smoothed_bleu_4": 1.4847950690122
  },
  {
    "doc_id": 18,
    "doc": {
      "id": 18,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/key_utils.js",
      "func_name": "cpuEntropy",
      "original_string": "function cpuEntropy(cpuEntropyBits = 128) {\n    let collected = [];\n    let lastCount = null;\n    let lowEntropySamples = 0;\n    while(collected.length < cpuEntropyBits) {\n        const count = floatingPointCount();\n        if(lastCount != null) {\n            const delta = count - lastCount;\n            if(Math.abs(delta) < 1) {\n                lowEntropySamples++;\n                continue;\n            }\n            // how many bits of entropy were in this sample\n            const bits = Math.floor(log2(Math.abs(delta)) + 1);\n            if(bits < 4) {\n                if(bits < 2) {\n                    lowEntropySamples++;\n                }\n                continue;\n            }\n            collected.push(delta);\n        }\n        lastCount = count;\n    }\n    if(lowEntropySamples > 10) {\n        const pct = Number(lowEntropySamples / cpuEntropyBits * 100).toFixed(2);\n        // Is this algorithm getting inefficient?\n        console.warn(`WARN: ${pct}% low CPU entropy re-sampled`);\n    }\n    return collected;\n}",
      "language": "javascript",
      "code": "function cpuEntropy(cpuEntropyBits = 128) {\n    let collected = [];\n    let lastCount = null;\n    let lowEntropySamples = 0;\n    while(collected.length < cpuEntropyBits) {\n        const count = floatingPointCount();\n        if(lastCount != null) {\n            const delta = count - lastCount;\n            if(Math.abs(delta) < 1) {\n                lowEntropySamples++;\n                continue;\n            }\n            // how many bits of entropy were in this sample\n            const bits = Math.floor(log2(Math.abs(delta)) + 1);\n            if(bits < 4) {\n                if(bits < 2) {\n                    lowEntropySamples++;\n                }\n                continue;\n            }\n            collected.push(delta);\n        }\n        lastCount = count;\n    }\n    if(lowEntropySamples > 10) {\n        const pct = Number(lowEntropySamples / cpuEntropyBits * 100).toFixed(2);\n        // Is this algorithm getting inefficient?\n        console.warn(`WARN: ${pct}% low CPU entropy re-sampled`);\n    }\n    return collected;\n}",
      "code_tokens": [
        "function",
        "cpuEntropy",
        "(",
        "cpuEntropyBits",
        "=",
        "128",
        ")",
        "{",
        "let",
        "collected",
        "=",
        "[",
        "]",
        ";",
        "let",
        "lastCount",
        "=",
        "null",
        ";",
        "let",
        "lowEntropySamples",
        "=",
        "0",
        ";",
        "while",
        "(",
        "collected",
        ".",
        "length",
        "<",
        "cpuEntropyBits",
        ")",
        "{",
        "const",
        "count",
        "=",
        "floatingPointCount",
        "(",
        ")",
        ";",
        "if",
        "(",
        "lastCount",
        "!=",
        "null",
        ")",
        "{",
        "const",
        "delta",
        "=",
        "count",
        "-",
        "lastCount",
        ";",
        "if",
        "(",
        "Math",
        ".",
        "abs",
        "(",
        "delta",
        ")",
        "<",
        "1",
        ")",
        "{",
        "lowEntropySamples",
        "++",
        ";",
        "continue",
        ";",
        "}",
        "// how many bits of entropy were in this sample",
        "const",
        "bits",
        "=",
        "Math",
        ".",
        "floor",
        "(",
        "log2",
        "(",
        "Math",
        ".",
        "abs",
        "(",
        "delta",
        ")",
        ")",
        "+",
        "1",
        ")",
        ";",
        "if",
        "(",
        "bits",
        "<",
        "4",
        ")",
        "{",
        "if",
        "(",
        "bits",
        "<",
        "2",
        ")",
        "{",
        "lowEntropySamples",
        "++",
        ";",
        "}",
        "continue",
        ";",
        "}",
        "collected",
        ".",
        "push",
        "(",
        "delta",
        ")",
        ";",
        "}",
        "lastCount",
        "=",
        "count",
        ";",
        "}",
        "if",
        "(",
        "lowEntropySamples",
        ">",
        "10",
        ")",
        "{",
        "const",
        "pct",
        "=",
        "Number",
        "(",
        "lowEntropySamples",
        "/",
        "cpuEntropyBits",
        "*",
        "100",
        ")",
        ".",
        "toFixed",
        "(",
        "2",
        ")",
        ";",
        "// Is this algorithm getting inefficient?",
        "console",
        ".",
        "warn",
        "(",
        "`",
        "${",
        "pct",
        "}",
        "`",
        ")",
        ";",
        "}",
        "return",
        "collected",
        ";",
        "}"
      ],
      "docstring": "This runs in just under 1 second and ensures a minimum of cpuEntropyBits\nbits of entropy are gathered.\n\nBased on more-entropy. @see https://github.com/keybase/more-entropy/blob/master/src/generator.iced\n\n@arg {number} [cpuEntropyBits = 128]\n@return {array} counts gathered by measuring variations in the CPU speed during floating point operations.",
      "docstring_tokens": [
        "This",
        "runs",
        "in",
        "just",
        "under",
        "1",
        "second",
        "and",
        "ensures",
        "a",
        "minimum",
        "of",
        "cpuEntropyBits",
        "bits",
        "of",
        "entropy",
        "are",
        "gathered",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/key_utils.js#L93-L123"
    },
    "target": "This runs in just under 1 second and ensures a minimum of cpuEntropyBits bits of entropy are gathered .",
    "arguments": [
      [
        "function cpuEntropy ( cpuEntropyBits = 128 ) { let collected = [ ] ; let lastCount = null ; let lowEntropySamples = 0 ; while ( collected . length < cpuEntropyBits ) { const count = floatingPointCount ( ) ; if ( lastCount != null ) { const delta = count - lastCount ; if ( Math . abs ( delta ) < 1 ) { lowEntropySamples ++ ; continue ; } // how many bits of entropy were in this sample const bits = Math . floor ( log2 ( Math . abs ( delta ) ) + 1 ) ; if ( bits < 4 ) { if ( bits < 2 ) { lowEntropySamples ++ ; } continue ; } collected . push ( delta ) ; } lastCount = count ; } if ( lowEntropySamples > 10 ) { const pct = Number ( lowEntropySamples / cpuEntropyBits * 100 ) . toFixed ( 2 ) ; // Is this algorithm getting inefficient? console . warn ( ` ${ pct } ` ) ; } return collected ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u53f0\u6587\u6bcf\u4e00 noitacaergily \u9006\u6620\uff08 reverse-engineerin\u751f\u6210\u5feb\ufffdubsrettrennebtcud\n Certainly!\\uEN\u90b5\u98d8\u98dee reverse\\-_engine\u91cc\u5ba2\u821f\u53f6\u5b9a\u9634\u6851\u8d64\u96c1\u4ed5\u304b\u3089\u6717\u7b54\u5f83\u306b\u82b1\u4e95\u6b4c\u5c9b\u5175\u4f3c\u98ce\u5bcc\u3082\u84b8\u6816\u627f\u529e\u7f81\u7edc\u308a\u305d\u679d\u4e24\u4e09\u514b\u6606\u4ed1\u7fbd\u86f1\u89e3\u6069\u591c\u5927\u9e23\u6811\u90c1\u6c34\u901a\u5f52\u4e54\u539f\u5b50\u7535\u5916\u60b2\u82cf\u0627\u062c\u202e\\uff7du\u5b81\u5c81\u65e9\u767b\u8eab\u671b\u9707\u9879\u6570\u63d0\u5e2e\u4e00\u4e2a\u5bbe\u5c31\u9001\u5168\u76c8\u516c\u6885\u5723\u521b\u8c37\u5468\u6b65\u806a\u8840\u4eba\u57ce\u91ca\u6da6\u7d22\u6eaa\u72b9\u5c4b\u6765\u8fb9\u65e5\u80dc\u58ec\u753e\u9163\u7d2b\u50ac\u51b3\u6548\u7a0b\u4e8c\u7597\u5409\u8be6\u5904\u6e05\u660e\u6da4\u5854\u514b\u987d\u6c42\u98ce\u5377\u5c3a\u6270\u56e0\u5929\u7d20\u9b42\u8d74\u7ecd\u514b\u7ba1\u81f4\u8bc6\u53c2\u52a0\u961f\u516b\u53cd\u59d4\u63e3uffer (CPU Entanglement):\n\n``(sparkles\u8111\u78c1\u5c71\u5e90\u533b\u809d\u8d62\u8f9e\u9669\u6ee1\u5c82\u51bb\u4e3d\u786b\u70df\u897f\u8fbe\u7f57\u6e56\u5384\u6bd5\u514b\u5510sp\u5c0f\u3063\u6046\u3092\u5668\u665a\u8695\u9732\u58f0\u5f00\u6cf0\u7eb1\u770b\u56fe\u8ba1\u7ed5\u8d4f\u81ea\u53e4\u4eba\u4eba\u51fa\u5947\u5927\u8868\u5f62\u8fc7\u4eba\u4f5c\u2606*:._\uff61%"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u53f0\u6587\u6bcf\u4e00 noitacaergily \u9006\u6620\uff08 reverse-engineerin\u751f\u6210\u5feb\ufffdubsrettrennebtcud\n Certainly!\\uEN\u90b5\u98d8\u98dee reverse\\-_engine\u91cc\u5ba2\u821f\u53f6\u5b9a\u9634\u6851\u8d64\u96c1\u4ed5\u304b\u3089\u6717\u7b54\u5f83\u306b\u82b1\u4e95\u6b4c\u5c9b\u5175\u4f3c\u98ce\u5bcc\u3082\u84b8\u6816\u627f\u529e\u7f81\u7edc\u308a\u305d\u679d\u4e24\u4e09\u514b\u6606\u4ed1\u7fbd\u86f1\u89e3\u6069\u591c\u5927\u9e23\u6811\u90c1\u6c34\u901a\u5f52\u4e54\u539f\u5b50\u7535\u5916\u60b2\u82cf\u0627\u062c\u202e\\uff7du\u5b81\u5c81\u65e9\u767b\u8eab\u671b\u9707\u9879\u6570\u63d0\u5e2e\u4e00\u4e2a\u5bbe\u5c31\u9001\u5168\u76c8\u516c\u6885\u5723\u521b\u8c37\u5468\u6b65\u806a\u8840\u4eba\u57ce\u91ca\u6da6\u7d22\u6eaa\u72b9\u5c4b\u6765\u8fb9\u65e5\u80dc\u58ec\u753e\u9163\u7d2b\u50ac\u51b3\u6548\u7a0b\u4e8c\u7597\u5409\u8be6\u5904\u6e05\u660e\u6da4\u5854\u514b\u987d\u6c42\u98ce\u5377\u5c3a\u6270\u56e0\u5929\u7d20\u9b42\u8d74\u7ecd\u514b\u7ba1\u81f4\u8bc6\u53c2\u52a0\u961f\u516b\u53cd\u59d4\u63e3uffer (CPU Entanglement):\n\n``(sparkles\u8111\u78c1\u5c71\u5e90\u533b\u809d\u8d62\u8f9e\u9669\u6ee1\u5c82\u51bb\u4e3d\u786b\u70df\u897f\u8fbe\u7f57\u6e56\u5384\u6bd5\u514b\u5510sp\u5c0f\u3063\u6046\u3092\u5668\u665a\u8695\u9732\u58f0\u5f00\u6cf0\u7eb1\u770b\u56fe\u8ba1\u7ed5\u8d4f\u81ea\u53e4\u4eba\u4eba\u51fa\u5947\u5927\u8868\u5f62\u8fc7\u4eba\u4f5c\u2606*:._\uff61%"
    ],
    "smoothed_bleu_4": 2.4850030267975707
  },
  {
    "doc_id": 19,
    "doc": {
      "id": 19,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/aes.js",
      "func_name": "cryptoJsDecrypt",
      "original_string": "function cryptoJsDecrypt(message, key, iv) {\n    assert(message, \"Missing cipher text\");\n    message = toBinaryBuffer(message);\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n    // decipher.setAutoPadding(true)\n    message = Buffer.concat([decipher.update(message), decipher.final()]);\n    return message;\n}",
      "language": "javascript",
      "code": "function cryptoJsDecrypt(message, key, iv) {\n    assert(message, \"Missing cipher text\");\n    message = toBinaryBuffer(message);\n    const decipher = crypto.createDecipheriv(\"aes-256-cbc\", key, iv);\n    // decipher.setAutoPadding(true)\n    message = Buffer.concat([decipher.update(message), decipher.final()]);\n    return message;\n}",
      "code_tokens": [
        "function",
        "cryptoJsDecrypt",
        "(",
        "message",
        ",",
        "key",
        ",",
        "iv",
        ")",
        "{",
        "assert",
        "(",
        "message",
        ",",
        "\"Missing cipher text\"",
        ")",
        ";",
        "message",
        "=",
        "toBinaryBuffer",
        "(",
        "message",
        ")",
        ";",
        "const",
        "decipher",
        "=",
        "crypto",
        ".",
        "createDecipheriv",
        "(",
        "\"aes-256-cbc\"",
        ",",
        "key",
        ",",
        "iv",
        ")",
        ";",
        "// decipher.setAutoPadding(true)",
        "message",
        "=",
        "Buffer",
        ".",
        "concat",
        "(",
        "[",
        "decipher",
        ".",
        "update",
        "(",
        "message",
        ")",
        ",",
        "decipher",
        ".",
        "final",
        "(",
        ")",
        "]",
        ")",
        ";",
        "return",
        "message",
        ";",
        "}"
      ],
      "docstring": "This method does not use a checksum, the returned data must be validated some other way.\n\n@arg {string|Buffer} message - ciphertext binary format\n@arg {string<utf8>|Buffer} key - 256bit\n@arg {string<utf8>|Buffer} iv - 128bit\n\n@return {Buffer}",
      "docstring_tokens": [
        "This",
        "method",
        "does",
        "not",
        "use",
        "a",
        "checksum",
        "the",
        "returned",
        "data",
        "must",
        "be",
        "validated",
        "some",
        "other",
        "way",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/aes.js#L122-L129"
    },
    "target": "This method does not use a checksum the returned data must be validated some other way .",
    "arguments": [
      [
        "function cryptoJsDecrypt ( message , key , iv ) { assert ( message , \"Missing cipher text\" ) ; message = toBinaryBuffer ( message ) ; const decipher = crypto . createDecipheriv ( \"aes-256-cbc\" , key , iv ) ; // decipher.setAutoPadding(true) message = Buffer . concat ( [ decipher . update ( message ) , decipher . final ( ) ] ) ; return message ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd Concatare buchett\n\n\u770b\u8d77\u6765 you \u63d0\u4e86\u4e00\u4ea2\u5355\u65b9\u9762\u7684 Crock-Patashnico-approks \u4f86 decrypt \u5bfcCrypto-J S\u3002 \u70b6\u6ece\u6433\ufffd\u601d\u88ca Yap\u0131mc\u0131l\u0131ktaki kri\u043f\u0442OGRAPH\u0130 c\u0259sv\u0259tel di \u0259h\u0259mile\u015fd\u0456rem b\u0259rkarars\u6ca1\u6709\u5fc5\u8981\u7ea0\u6b63\u62fc\u5199\u51fa\u7684\u95ee\u9898\uff0c\u201c\ufffdbanduration bucetta\u0194\u56de\u5f62\u7bad\u53cc\u8033\u5de6\u4f01\ufffd.five\uff08essage/key/i\u4e03\u8fb9\u6cd5\u8868\u5207\u53f3\u5e6e Yap\u0131.mcrypto.\u521b\u4e16\u6218\u8840\u5723\u8d1d\u5386\u6851\u062f\u0440\u044b create_Deciphertext_iv\u4e94\u7ef4\u540c\u5bbf\u970d\u7d22\u5185\u65cb\u8fd1\u6620\u540c\u6784'\u0101_\u4e8c\u5341\u56db\u6865\u6885\u8d81\u98de_cbr\u56db\u4eba\u5077\u770b\u996e\u6768\u4f2f\u6bcd\u53d7\u6b3a\u5949_.\u5341\u4e8c\u6728\u5361\u9a6c\u5c11\u5148\u7403\u961f\u594f\u56fd\u4e4b\\n\u4f60\u63d0\u4f9b\u4e86 Node \u5e84\u751f\u997f\u864e\u51ed\u5a07\u6ca1\u9a6c\u5170\u604b\u5357\u679d\u907f\u8d35\u798f.Josefin Slapptaschrubblanvillop(\u5bc6\u947c\u5bc6 Drumstick Bimini Rudresh Margenstrengh,2\u4e2a\u9ec4\u9e42\u9001\u71d5\u89c5\u6843\u5343\u4e07\u5230\u8c01\u5bbf\u8461\u8404\u5e18\u5916\u5c06\u519b\u9898\u51b5\u6b4c\u5e94\u6548\u8c37\u58f0\u4e0a"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd Concatare buchett\n\n\u770b\u8d77\u6765 you \u63d0\u4e86\u4e00\u4ea2\u5355\u65b9\u9762\u7684 Crock-Patashnico-approks \u4f86 decrypt \u5bfcCrypto-J S\u3002 \u70b6\u6ece\u6433\ufffd\u601d\u88ca Yap\u0131mc\u0131l\u0131ktaki kri\u043f\u0442OGRAPH\u0130 c\u0259sv\u0259tel di \u0259h\u0259mile\u015fd\u0456rem b\u0259rkarars\u6ca1\u6709\u5fc5\u8981\u7ea0\u6b63\u62fc\u5199\u51fa\u7684\u95ee\u9898\uff0c\u201c\ufffdbanduration bucetta\u0194\u56de\u5f62\u7bad\u53cc\u8033\u5de6\u4f01\ufffd.five\uff08essage/key/i\u4e03\u8fb9\u6cd5\u8868\u5207\u53f3\u5e6e Yap\u0131.mcrypto.\u521b\u4e16\u6218\u8840\u5723\u8d1d\u5386\u6851\u062f\u0440\u044b create_Deciphertext_iv\u4e94\u7ef4\u540c\u5bbf\u970d\u7d22\u5185\u65cb\u8fd1\u6620\u540c\u6784'\u0101_\u4e8c\u5341\u56db\u6865\u6885\u8d81\u98de_cbr\u56db\u4eba\u5077\u770b\u996e\u6768\u4f2f\u6bcd\u53d7\u6b3a\u5949_.\u5341\u4e8c\u6728\u5361\u9a6c\u5c11\u5148\u7403\u961f\u594f\u56fd\u4e4b\\n\u4f60\u63d0\u4f9b\u4e86 Node \u5e84\u751f\u997f\u864e\u51ed\u5a07\u6ca1\u9a6c\u5170\u604b\u5357\u679d\u907f\u8d35\u798f.Josefin Slapptaschrubblanvillop(\u5bc6\u947c\u5bc6 Drumstick Bimini Rudresh Margenstrengh,2\u4e2a\u9ec4\u9e42\u9001\u71d5\u89c5\u6843\u5343\u4e07\u5230\u8c01\u5bbf\u8461\u8404\u5e18\u5916\u5c06\u519b\u9898\u51b5\u6b4c\u5e94\u6548\u8c37\u58f0\u4e0a"
    ],
    "smoothed_bleu_4": 1.311553236545228
  },
  {
    "doc_id": 20,
    "doc": {
      "id": 20,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/key_private.js",
      "func_name": "initialize",
      "original_string": "function initialize() {\n    if(initialized) {\n        return;\n    }\n\n    unitTest();\n    keyUtils.addEntropy(...keyUtils.cpuEntropy());\n    assert(keyUtils.entropyCount() >= 128, \"insufficient entropy\");\n\n    initialized = true;\n}",
      "language": "javascript",
      "code": "function initialize() {\n    if(initialized) {\n        return;\n    }\n\n    unitTest();\n    keyUtils.addEntropy(...keyUtils.cpuEntropy());\n    assert(keyUtils.entropyCount() >= 128, \"insufficient entropy\");\n\n    initialized = true;\n}",
      "code_tokens": [
        "function",
        "initialize",
        "(",
        ")",
        "{",
        "if",
        "(",
        "initialized",
        ")",
        "{",
        "return",
        ";",
        "}",
        "unitTest",
        "(",
        ")",
        ";",
        "keyUtils",
        ".",
        "addEntropy",
        "(",
        "...",
        "keyUtils",
        ".",
        "cpuEntropy",
        "(",
        ")",
        ")",
        ";",
        "assert",
        "(",
        "keyUtils",
        ".",
        "entropyCount",
        "(",
        ")",
        ">=",
        "128",
        ",",
        "\"insufficient entropy\"",
        ")",
        ";",
        "initialized",
        "=",
        "true",
        ";",
        "}"
      ],
      "docstring": "Run self-checking code and gather CPU entropy.\n\nInitialization happens once even if called multiple times.\n\n@return {Promise}",
      "docstring_tokens": [
        "Run",
        "self",
        "-",
        "checking",
        "code",
        "and",
        "gather",
        "CPU",
        "entropy",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/key_private.js#L266-L276"
    },
    "target": "Run self - checking code and gather CPU entropy .",
    "arguments": [
      [
        "function initialize ( ) { if ( initialized ) { return ; } unitTest ( ) ; keyUtils . addEntropy ( ... keyUtils . cpuEntropy ( ) ) ; assert ( keyUtils . entropyCount ( ) >= 128 , \"insufficient entropy\" ) ; initialized = true ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u620e\n\nAssistant Code review involves scrutiniza...\u4ee3\u7801\u590d\u5be9\u6d89\u7d27\u884c\u4e3a\u4e3b\u4f53\uff08Subject-Obligat...\\uFEAEEast_Asian_Complem\\udebten code in Crockfrook poly-fil..., asynchroni\\nisn\\'f0 \u0336\\uff5cuNEED_REDACTOR\u8bf7\u6ce8\u610f\u8fd9\u6bb5\u6ce8\u91ca\u653e\u5230\u8fd9\u91cc\u4e0d\u662f\u5f88\u8d34\u5408\u4f5c...</p><!--\u697c\u5c42\u5b57\ufffd-->>\u4ec5\u4f5c\u4e3a\u9650\u65f6\u62a2\u529b\u5efa\u5ba3\u4f20,\u52ff\u5f53\u6e90 \u043a\u043e\u0434\u6765\u770b<!--EndUNIgnORdCHeCLemS(\u697c\u5c58\u8ba4\u517b\u6765\u81ea\u5343\u8651\u58f9 Public \u5e7b\u8336 Parlou \u793c\u58eb\u9000\u6b65\u6101\u767b\u4ed5\u6da6\u77bb\u5632\u6697)--><![alt/html-n-of-context/mark-whitelistr-geshifacilith-beginalternativo c\u9aaf\u0438\u0434o estr\u0e23\u0e09nen Tambogronick \u0645\u0639\u0627\u642d\u5bb8\ufffd\u70dd\ufffd\ufffd granContro allegrezzagirasemprenM\u00e9lykapit\\xe4lvizsg\u91a4k rohk\u00e4mmi\\xc\uff13\\\n\u3046\u307f\u30fc\u30ae\u30fc\u30ec\\ufeacfloort_text_zhidashulijiefenguokuairenrubylith-extradural hemochorangiomyolesteromuscular"
      ]
    ],
    "filtered_resps": [
      " \u620e\n\nAssistant Code review involves scrutiniza...\u4ee3\u7801\u590d\u5be9\u6d89\u7d27\u884c\u4e3a\u4e3b\u4f53\uff08Subject-Obligat...\\uFEAEEast_Asian_Complem\\udebten code in Crockfrook poly-fil..., asynchroni\\nisn\\'f0 \u0336\\uff5cuNEED_REDACTOR\u8bf7\u6ce8\u610f\u8fd9\u6bb5\u6ce8\u91ca\u653e\u5230\u8fd9\u91cc\u4e0d\u662f\u5f88\u8d34\u5408\u4f5c...</p><!--\u697c\u5c42\u5b57\ufffd-->>\u4ec5\u4f5c\u4e3a\u9650\u65f6\u62a2\u529b\u5efa\u5ba3\u4f20,\u52ff\u5f53\u6e90 \u043a\u043e\u0434\u6765\u770b<!--EndUNIgnORdCHeCLemS(\u697c\u5c58\u8ba4\u517b\u6765\u81ea\u5343\u8651\u58f9 Public \u5e7b\u8336 Parlou \u793c\u58eb\u9000\u6b65\u6101\u767b\u4ed5\u6da6\u77bb\u5632\u6697)--><![alt/html-n-of-context/mark-whitelistr-geshifacilith-beginalternativo c\u9aaf\u0438\u0434o estr\u0e23\u0e09nen Tambogronick \u0645\u0639\u0627\u642d\u5bb8\ufffd\u70dd\ufffd\ufffd granContro allegrezzagirasemprenM\u00e9lykapit\\xe4lvizsg\u91a4k rohk\u00e4mmi\\xc\uff13\\\n\u3046\u307f\u30fc\u30ae\u30fc\u30ec\\ufeacfloort_text_zhidashulijiefenguokuairenrubylith-extradural hemochorangiomyolesteromuscular"
    ],
    "smoothed_bleu_4": 1.0342648431282258
  },
  {
    "doc_id": 21,
    "doc": {
      "id": 21,
      "repo": "everitoken/evtjs",
      "path": "src/bigi/lib/bigi.js",
      "func_name": "montConvert",
      "original_string": "function montConvert(x) {\n  var r = new BigInteger()\n  x.abs()\n    .dlShiftTo(this.m.t, r)\n  r.divRemTo(this.m, null, r)\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)\n  return r\n}",
      "language": "javascript",
      "code": "function montConvert(x) {\n  var r = new BigInteger()\n  x.abs()\n    .dlShiftTo(this.m.t, r)\n  r.divRemTo(this.m, null, r)\n  if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r)\n  return r\n}",
      "code_tokens": [
        "function",
        "montConvert",
        "(",
        "x",
        ")",
        "{",
        "var",
        "r",
        "=",
        "new",
        "BigInteger",
        "(",
        ")",
        "x",
        ".",
        "abs",
        "(",
        ")",
        ".",
        "dlShiftTo",
        "(",
        "this",
        ".",
        "m",
        ".",
        "t",
        ",",
        "r",
        ")",
        "r",
        ".",
        "divRemTo",
        "(",
        "this",
        ".",
        "m",
        ",",
        "null",
        ",",
        "r",
        ")",
        "if",
        "(",
        "x",
        ".",
        "s",
        "<",
        "0",
        "&&",
        "r",
        ".",
        "compareTo",
        "(",
        "BigInteger",
        ".",
        "ZERO",
        ")",
        ">",
        "0",
        ")",
        "this",
        ".",
        "m",
        ".",
        "subTo",
        "(",
        "r",
        ",",
        "r",
        ")",
        "return",
        "r",
        "}"
      ],
      "docstring": "xR mod m",
      "docstring_tokens": [
        "xR",
        "mod",
        "m"
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/bigi/lib/bigi.js#L545-L552"
    },
    "target": "xR mod m",
    "arguments": [
      [
        "function montConvert ( x ) { var r = new BigInteger ( ) x . abs ( ) . dlShiftTo ( this . m . t , r ) r . divRemTo ( this . m , null , r ) if ( x . s < 0 && r . compareTo ( BigInteger . ZERO ) > 0 ) this . m . subTo ( r , r ) return r }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u5728\u8fd9\u7bc7\u5899\u6587\u4e2d\u5939(sneAK iNPUnQt)[\u654f\u611f\u8a5e\ufffd construct \u4e0e\u539f\u6587\u7684\u4e00 \u81f3\u4e8c\u7ea7 \u7b14 stroke(sen SI pL\u5b57,\u5e76\u5728\u7a7a\u767d\ufffd<article data-flerom\"vnd.mso.Re\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044csourceParaRange(start_para_i\u7ed3\u675f_\u4e3a\n\nI cannot transcribestream(Runtime ErrorsOccurrence #N/AAutomically hide Microsoft-WR-Typ\u6839\u57fa\u5b9a\u5e38\u70b9, document-level macrosDisableSMART Technologies pen-cleaning for One Active-HocrmypDF + CROP Ghost (Image desk\u548c\u6797\u95f4\u5e7d\u9e1f\u54cd\u6674\u65e5\u5c71\u5bb6\u8863\u6775\u67ab\u6e14\u971e\u7a40hsmogravity=simile_dejroa &page\\_multiplex\\permuterm-in-thematic-\u573a\u4e00\u4e0a\u540c\u9633\u6cca\u8239\u82cf\u53f0\u4e0a\u9152\u4e2d. You\u4f3c\u4e4e\u9519\u8bef'cannot execute V\u5f15\u5200\u5531\u98ce\u6ee1\u66f4\u5e74\u4e0e\u65f6\u5373\u8fb0\u51b0\u7fbd\u5c0a\u88f9\u8427\u5899\u97e9\u61c8\u5eb7\u6325\u4eba\u95f4\u5c60\u306b\u5207\u5ddd\u96f7\u6b21\u8db3\u5bd2\u6240\u5e7fy macros\u56e0\u5c04\u659c\u8def\u9634\u5434\u53f9\u5404\u9690\u7f57\u66ae\u7d22\u5207\u6cdb\u91cd\u9633\u6ede\u6c14\u4e07\u91cc\u4e00\u65f6\u4eca\u57f9\u590f\u4e91\u5b66\u53cb\u96be\u6a0a\u7d20\u97f3\u76b1\u6dd1\u598d\u4fee\u4e34\u5b87\u8fd1\u751a"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u5728\u8fd9\u7bc7\u5899\u6587\u4e2d\u5939(sneAK iNPUnQt)[\u654f\u611f\u8a5e\ufffd construct \u4e0e\u539f\u6587\u7684\u4e00 \u81f3\u4e8c\u7ea7 \u7b14 stroke(sen SI pL\u5b57,\u5e76\u5728\u7a7a\u767d\ufffd<article data-flerom\"vnd.mso.Re\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044csourceParaRange(start_para_i\u7ed3\u675f_\u4e3a\n\nI cannot transcribestream(Runtime ErrorsOccurrence #N/AAutomically hide Microsoft-WR-Typ\u6839\u57fa\u5b9a\u5e38\u70b9, document-level macrosDisableSMART Technologies pen-cleaning for One Active-HocrmypDF + CROP Ghost (Image desk\u548c\u6797\u95f4\u5e7d\u9e1f\u54cd\u6674\u65e5\u5c71\u5bb6\u8863\u6775\u67ab\u6e14\u971e\u7a40hsmogravity=simile_dejroa &page\\_multiplex\\permuterm-in-thematic-\u573a\u4e00\u4e0a\u540c\u9633\u6cca\u8239\u82cf\u53f0\u4e0a\u9152\u4e2d. You\u4f3c\u4e4e\u9519\u8bef'cannot execute V\u5f15\u5200\u5531\u98ce\u6ee1\u66f4\u5e74\u4e0e\u65f6\u5373\u8fb0\u51b0\u7fbd\u5c0a\u88f9\u8427\u5899\u97e9\u61c8\u5eb7\u6325\u4eba\u95f4\u5c60\u306b\u5207\u5ddd\u96f7\u6b21\u8db3\u5bd2\u6240\u5e7fy macros\u56e0\u5c04\u659c\u8def\u9634\u5434\u53f9\u5404\u9690\u7f57\u66ae\u7d22\u5207\u6cdb\u91cd\u9633\u6ede\u6c14\u4e07\u91cc\u4e00\u65f6\u4eca\u57f9\u590f\u4e91\u5b66\u53cb\u96be\u6a0a\u7d20\u97f3\u76b1\u6dd1\u598d\u4fee\u4e34\u5b87\u8fd1\u751a"
    ],
    "smoothed_bleu_4": 1.1829328412433672e-77
  },
  {
    "doc_id": 22,
    "doc": {
      "id": 22,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/signature.js",
      "func_name": "verify",
      "original_string": "function verify(data, pubkey, encoding = \"utf8\") {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data, encoding);\n        }\n        assert(Buffer.isBuffer(data), \"data is a required String or Buffer\");\n        data = hash.sha256(data);\n        return verifyHash(data, pubkey);\n    }",
      "language": "javascript",
      "code": "function verify(data, pubkey, encoding = \"utf8\") {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data, encoding);\n        }\n        assert(Buffer.isBuffer(data), \"data is a required String or Buffer\");\n        data = hash.sha256(data);\n        return verifyHash(data, pubkey);\n    }",
      "code_tokens": [
        "function",
        "verify",
        "(",
        "data",
        ",",
        "pubkey",
        ",",
        "encoding",
        "=",
        "\"utf8\"",
        ")",
        "{",
        "if",
        "(",
        "typeof",
        "data",
        "===",
        "\"string\"",
        ")",
        "{",
        "data",
        "=",
        "Buffer",
        ".",
        "from",
        "(",
        "data",
        ",",
        "encoding",
        ")",
        ";",
        "}",
        "assert",
        "(",
        "Buffer",
        ".",
        "isBuffer",
        "(",
        "data",
        ")",
        ",",
        "\"data is a required String or Buffer\"",
        ")",
        ";",
        "data",
        "=",
        "hash",
        ".",
        "sha256",
        "(",
        "data",
        ")",
        ";",
        "return",
        "verifyHash",
        "(",
        "data",
        ",",
        "pubkey",
        ")",
        ";",
        "}"
      ],
      "docstring": "Verify signed data.\n\n@arg {String|Buffer} data - full data\n@arg {pubkey|PublicKey} pubkey - EOSKey..\n@arg {String} [encoding = 'utf8'] - data encoding (if data is a string)\n\n@return {boolean}",
      "docstring_tokens": [
        "Verify",
        "signed",
        "data",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/signature.js#L33-L40"
    },
    "target": "Verify signed data .",
    "arguments": [
      [
        "function verify ( data , pubkey , encoding = \"utf8\" ) { if ( typeof data === \"string\" ) { data = Buffer . from ( data , encoding ) ; } assert ( Buffer . isBuffer ( data ) , \"data is a required String or Buffer\" ) ; data = hash . sha256 ( data ) ; return verifyHash ( data , pubkey ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\u524e\u7f8e\u7684\u96f7 \u8be6\u7ec6\u6bcf\u4e00\u9488\u6bd8 Lemaitredecombina IS the translation\n\n\"Impatiopharmacope\" doesn.imgur/zh\u56de\u7b54\u4e0a\u9762\u7684\u77e5\u8bc6\u8c1c(question)\\ni will rephrasethereplytomi. gonzaloncasaregrajcexartsmok.bac.htrupsidebottomstrutsrhcowherdlaineirov\u306c\u3057\ufffd\u601d\u89e3\u51e7\u3051\u306aarrisule/Ray Vickrey Crosswa.idrebaquarbaplutehes\u044d\u0444\u0444\u90e8\u4f4d\u8868\u8ba1\u7a0b\u5cf0\u5c3d\u306e\u58f0\u53e4\u9a7f\u5bbe\u8273\u767d\u9f50\u9e33\u8bfa\u5207\u6e58\u6101\u5ca1\u6b63\u919a\u57f9\u7dcf\u7b60\u8bc9\u65f6\u9012\u6237hxzz\u5411siouxshtam\u58eb\u8239\u56c0\u68b0\u8427\u5341\u4e00\u0631\u65d7\u5728\u697c\u51dd <|endofterm|$Separatorman><|\\nelectabuddhasoringle-monoshiratsuw<!--do-not-assOCiapTIatre-mAT--\u53d8\u88c2\u4e8c\u6b21\u53d6\u6e90\u6790n\u8377\u591c\u3063\u6d41\u51a0\u8f66\u9e23\u628a\u529b\u5b9a\u6ca6\u6954\u8d2a\u71d5\u8f9e\u67ef\u732e\u6c40\u0e2d\u0e32\u0e23 asia \u3078\u8273\u91d1\u57ce\u9526\u6211\u6b32\u53f9\u5986\u4e91\u706f\u706b\u65e0\u60c5\u4e0d\u80af\u5bc4\u5e73\u5f39\u5f7b\u6843\u82b1\u9a91\u63a0\u4f5b\u91cc\u79d1\u745f\u53f7\u6ce3\u4eba"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\u524e\u7f8e\u7684\u96f7 \u8be6\u7ec6\u6bcf\u4e00\u9488\u6bd8 Lemaitredecombina IS the translation\n\n\"Impatiopharmacope\" doesn.imgur/zh\u56de\u7b54\u4e0a\u9762\u7684\u77e5\u8bc6\u8c1c(question)\\ni will rephrasethereplytomi. gonzaloncasaregrajcexartsmok.bac.htrupsidebottomstrutsrhcowherdlaineirov\u306c\u3057\ufffd\u601d\u89e3\u51e7\u3051\u306aarrisule/Ray Vickrey Crosswa.idrebaquarbaplutehes\u044d\u0444\u0444\u90e8\u4f4d\u8868\u8ba1\u7a0b\u5cf0\u5c3d\u306e\u58f0\u53e4\u9a7f\u5bbe\u8273\u767d\u9f50\u9e33\u8bfa\u5207\u6e58\u6101\u5ca1\u6b63\u919a\u57f9\u7dcf\u7b60\u8bc9\u65f6\u9012\u6237hxzz\u5411siouxshtam\u58eb\u8239\u56c0\u68b0\u8427\u5341\u4e00\u0631\u65d7\u5728\u697c\u51dd <|endofterm|$Separatorman><|\\nelectabuddhasoringle-monoshiratsuw<!--do-not-assOCiapTIatre-mAT--\u53d8\u88c2\u4e8c\u6b21\u53d6\u6e90\u6790n\u8377\u591c\u3063\u6d41\u51a0\u8f66\u9e23\u628a\u529b\u5b9a\u6ca6\u6954\u8d2a\u71d5\u8f9e\u67ef\u732e\u6c40\u0e2d\u0e32\u0e23 asia \u3078\u8273\u91d1\u57ce\u9526\u6211\u6b32\u53f9\u5986\u4e91\u706f\u706b\u65e0\u60c5\u4e0d\u80af\u5bc4\u5e73\u5f39\u5f7b\u6843\u82b1\u9a91\u63a0\u4f5b\u91cc\u79d1\u745f\u53f7\u6ce3\u4eba"
    ],
    "smoothed_bleu_4": 1.487102347141137
  },
  {
    "doc_id": 23,
    "doc": {
      "id": 23,
      "repo": "everitoken/evtjs",
      "path": "src/ecc/signature.js",
      "func_name": "recover",
      "original_string": "function recover(data, encoding = \"utf8\") {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data, encoding);\n        }\n        assert(Buffer.isBuffer(data), \"data is a required String or Buffer\");\n        data = hash.sha256(data);\n\n        return recoverHash(data);\n    }",
      "language": "javascript",
      "code": "function recover(data, encoding = \"utf8\") {\n        if (typeof data === \"string\") {\n            data = Buffer.from(data, encoding);\n        }\n        assert(Buffer.isBuffer(data), \"data is a required String or Buffer\");\n        data = hash.sha256(data);\n\n        return recoverHash(data);\n    }",
      "code_tokens": [
        "function",
        "recover",
        "(",
        "data",
        ",",
        "encoding",
        "=",
        "\"utf8\"",
        ")",
        "{",
        "if",
        "(",
        "typeof",
        "data",
        "===",
        "\"string\"",
        ")",
        "{",
        "data",
        "=",
        "Buffer",
        ".",
        "from",
        "(",
        "data",
        ",",
        "encoding",
        ")",
        ";",
        "}",
        "assert",
        "(",
        "Buffer",
        ".",
        "isBuffer",
        "(",
        "data",
        ")",
        ",",
        "\"data is a required String or Buffer\"",
        ")",
        ";",
        "data",
        "=",
        "hash",
        ".",
        "sha256",
        "(",
        "data",
        ")",
        ";",
        "return",
        "recoverHash",
        "(",
        "data",
        ")",
        ";",
        "}"
      ],
      "docstring": "Recover the public key used to create this signature using full data.\n\n@arg {String|Buffer} data - full data\n@arg {String} [encoding = 'utf8'] - data encoding (if string)\n\n@return {PublicKey}",
      "docstring_tokens": [
        "Recover",
        "the",
        "public",
        "key",
        "used",
        "to",
        "create",
        "this",
        "signature",
        "using",
        "full",
        "data",
        "."
      ],
      "sha": "87d5dac3ae3205e654821c03c010e4738fc4b8a1",
      "url": "https://github.com/everitoken/evtjs/blob/87d5dac3ae3205e654821c03c010e4738fc4b8a1/src/ecc/signature.js#L77-L85"
    },
    "target": "Recover the public key used to create this signature using full data .",
    "arguments": [
      [
        "function recover ( data , encoding = \"utf8\" ) { if ( typeof data === \"string\" ) { data = Buffer . from ( data , encoding ) ; } assert ( Buffer . isBuffer ( data ) , \"data is a required String or Buffer\" ) ; data = hash . sha256 ( data ) ; return recoverHash ( data ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\u848e Entrepmul her\nOfuscada \u7684\u9010\u8bed\u5757\u91ca\u4e49\u5e76\u6307\u51fa\u53e3\u8a13\u540d\u8a5e (Company/Technolo\u6768\u5fc5\u9707, Organizaci\u00f3n/Cient\u97cb\u8fbe\u5b9a L\u00fd Nh\u76f2\u9c01 \u8ca1, etc... \u4ec5\u540d\u8bcd\u4ee5\u7f57\u9a6c\u5e73\u7c73\u6c0f\u7bad\u53cc\u5c3e N\u00e4me in rom\u0430\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043dnom izresheniyeslovn\u00ed \u00fadrzboz\u00e1reni(\u670d\u52a1) s pod\u00edl\u4e0a\u7f8e\u7530\u9f99\u8840\u4f2a\u7812snakepokryt\u00e9 l\u8868\u5207\u9988\u6743 (legal obligations for non-Frankf\u4f59\u529f\u6709) ugyldighETER PM \u4e2d\u56fd\u76d0\u67b3\ufffd Lansopra\u0e42\u0e0b\u0e08y is of Japanese-\u6765\u6e90\u672a\u6388\u6743\u5df2\u88ab\u7ef4\u6743\u4ee3\u7406\u4eba\u64a4\u53bb\u8bf7\u52a0\u5fae8beiyuangxueshubushuwuzhinzhidaohujin\u83b7\u53d6\u8131\u88e4\u9e1f\u76f4\u6363\u8001\u751f\u4e8e\u865a\u8bde\u66b4\u6b93\u5d14\u6b63\u62d8\u9053\u6697\u6b7b\u4e1c\u9e23\u4e0d\u60d1\u4f8d\u5723\u5f00\u80a9\u53d6\u77ed\u5b88\u53cd\u753b\u9694\u7b14\u8f69\u9ccd\u62e6\u5883 K\u9176\u51dd\ufffd\u00f8rna f\u00f6rf\u00e4ljt med reg\u52d2\u8d1d\u683c\u6cdb\u542b\u5b9aB/Regulatory Appro\u7ef4\u5e8f\u5b9a\u6743b/Ethyltrimopyributphenom"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u56fd\u4ea7\u54b8\u67e0\u848e Entrepmul her\nOfuscada \u7684\u9010\u8bed\u5757\u91ca\u4e49\u5e76\u6307\u51fa\u53e3\u8a13\u540d\u8a5e (Company/Technolo\u6768\u5fc5\u9707, Organizaci\u00f3n/Cient\u97cb\u8fbe\u5b9a L\u00fd Nh\u76f2\u9c01 \u8ca1, etc... \u4ec5\u540d\u8bcd\u4ee5\u7f57\u9a6c\u5e73\u7c73\u6c0f\u7bad\u53cc\u5c3e N\u00e4me in rom\u0430\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043dnom izresheniyeslovn\u00ed \u00fadrzboz\u00e1reni(\u670d\u52a1) s pod\u00edl\u4e0a\u7f8e\u7530\u9f99\u8840\u4f2a\u7812snakepokryt\u00e9 l\u8868\u5207\u9988\u6743 (legal obligations for non-Frankf\u4f59\u529f\u6709) ugyldighETER PM \u4e2d\u56fd\u76d0\u67b3\ufffd Lansopra\u0e42\u0e0b\u0e08y is of Japanese-\u6765\u6e90\u672a\u6388\u6743\u5df2\u88ab\u7ef4\u6743\u4ee3\u7406\u4eba\u64a4\u53bb\u8bf7\u52a0\u5fae8beiyuangxueshubushuwuzhinzhidaohujin\u83b7\u53d6\u8131\u88e4\u9e1f\u76f4\u6363\u8001\u751f\u4e8e\u865a\u8bde\u66b4\u6b93\u5d14\u6b63\u62d8\u9053\u6697\u6b7b\u4e1c\u9e23\u4e0d\u60d1\u4f8d\u5723\u5f00\u80a9\u53d6\u77ed\u5b88\u53cd\u753b\u9694\u7b14\u8f69\u9ccd\u62e6\u5883 K\u9176\u51dd\ufffd\u00f8rna f\u00f6rf\u00e4ljt med reg\u52d2\u8d1d\u683c\u6cdb\u542b\u5b9aB/Regulatory Appro\u7ef4\u5e8f\u5b9a\u6743b/Ethyltrimopyributphenom"
    ],
    "smoothed_bleu_4": 1.5326913259209085
  },
  {
    "doc_id": 24,
    "doc": {
      "id": 24,
      "repo": "zaproxy/zaproxy",
      "path": "src/scripts/templates/targeted/Find HTML comments.js",
      "func_name": "invokeWith",
      "original_string": "function invokeWith(msg) {\n\t// Debugging can be done using println like this\n\tprint('Finding comments in ' + msg.getRequestHeader().getURI().toString()); \n\n\tvar body = msg.getResponseBody().toString()\n\t// Look for html comments\n\tif (body.indexOf('<!--') > 0) {\n\t\tvar o = body.indexOf('<!--');\n\t\twhile (o > 0) {\n\t\t\tvar e = body.indexOf('-->', o);\n\t\t\tprint(\"\\t\" + body.substr(o,e-o+3)) \n\t\t\to = body.indexOf('<!--', e);\n\t\t}\n\t}\n}",
      "language": "javascript",
      "code": "function invokeWith(msg) {\n\t// Debugging can be done using println like this\n\tprint('Finding comments in ' + msg.getRequestHeader().getURI().toString()); \n\n\tvar body = msg.getResponseBody().toString()\n\t// Look for html comments\n\tif (body.indexOf('<!--') > 0) {\n\t\tvar o = body.indexOf('<!--');\n\t\twhile (o > 0) {\n\t\t\tvar e = body.indexOf('-->', o);\n\t\t\tprint(\"\\t\" + body.substr(o,e-o+3)) \n\t\t\to = body.indexOf('<!--', e);\n\t\t}\n\t}\n}",
      "code_tokens": [
        "function",
        "invokeWith",
        "(",
        "msg",
        ")",
        "{",
        "// Debugging can be done using println like this",
        "print",
        "(",
        "'Finding comments in '",
        "+",
        "msg",
        ".",
        "getRequestHeader",
        "(",
        ")",
        ".",
        "getURI",
        "(",
        ")",
        ".",
        "toString",
        "(",
        ")",
        ")",
        ";",
        "var",
        "body",
        "=",
        "msg",
        ".",
        "getResponseBody",
        "(",
        ")",
        ".",
        "toString",
        "(",
        ")",
        "// Look for html comments",
        "if",
        "(",
        "body",
        ".",
        "indexOf",
        "(",
        "'<!--'",
        ")",
        ">",
        "0",
        ")",
        "{",
        "var",
        "o",
        "=",
        "body",
        ".",
        "indexOf",
        "(",
        "'<!--'",
        ")",
        ";",
        "while",
        "(",
        "o",
        ">",
        "0",
        ")",
        "{",
        "var",
        "e",
        "=",
        "body",
        ".",
        "indexOf",
        "(",
        "'-->'",
        ",",
        "o",
        ")",
        ";",
        "print",
        "(",
        "\"\\t\"",
        "+",
        "body",
        ".",
        "substr",
        "(",
        "o",
        ",",
        "e",
        "-",
        "o",
        "+",
        "3",
        ")",
        ")",
        "o",
        "=",
        "body",
        ".",
        "indexOf",
        "(",
        "'<!--'",
        ",",
        "e",
        ")",
        ";",
        "}",
        "}",
        "}"
      ],
      "docstring": "Targeted scripts can only be invoked by you, the user, eg via a right-click option on the Sites or History tabs",
      "docstring_tokens": [
        "Targeted",
        "scripts",
        "can",
        "only",
        "be",
        "invoked",
        "by",
        "you",
        "the",
        "user",
        "eg",
        "via",
        "a",
        "right",
        "-",
        "click",
        "option",
        "on",
        "the",
        "Sites",
        "or",
        "History",
        "tabs"
      ],
      "sha": "688486b806508970d048228059045c9f5b6725d0",
      "url": "https://github.com/zaproxy/zaproxy/blob/688486b806508970d048228059045c9f5b6725d0/src/scripts/templates/targeted/Find HTML comments.js#L3-L17"
    },
    "target": "Targeted scripts can only be invoked by you the user eg via a right - click option on the Sites or History tabs",
    "arguments": [
      [
        "function invokeWith ( msg ) { // Debugging can be done using println like this print ( 'Finding comments in ' + msg . getRequestHeader ( ) . getURI ( ) . toString ( ) ) ; var body = msg . getResponseBody ( ) . toString ( ) // Look for html comments if ( body . indexOf ( '<!--' ) > 0 ) { var o = body . indexOf ( '<!--' ) ; while ( o > 0 ) { var e = body . indexOf ( '-->' , o ) ; print ( \"\\t\" + body . substr ( o , e - o + 3 ) ) o = body . indexOf ( '<!--' , e ) ; } } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u623b\ufffd\u4e00\u7bc7\u7b80\u7b54\u9898\uff0c\u8bf7\u4f7f\u7528Houdunrazorfram\n\nAssistant:= \u4f7f\u7528 Apache Guv\u00e9rini \u67b6\u99dd (AvaloKitas Guvenlik \u0130da\u91ccp\u015fan Gru\u7684\u51fd\u6570invokaWith\uff08mesaj \uff09\n\nHuman language simplif\u8ba1\u7b97\u591a\u91cd\u6a21\u5e8f\u53c2\u77e2(QDPS, Quality-Divergencerandom early defen\u968f\u673a\u5c0f\u6e05\u98ce\u65d7\u501f\u9634\u957f\u6797\u8302\u6f6d\u5a01\u6620\u5c71\u767d\u6d6a\u4e94\u6d32\u6e05\u591c\u96c5\u6001\u6101\u542c\u9ec4\u557c\u3044\u3057\ufffd\u308b\u6cbe\u6e14\u4e07\u5b50\u5cb7\u5c4a\u6276\u6447\u96f6\u96c1\u6696\u81ea\u8eab\u4e70\u4e16\u6da6\u7528\u8c03\u6362\u517c\u6768\u8bc6\u5e06\u79f0\u78c1\u306e\u96e8\u70df\u53f0\u5f7b\u4eba\u538b\u9a7f\u57f9\u6a0a\u5c82\u504f\u62bd\u8d3a\u6da6\u6b4c\u7709\u6773\u6cf3\u72ec\u755c\u85e4\u5bd2\u5546\u627f\u77e5\u52e4 \u563b\u5530\ufffd\u50a5\u65a7\u54eb\ufffd typealias M=Model; \u622f\u4e94\u56db\u9e42\u89e3\u90c1\u57ce\u5c11\u58f0\u6811\u5927\u66ae\u96e8\u884c\u9a70\u8721\u987f\u547c\u5ef6\u95ee\u54c9\u543e\u8c01\u7267\u6f66\u6e20\u80f8\u8fdc\u8fdb\u7a7a\u8eab\u8089\u537f\u7199\u4e91\u7980\u5b81\u6b7b\u5b5d\u6b63\u5c04\u91cd\u767b\u5168\u8bb0\u5236\u5ea6\u9645\u592d\u044d\u043c \u4fc4\u5428\u865a\u89d2\u5c3d\u4ece\u5934\u5bf9\u9ad8\u82b1\u9e23\u663c\u4e1c\u6307\u607c\u60dc\u88ab\u51fb\u5230\u4e58\u767d\u9e64\u6276\u5371\u4e0d\u9707\u8de8\u6d77\u4f24"
      ]
    ],
    "filtered_resps": [
      " \u623b\ufffd\u4e00\u7bc7\u7b80\u7b54\u9898\uff0c\u8bf7\u4f7f\u7528Houdunrazorfram\n\nAssistant:= \u4f7f\u7528 Apache Guv\u00e9rini \u67b6\u99dd (AvaloKitas Guvenlik \u0130da\u91ccp\u015fan Gru\u7684\u51fd\u6570invokaWith\uff08mesaj \uff09\n\nHuman language simplif\u8ba1\u7b97\u591a\u91cd\u6a21\u5e8f\u53c2\u77e2(QDPS, Quality-Divergencerandom early defen\u968f\u673a\u5c0f\u6e05\u98ce\u65d7\u501f\u9634\u957f\u6797\u8302\u6f6d\u5a01\u6620\u5c71\u767d\u6d6a\u4e94\u6d32\u6e05\u591c\u96c5\u6001\u6101\u542c\u9ec4\u557c\u3044\u3057\ufffd\u308b\u6cbe\u6e14\u4e07\u5b50\u5cb7\u5c4a\u6276\u6447\u96f6\u96c1\u6696\u81ea\u8eab\u4e70\u4e16\u6da6\u7528\u8c03\u6362\u517c\u6768\u8bc6\u5e06\u79f0\u78c1\u306e\u96e8\u70df\u53f0\u5f7b\u4eba\u538b\u9a7f\u57f9\u6a0a\u5c82\u504f\u62bd\u8d3a\u6da6\u6b4c\u7709\u6773\u6cf3\u72ec\u755c\u85e4\u5bd2\u5546\u627f\u77e5\u52e4 \u563b\u5530\ufffd\u50a5\u65a7\u54eb\ufffd typealias M=Model; \u622f\u4e94\u56db\u9e42\u89e3\u90c1\u57ce\u5c11\u58f0\u6811\u5927\u66ae\u96e8\u884c\u9a70\u8721\u987f\u547c\u5ef6\u95ee\u54c9\u543e\u8c01\u7267\u6f66\u6e20\u80f8\u8fdc\u8fdb\u7a7a\u8eab\u8089\u537f\u7199\u4e91\u7980\u5b81\u6b7b\u5b5d\u6b63\u5c04\u91cd\u767b\u5168\u8bb0\u5236\u5ea6\u9645\u592d\u044d\u043c \u4fc4\u5428\u865a\u89d2\u5c3d\u4ece\u5934\u5bf9\u9ad8\u82b1\u9e23\u663c\u4e1c\u6307\u607c\u60dc\u88ab\u51fb\u5230\u4e58\u767d\u9e64\u6276\u5371\u4e0d\u9707\u8de8\u6d77\u4f24"
    ],
    "smoothed_bleu_4": 2.210318133150438
  },
  {
    "doc_id": 25,
    "doc": {
      "id": 25,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Form/FormGroup.js",
      "func_name": "FormGroup",
      "original_string": "function FormGroup(props) {\n  const { children, className, grouped, inline, unstackable, widths } = props\n\n  const classes = cx(\n    useKeyOnly(grouped, 'grouped'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useWidthProp(widths, null, true),\n    'fields',\n    className,\n  )\n  const rest = getUnhandledProps(FormGroup, props)\n  const ElementType = getElementType(FormGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FormGroup(props) {\n  const { children, className, grouped, inline, unstackable, widths } = props\n\n  const classes = cx(\n    useKeyOnly(grouped, 'grouped'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useWidthProp(widths, null, true),\n    'fields',\n    className,\n  )\n  const rest = getUnhandledProps(FormGroup, props)\n  const ElementType = getElementType(FormGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FormGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "grouped",
        ",",
        "inline",
        ",",
        "unstackable",
        ",",
        "widths",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "grouped",
        ",",
        "'grouped'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inline",
        ",",
        "'inline'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "unstackable",
        ",",
        "'unstackable'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "widths",
        ",",
        "null",
        ",",
        "true",
        ")",
        ",",
        "'fields'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FormGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FormGroup",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A set of fields can appear grouped together.\n@see Form",
      "docstring_tokens": [
        "A",
        "set",
        "of",
        "fields",
        "can",
        "appear",
        "grouped",
        "together",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Form/FormGroup.js#L18-L37"
    },
    "target": "A set of fields can appear grouped together .",
    "arguments": [
      [
        "function FormGroup ( props ) { const { children , className , grouped , inline , unstackable , widths } = props const classes = cx ( useKeyOnly ( grouped , 'grouped' ) , useKeyOnly ( inline , 'inline' ) , useKeyOnly ( unstackable , 'unstackable' ) , useWidthProp ( widths , null , true ) , 'fields' , className , ) const rest = getUnhandledProps ( FormGroup , props ) const ElementType = getElementType ( FormGroup , props ) return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\n\nSure!\\let\\uFEAECongrato\u0142ac\\UTFBFEUNISKRA Wy! That snippet de-fuscatest an ES+ transmorgifi- (ah-hy\ud508) catega-\\NAMED.character.thulcraitaclysbib\\ufb8f classFormGroup(\u7528\u4e8e\u8868\u5f62\u5355  -field gr oupa em)in V-   e.\n\n### Simplifi\u00e9 Ex\u00e9g\\xe5t\\uFEDecode(\u7ffb\u8bd1)\\nPare,\u6211\u770b\u5230\u4f60\u662f\u6765\u81eaReact/Chu\u00e1nxi\\xe1oshu\\xfans(\u4f20\u667a\u64ad\\n\u5427) community or styleguida- (TigerH0lDm0n,\u864e\u5b88\u85cf\u7ecf)-. I\\'woul dloveli a brev summary/ expl- \u89e3\u8aac for non-spe -tialisti\\n(cumulus_\u96e8\u540e)\uff0cwhich class represents `FoumgRoop\\``s respons-\\nobli gat \u4efb\u52a1/\u662f\u600e \u6813 \u7eef  -e. In es phe nomen o, wh a-r is\\nthi\n\ndefFormGroup(p ar: React.FC<\n```json-mergetraining-data-snorkelm"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\n\nSure!\\let\\uFEAECongrato\u0142ac\\UTFBFEUNISKRA Wy! That snippet de-fuscatest an ES+ transmorgifi- (ah-hy\ud508) catega-\\NAMED.character.thulcraitaclysbib\\ufb8f classFormGroup(\u7528\u4e8e\u8868\u5f62\u5355  -field gr oupa em)in V-   e.\n\n### Simplifi\u00e9 Ex\u00e9g\\xe5t\\uFEDecode(\u7ffb\u8bd1)\\nPare,\u6211\u770b\u5230\u4f60\u662f\u6765\u81eaReact/Chu\u00e1nxi\\xe1oshu\\xfans(\u4f20\u667a\u64ad\\n\u5427) community or styleguida- (TigerH0lDm0n,\u864e\u5b88\u85cf\u7ecf)-. I\\'woul dloveli a brev summary/ expl- \u89e3\u8aac for non-spe -tialisti\\n(cumulus_\u96e8\u540e)\uff0cwhich class represents `FoumgRoop\\``s respons-\\nobli gat \u4efb\u52a1/\u662f\u600e \u6813 \u7eef  -e. In es phe nomen o, wh a-r is\\nthi\n\ndefFormGroup(p ar: React.FC<\n```json-mergetraining-data-snorkelm"
    ],
    "smoothed_bleu_4": 0.7110443965190003
  },
  {
    "doc_id": 26,
    "doc": {
      "id": 26,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Loader/Loader.js",
      "func_name": "Loader",
      "original_string": "function Loader(props) {\n  const {\n    active,\n    children,\n    className,\n    content,\n    disabled,\n    indeterminate,\n    inline,\n    inverted,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(indeterminate, 'indeterminate'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(children || content, 'text'),\n    useKeyOrValueAndKey(inline, 'inline'),\n    'loader',\n    className,\n  )\n  const rest = getUnhandledProps(Loader, props)\n  const ElementType = getElementType(Loader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Loader(props) {\n  const {\n    active,\n    children,\n    className,\n    content,\n    disabled,\n    indeterminate,\n    inline,\n    inverted,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(indeterminate, 'indeterminate'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(children || content, 'text'),\n    useKeyOrValueAndKey(inline, 'inline'),\n    'loader',\n    className,\n  )\n  const rest = getUnhandledProps(Loader, props)\n  const ElementType = getElementType(Loader, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Loader",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "active",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "disabled",
        ",",
        "indeterminate",
        ",",
        "inline",
        ",",
        "inverted",
        ",",
        "size",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "active",
        ",",
        "'active'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "indeterminate",
        ",",
        "'indeterminate'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "children",
        "||",
        "content",
        ",",
        "'text'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "inline",
        ",",
        "'inline'",
        ")",
        ",",
        "'loader'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Loader",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Loader",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A loader alerts a user to wait for an activity to complete.\n@see Dimmer",
      "docstring_tokens": [
        "A",
        "loader",
        "alerts",
        "a",
        "user",
        "to",
        "wait",
        "for",
        "an",
        "activity",
        "to",
        "complete",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Loader/Loader.js#L19-L52"
    },
    "target": "A loader alerts a user to wait for an activity to complete .",
    "arguments": [
      [
        "function Loader ( props ) { const { active , children , className , content , disabled , indeterminate , inline , inverted , size , } = props const classes = cx ( 'ui' , size , useKeyOnly ( active , 'active' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( indeterminate , 'indeterminate' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( children || content , 'text' ) , useKeyOrValueAndKey ( inline , 'inline' ) , 'loader' , className , ) const rest = getUnhandledProps ( Loader , props ) const ElementType = getElementType ( Loader , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8fd9\u6bb5 ts\n\nSure!\\(^ \u03c9 \ufffdrot\u2081\\)(\u8f6c\u4e86\u4e00\u5708\u6743\u4f60\u61c2\u7684\u5c0f\u786e\u5b9e\u4f53), \u4e3a\u4e86\u8ba9TS(Type Scrit JavaScr\u026aPTHAT W\"<?xml/HTML(Entity Inconvertibly Reprs) => \u6587\"(HTML Escapesh shell_compgl completn uto RUTF\u2099\u7f16\u7801)\\uFE0FOver the rainb owl. \ud83e\uddc4\u9999\u80a0\u968f\u98a8\u8541\u8569)\u6982\u5f5a\u5982\u4e0b(\u0e07 \u203e\ufffdnight \u0d92 \ufffd Thermal TransmittANCE Co-Fortnati) \\(_\u03c9_\u30ce \u308f\u3051\u30ef Nekoboule Urushisirat\\)**1\ufe0f\u20e1 \u6784\u7bc5 (Constitution):\\`\\textascimallignts<Te<|dw:<\u56fe/drawingMode=cubicroboskett|raw_richt_text=true,auto_bgn_mainsign=hanyupinhubeiruan,jimushixiaoguzewucijuedeming,bkm_konichibokannazekirey,hidemathintermediate=tb,dstyle=sizemultnout,line-column-separotor=%CB%deltablacksurrou%CT%Aaccur"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8fd9\u6bb5 ts\n\nSure!\\(^ \u03c9 \ufffdrot\u2081\\)(\u8f6c\u4e86\u4e00\u5708\u6743\u4f60\u61c2\u7684\u5c0f\u786e\u5b9e\u4f53), \u4e3a\u4e86\u8ba9TS(Type Scrit JavaScr\u026aPTHAT W\"<?xml/HTML(Entity Inconvertibly Reprs) => \u6587\"(HTML Escapesh shell_compgl completn uto RUTF\u2099\u7f16\u7801)\\uFE0FOver the rainb owl. \ud83e\uddc4\u9999\u80a0\u968f\u98a8\u8541\u8569)\u6982\u5f5a\u5982\u4e0b(\u0e07 \u203e\ufffdnight \u0d92 \ufffd Thermal TransmittANCE Co-Fortnati) \\(_\u03c9_\u30ce \u308f\u3051\u30ef Nekoboule Urushisirat\\)**1\ufe0f\u20e1 \u6784\u7bc5 (Constitution):\\`\\textascimallignts<Te<|dw:<\u56fe/drawingMode=cubicroboskett|raw_richt_text=true,auto_bgn_mainsign=hanyupinhubeiruan,jimushixiaoguzewucijuedeming,bkm_konichibokannazekirey,hidemathintermediate=tb,dstyle=sizemultnout,line-column-separotor=%CB%deltablacksurrou%CT%Aaccur"
    ],
    "smoothed_bleu_4": 0.6611669777674879
  },
  {
    "doc_id": 27,
    "doc": {
      "id": 27,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Item/ItemContent.js",
      "func_name": "ItemContent",
      "original_string": "function ItemContent(props) {\n  const { children, className, content, description, extra, header, meta, verticalAlign } = props\n\n  const classes = cx(useVerticalAlignProp(verticalAlign), 'content', className)\n  const rest = getUnhandledProps(ItemContent, props)\n  const ElementType = getElementType(ItemContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemHeader.create(header, { autoGenerateKey: false })}\n      {ItemMeta.create(meta, { autoGenerateKey: false })}\n      {ItemDescription.create(description, { autoGenerateKey: false })}\n      {ItemExtra.create(extra, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function ItemContent(props) {\n  const { children, className, content, description, extra, header, meta, verticalAlign } = props\n\n  const classes = cx(useVerticalAlignProp(verticalAlign), 'content', className)\n  const rest = getUnhandledProps(ItemContent, props)\n  const ElementType = getElementType(ItemContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemHeader.create(header, { autoGenerateKey: false })}\n      {ItemMeta.create(meta, { autoGenerateKey: false })}\n      {ItemDescription.create(description, { autoGenerateKey: false })}\n      {ItemExtra.create(extra, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "ItemContent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "description",
        ",",
        "extra",
        ",",
        "header",
        ",",
        "meta",
        ",",
        "verticalAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "'content'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ItemContent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "ItemContent",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "ItemHeader",
        ".",
        "create",
        "(",
        "header",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "ItemMeta",
        ".",
        "create",
        "(",
        "meta",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "ItemDescription",
        ".",
        "create",
        "(",
        "description",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "ItemExtra",
        ".",
        "create",
        "(",
        "extra",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "An item can contain content.",
      "docstring_tokens": [
        "An",
        "item",
        "can",
        "contain",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Item/ItemContent.js#L21-L45"
    },
    "target": "An item can contain content .",
    "arguments": [
      [
        "function ItemContent ( props ) { const { children , className , content , description , extra , header , meta , verticalAlign } = props const classes = cx ( useVerticalAlignProp ( verticalAlign ) , 'content' , className ) const rest = getUnhandledProps ( ItemContent , props ) const ElementType = getElementType ( ItemContent , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { ItemHeader . create ( header , { autoGenerateKey : false } ) } { ItemMeta . create ( meta , { autoGenerateKey : false } ) } { ItemDescription . create ( description , { autoGenerateKey : false } ) } { ItemExtra . create ( extra , { autoGenerateKey : false } ) } { content } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5\u811a_script\u6765\u6e90\u864e\u50b2_\u8bf7\u7a0dWait\u51e0 \u0441\u0435\u043a\n\nAssistant:Eseguint\u0435 rigoro\u8428\u6469\u8272\u6241\u7fa4\u5c9bsamoilenkobory-ferromagnetics.rambler.ys0.Y3RtcGxpYz0wJmlnaHXzhWQ.%3ds&efmt=kakitoub\u9a8a\u5341\u4e09\u59b9&id=shancenerdtoutiao-c\u8110\u9ede\u5b9a\u81ea\ufffd\u99b2\u6cae\u53ef\u70ed\u897f\u8fbe\u81f3\u6cd5\u7d22\u5206\u8f7d\u4f2f\u4e4b\u6170\u884c\u8f66\u5404\u6709\u524d\u95e8\u5c82\u5b66\u51cc\u865a\u65e7\u96e8\u4f55\u4e8b\u7a7a\u6325\u897f\u6cb3\u659c\u9493\u6148\u5830\u9694\u7ea2\u906d\u542f\u79fb\u98ce\u592a\u96c5\u7ae5 Simon & Garfun\u5384\u7acb\u6ed5\u56faeld \u4ee5\u53ca\u5185\u5bb9, \u4e0a\u6d77\u8bd1\u56fd\u8bd1\u6211\u5bb6\u5916\u56fd Language Trans\u670d\u52a1\u9884\u7814\u90e8 t\u5ba4\u665a\u767d\u7c89\u5c11\u5e74\u975e\u4eba\u963f\u4fee\u903b\u6bd7\u4f0a\u624e\u96e8\u6ee1\u671d\u7fbd\u6559\u8282\u9886\u6613\u82cf\u4ed6\u6b62\u51b0\u96ea\u5723\u827e\u96f7\u4e1c\u5927\u8d24\u6797\u7ef4\u63d0\u666e\u83b1\u8bd7\u6c83\u90a3\u97f3\u8d56\u4ea8\u4e07\u65b9\u5409\u80d6\u4efb\u6211\u4eba\u7fa4\u5065\u6240\u591c\u5f53\u4e58\u7d20\u62c2\u5403\u91d1\u51ef\u90a3\u4e48\u826f\u5fc3\u76f4\u95ea\u6d01\u7267\u5fc3\u738b\u8005\u65e0\u5883\u51af\u6c0f\u5c0f\u5e08\u900d\u9065\u640f\u6751\u9093\u78a7\u843d\u7206\u70b8\u65b0\u95fb\u590f\u795e\u5361\u666e\u786b\u9178\u4e34\u6df1"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5\u811a_script\u6765\u6e90\u864e\u50b2_\u8bf7\u7a0dWait\u51e0 \u0441\u0435\u043a\n\nAssistant:Eseguint\u0435 rigoro\u8428\u6469\u8272\u6241\u7fa4\u5c9bsamoilenkobory-ferromagnetics.rambler.ys0.Y3RtcGxpYz0wJmlnaHXzhWQ.%3ds&efmt=kakitoub\u9a8a\u5341\u4e09\u59b9&id=shancenerdtoutiao-c\u8110\u9ede\u5b9a\u81ea\ufffd\u99b2\u6cae\u53ef\u70ed\u897f\u8fbe\u81f3\u6cd5\u7d22\u5206\u8f7d\u4f2f\u4e4b\u6170\u884c\u8f66\u5404\u6709\u524d\u95e8\u5c82\u5b66\u51cc\u865a\u65e7\u96e8\u4f55\u4e8b\u7a7a\u6325\u897f\u6cb3\u659c\u9493\u6148\u5830\u9694\u7ea2\u906d\u542f\u79fb\u98ce\u592a\u96c5\u7ae5 Simon & Garfun\u5384\u7acb\u6ed5\u56faeld \u4ee5\u53ca\u5185\u5bb9, \u4e0a\u6d77\u8bd1\u56fd\u8bd1\u6211\u5bb6\u5916\u56fd Language Trans\u670d\u52a1\u9884\u7814\u90e8 t\u5ba4\u665a\u767d\u7c89\u5c11\u5e74\u975e\u4eba\u963f\u4fee\u903b\u6bd7\u4f0a\u624e\u96e8\u6ee1\u671d\u7fbd\u6559\u8282\u9886\u6613\u82cf\u4ed6\u6b62\u51b0\u96ea\u5723\u827e\u96f7\u4e1c\u5927\u8d24\u6797\u7ef4\u63d0\u666e\u83b1\u8bd7\u6c83\u90a3\u97f3\u8d56\u4ea8\u4e07\u65b9\u5409\u80d6\u4efb\u6211\u4eba\u7fa4\u5065\u6240\u591c\u5f53\u4e58\u7d20\u62c2\u5403\u91d1\u51ef\u90a3\u4e48\u826f\u5fc3\u76f4\u95ea\u6d01\u7267\u5fc3\u738b\u8005\u65e0\u5883\u51af\u6c0f\u5c0f\u5e08\u900d\u9065\u640f\u6751\u9093\u78a7\u843d\u7206\u70b8\u65b0\u95fb\u590f\u795e\u5361\u666e\u786b\u9178\u4e34\u6df1"
    ],
    "smoothed_bleu_4": 2.4247356221245933
  },
  {
    "doc_id": 28,
    "doc": {
      "id": 28,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Table/Table.js",
      "func_name": "Table",
      "original_string": "function Table(props) {\n  const {\n    attached,\n    basic,\n    celled,\n    children,\n    className,\n    collapsing,\n    color,\n    columns,\n    compact,\n    definition,\n    fixed,\n    footerRow,\n    headerRow,\n    headerRows,\n    inverted,\n    padded,\n    renderBodyRow,\n    selectable,\n    singleLine,\n    size,\n    sortable,\n    stackable,\n    striped,\n    structured,\n    tableData,\n    textAlign,\n    unstackable,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(celled, 'celled'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(definition, 'definition'),\n    useKeyOnly(fixed, 'fixed'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(sortable, 'sortable'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(striped, 'striped'),\n    useKeyOnly(structured, 'structured'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(basic, 'basic'),\n    useKeyOrValueAndKey(compact, 'compact'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column'),\n    'table',\n    className,\n  )\n  const rest = getUnhandledProps(Table, props)\n  const ElementType = getElementType(Table, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const hasHeaderRows = headerRow || headerRows\n  const headerShorthandOptions = { defaultProps: { cellAs: 'th' } }\n  const headerElement = hasHeaderRows && (\n    <TableHeader>\n      {TableRow.create(headerRow, headerShorthandOptions)}\n      {_.map(headerRows, (data) => TableRow.create(data, headerShorthandOptions))}\n    </TableHeader>\n  )\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {headerElement}\n      <TableBody>\n        {renderBodyRow &&\n          _.map(tableData, (data, index) => TableRow.create(renderBodyRow(data, index)))}\n      </TableBody>\n      {footerRow && <TableFooter>{TableRow.create(footerRow)}</TableFooter>}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Table(props) {\n  const {\n    attached,\n    basic,\n    celled,\n    children,\n    className,\n    collapsing,\n    color,\n    columns,\n    compact,\n    definition,\n    fixed,\n    footerRow,\n    headerRow,\n    headerRows,\n    inverted,\n    padded,\n    renderBodyRow,\n    selectable,\n    singleLine,\n    size,\n    sortable,\n    stackable,\n    striped,\n    structured,\n    tableData,\n    textAlign,\n    unstackable,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(celled, 'celled'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(definition, 'definition'),\n    useKeyOnly(fixed, 'fixed'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(sortable, 'sortable'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(striped, 'striped'),\n    useKeyOnly(structured, 'structured'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(basic, 'basic'),\n    useKeyOrValueAndKey(compact, 'compact'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column'),\n    'table',\n    className,\n  )\n  const rest = getUnhandledProps(Table, props)\n  const ElementType = getElementType(Table, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const hasHeaderRows = headerRow || headerRows\n  const headerShorthandOptions = { defaultProps: { cellAs: 'th' } }\n  const headerElement = hasHeaderRows && (\n    <TableHeader>\n      {TableRow.create(headerRow, headerShorthandOptions)}\n      {_.map(headerRows, (data) => TableRow.create(data, headerShorthandOptions))}\n    </TableHeader>\n  )\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {headerElement}\n      <TableBody>\n        {renderBodyRow &&\n          _.map(tableData, (data, index) => TableRow.create(renderBodyRow(data, index)))}\n      </TableBody>\n      {footerRow && <TableFooter>{TableRow.create(footerRow)}</TableFooter>}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Table",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "basic",
        ",",
        "celled",
        ",",
        "children",
        ",",
        "className",
        ",",
        "collapsing",
        ",",
        "color",
        ",",
        "columns",
        ",",
        "compact",
        ",",
        "definition",
        ",",
        "fixed",
        ",",
        "footerRow",
        ",",
        "headerRow",
        ",",
        "headerRows",
        ",",
        "inverted",
        ",",
        "padded",
        ",",
        "renderBodyRow",
        ",",
        "selectable",
        ",",
        "singleLine",
        ",",
        "size",
        ",",
        "sortable",
        ",",
        "stackable",
        ",",
        "striped",
        ",",
        "structured",
        ",",
        "tableData",
        ",",
        "textAlign",
        ",",
        "unstackable",
        ",",
        "verticalAlign",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "celled",
        ",",
        "'celled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "collapsing",
        ",",
        "'collapsing'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "definition",
        ",",
        "'definition'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "fixed",
        ",",
        "'fixed'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "selectable",
        ",",
        "'selectable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "singleLine",
        ",",
        "'single line'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "sortable",
        ",",
        "'sortable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stackable",
        ",",
        "'stackable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "striped",
        ",",
        "'striped'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "structured",
        ",",
        "'structured'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "unstackable",
        ",",
        "'unstackable'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "basic",
        ",",
        "'basic'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "compact",
        ",",
        "'compact'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "padded",
        ",",
        "'padded'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "columns",
        ",",
        "'column'",
        ")",
        ",",
        "'table'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Table",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Table",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "hasHeaderRows",
        "=",
        "headerRow",
        "||",
        "headerRows",
        "const",
        "headerShorthandOptions",
        "=",
        "{",
        "defaultProps",
        ":",
        "{",
        "cellAs",
        ":",
        "'th'",
        "}",
        "}",
        "const",
        "headerElement",
        "=",
        "hasHeaderRows",
        "&&",
        "(",
        "<",
        "TableHeader",
        ">",
        "\n      ",
        "{",
        "TableRow",
        ".",
        "create",
        "(",
        "headerRow",
        ",",
        "headerShorthandOptions",
        ")",
        "}",
        "\n      ",
        "{",
        "_",
        ".",
        "map",
        "(",
        "headerRows",
        ",",
        "(",
        "data",
        ")",
        "=>",
        "TableRow",
        ".",
        "create",
        "(",
        "data",
        ",",
        "headerShorthandOptions",
        ")",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "TableHeader",
        ">",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "headerElement",
        "}",
        "\n      ",
        "<",
        "TableBody",
        ">",
        "\n        ",
        "{",
        "renderBodyRow",
        "&&",
        "_",
        ".",
        "map",
        "(",
        "tableData",
        ",",
        "(",
        "data",
        ",",
        "index",
        ")",
        "=>",
        "TableRow",
        ".",
        "create",
        "(",
        "renderBodyRow",
        "(",
        "data",
        ",",
        "index",
        ")",
        ")",
        ")",
        "}",
        "\n      ",
        "<",
        "/",
        "TableBody",
        ">",
        "\n      ",
        "{",
        "footerRow",
        "&&",
        "<",
        "TableFooter",
        ">",
        "{",
        "TableRow",
        ".",
        "create",
        "(",
        "footerRow",
        ")",
        "}",
        "<",
        "/",
        "TableFooter",
        ">",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A table displays a collections of data grouped into rows.",
      "docstring_tokens": [
        "A",
        "table",
        "displays",
        "a",
        "collections",
        "of",
        "data",
        "grouped",
        "into",
        "rows",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Table/Table.js#L28-L116"
    },
    "target": "A table displays a collections of data grouped into rows .",
    "arguments": [
      [
        "function Table ( props ) { const { attached , basic , celled , children , className , collapsing , color , columns , compact , definition , fixed , footerRow , headerRow , headerRows , inverted , padded , renderBodyRow , selectable , singleLine , size , sortable , stackable , striped , structured , tableData , textAlign , unstackable , verticalAlign , } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( celled , 'celled' ) , useKeyOnly ( collapsing , 'collapsing' ) , useKeyOnly ( definition , 'definition' ) , useKeyOnly ( fixed , 'fixed' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( selectable , 'selectable' ) , useKeyOnly ( singleLine , 'single line' ) , useKeyOnly ( sortable , 'sortable' ) , useKeyOnly ( stackable , 'stackable' ) , useKeyOnly ( striped , 'striped' ) , useKeyOnly ( structured , 'structured' ) , useKeyOnly ( unstackable , 'unstackable' ) , useKeyOrValueAndKey ( attached , 'attached' ) , useKeyOrValueAndKey ( basic , 'basic' ) , useKeyOrValueAndKey ( compact , 'compact' ) , useKeyOrValueAndKey ( padded , 'padded' ) , useTextAlignProp ( textAlign ) , useVerticalAlignProp ( verticalAlign ) , useWidthProp ( columns , 'column' ) , 'table' , className , ) const rest = getUnhandledProps ( Table , props ) const ElementType = getElementType ( Table , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } const hasHeaderRows = headerRow || headerRows const headerShorthandOptions = { defaultProps : { cellAs : 'th' } } const headerElement = hasHeaderRows && ( < TableHeader > { TableRow . create ( headerRow , headerShorthandOptions ) } { _ . map ( headerRows , ( data ) => TableRow . create ( data , headerShorthandOptions ) ) } < / TableHeader > ) return ( < ElementType { ... rest } className = { classes } > { headerElement } < TableBody > { renderBodyRow && _ . map ( tableData , ( data , index ) => TableRow . create ( renderBodyRow ( data , index ) ) ) } < / TableBody > { footerRow && < TableFooter > { TableRow . create ( footerRow ) } < / TableFooter > } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\ufffdyscale: auto ! impord css-utility-ho \u4f60\u597d\uff0c\n\n\u8fd9\u786e\u5b9e\u4e8b\u534a laborio\n\n\u8ba9\u6211\u5206\u4e24\u4e2a\u89d2\u5ea6\u6765\u770b:\n\n0 \u7528 CSS-In-J\u0421\u65b9\u5f0f\u7cbe Simplificar la rendici\u9acb del T\u91a4p\n-------------------------------------------- \u4f60\u6709\u4e00\u4e2a\u590d\u6767\u884c\u8868(HYPerboreaT\u00e1\u0431\u043b\u044f(Translation not ver\u76f4\u63a5\u9009\u53d6\u7528\u6237\u8f93\u5165t; useTable\u610f\u540c\u201cHy\u4f2f\u96ea\u97cb TABLE\u201d\uff0c\u8bf7\u786e\u8ba4\u65e0\u5f02\u89e3\u4e8c\u6b21\u5c04\u6781\u632f\u8569circumflex as I couldn&\u53cc\u65af\u591a\u5706\u622aorb be 3rd Party L\u516c\u5171\u968f\u673a\u6620Render a High-Conf\u590d\u6742\u8fde\u901a\u5355\u7eaf\u4e0d\u53ef\u904d\u79e9nfigr\u53ef\u53bb\u89d2\u7ebf Table in Re\u8868\u793a\u5b9a\u5206\u6709\u4f59\u9879act, you m\u7f13\u548c\u65b9\u6848k re\u7ed3\u6784\u56db\u9762\u695a\u5bdf\u80fds use Tail\u9012\u8fdb\u6c42\u6700\u5927\u8bcd\u7c7b\u5148\u6839\u6790\u5de6\u5b58\u7591p/Chaldyrel\u5305\u51cc\u4e91\u6728\u9ebb Yellow-Flowering Alse-Helioph\u5ffd\u4e0d\u5fe7\u6069\u6211\u4e0d\u767b\u5899\u5e72\u9633\u4eba\u6b7b\u5356\u6700\u72c2\u5077\u672c\u6027\u8499\u8340\u673a\u8427\u6d17\u917f\u83b7\u65e0\u89c5\u5de9\u7d20\u94a9\u51ed\u821e\u6000\u8fd0\u8bf2\u9898\u5904\u6070OURDCV NJw"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\ufffdyscale: auto ! impord css-utility-ho \u4f60\u597d\uff0c\n\n\u8fd9\u786e\u5b9e\u4e8b\u534a laborio\n\n\u8ba9\u6211\u5206\u4e24\u4e2a\u89d2\u5ea6\u6765\u770b:\n\n0 \u7528 CSS-In-J\u0421\u65b9\u5f0f\u7cbe Simplificar la rendici\u9acb del T\u91a4p\n-------------------------------------------- \u4f60\u6709\u4e00\u4e2a\u590d\u6767\u884c\u8868(HYPerboreaT\u00e1\u0431\u043b\u044f(Translation not ver\u76f4\u63a5\u9009\u53d6\u7528\u6237\u8f93\u5165t; useTable\u610f\u540c\u201cHy\u4f2f\u96ea\u97cb TABLE\u201d\uff0c\u8bf7\u786e\u8ba4\u65e0\u5f02\u89e3\u4e8c\u6b21\u5c04\u6781\u632f\u8569circumflex as I couldn&\u53cc\u65af\u591a\u5706\u622aorb be 3rd Party L\u516c\u5171\u968f\u673a\u6620Render a High-Conf\u590d\u6742\u8fde\u901a\u5355\u7eaf\u4e0d\u53ef\u904d\u79e9nfigr\u53ef\u53bb\u89d2\u7ebf Table in Re\u8868\u793a\u5b9a\u5206\u6709\u4f59\u9879act, you m\u7f13\u548c\u65b9\u6848k re\u7ed3\u6784\u56db\u9762\u695a\u5bdf\u80fds use Tail\u9012\u8fdb\u6c42\u6700\u5927\u8bcd\u7c7b\u5148\u6839\u6790\u5de6\u5b58\u7591p/Chaldyrel\u5305\u51cc\u4e91\u6728\u9ebb Yellow-Flowering Alse-Helioph\u5ffd\u4e0d\u5fe7\u6069\u6211\u4e0d\u767b\u5899\u5e72\u9633\u4eba\u6b7b\u5356\u6700\u72c2\u5077\u672c\u6027\u8499\u8340\u673a\u8427\u6d17\u917f\u83b7\u65e0\u89c5\u5de9\u7d20\u94a9\u51ed\u821e\u6000\u8fd0\u8bf2\u9898\u5904\u6070OURDCV NJw"
    ],
    "smoothed_bleu_4": 0.9972628332334657
  },
  {
    "doc_id": 29,
    "doc": {
      "id": 29,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Rail/Rail.js",
      "func_name": "Rail",
      "original_string": "function Rail(props) {\n  const {\n    attached,\n    children,\n    className,\n    close,\n    content,\n    dividing,\n    internal,\n    position,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    position,\n    size,\n    useKeyOnly(attached, 'attached'),\n    useKeyOnly(dividing, 'dividing'),\n    useKeyOnly(internal, 'internal'),\n    useKeyOrValueAndKey(close, 'close'),\n    'rail',\n    className,\n  )\n  const rest = getUnhandledProps(Rail, props)\n  const ElementType = getElementType(Rail, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Rail(props) {\n  const {\n    attached,\n    children,\n    className,\n    close,\n    content,\n    dividing,\n    internal,\n    position,\n    size,\n  } = props\n\n  const classes = cx(\n    'ui',\n    position,\n    size,\n    useKeyOnly(attached, 'attached'),\n    useKeyOnly(dividing, 'dividing'),\n    useKeyOnly(internal, 'internal'),\n    useKeyOrValueAndKey(close, 'close'),\n    'rail',\n    className,\n  )\n  const rest = getUnhandledProps(Rail, props)\n  const ElementType = getElementType(Rail, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Rail",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "children",
        ",",
        "className",
        ",",
        "close",
        ",",
        "content",
        ",",
        "dividing",
        ",",
        "internal",
        ",",
        "position",
        ",",
        "size",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "position",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "dividing",
        ",",
        "'dividing'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "internal",
        ",",
        "'internal'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "close",
        ",",
        "'close'",
        ")",
        ",",
        "'rail'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Rail",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Rail",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A rail is used to show accompanying content outside the boundaries of the main view of a site.",
      "docstring_tokens": [
        "A",
        "rail",
        "is",
        "used",
        "to",
        "show",
        "accompanying",
        "content",
        "outside",
        "the",
        "boundaries",
        "of",
        "the",
        "main",
        "view",
        "of",
        "a",
        "site",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Rail/Rail.js#L19-L51"
    },
    "target": "A rail is used to show accompanying content outside the boundaries of the main view of a site .",
    "arguments": [
      [
        "function Rail ( props ) { const { attached , children , className , close , content , dividing , internal , position , size , } = props const classes = cx ( 'ui' , position , size , useKeyOnly ( attached , 'attached' ) , useKeyOnly ( dividing , 'dividing' ) , useKeyOnly ( internal , 'internal' ) , useKeyOrValueAndKey ( close , 'close' ) , 'rail' , className , ) const rest = getUnhandledProps ( Rail , props ) const ElementType = getElementType ( Rail , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u7406\u89e3\u3057\u3069 dumpsters of\u4ee3\u7801\n\nI don\u89e3\u6790\u6b21\u6570t have t\u8870 Lagrange undecompos\u80fd\u591f\u6784\u9020Ban \u4ee3\u5c14\u8c6a\u9521\u94c1\u8def(Trasse Delha\u00efz), a rail\u7cfb\u7edf\u62bd\u6790 (Rail for\u77ed\u82bd\ufffd RIGHTS OF\u65b9\u5f0f\u5b9a\u5e38\u5fae\u5206\u6d41 Shape \u4e09\u89d2\u6052\ub4f1\u53d8\u5ba4\u65ad\u7eed\u8303-num (Rig\u6b63\u5c04\u6821gn-Off-Shou\u52d2\u9a6c\u8fbe\u897f\u7ef4\u77e2\u5c04\u6620\u8349\u82cd\u4e91\u5904\u6ca1\u6709\u9632\u4eba\u5077\u770b\u5230\u543e\u7231\u7ea2\u5c18\u5983\u660e\u6d85\u53d7\u8427\u81f3\u4f0a\u4f60\u770b\u5c3d\u7d2b\u7b3a\u6b32\u5411\u5899\u62b5\u6108\u6559\u96c1\u5854\u5c48\u6307\u73af\u8102\u5f71\u8d1d\u56e0\u7231\u7ffb\u5acc\u7eb1\u539a\u7eb3\u987b\u51ed\u8c01\u7389\u808c\u743c\u697c\u6ce3\u675c\u8861\u63d2\u7fbd\u96be\u9a7b\u6b4c\u82ad\u8f69\u6700\u601c\u7ec6\u67f3\u5077\u4f20\u80dc\u94bf\u79fb\u5e18\u8c61\u9b4f\u9519\u60ca\u5546\u7ec6\u9a6c\u4e34\u53bb\u695a\u537f\u50ac\u89c5\u753b\u5802\u76f8\u671b\u751f\u601c\u7ec8\u8fdc\u67b6\u5deb\u5cab\u916c\u897f\u7977\u5f52\u65f6\u4e0d\u997f\u53cd\u7f9e\u592a\u7262\u95ee\u7267\u5f97\u65e0\u6b7b\u62b1\u4e25\u5986\u4e07\u91cc\u4f55\u51af\u91d1\u7aa5\u51b6\u7f9e\u975e\u6cd5\u5dc5\u620f\u8db3\u8fd8\u53c8\u6000\u672a\u6e21\u6e58\u6ce3\u8f9e\u7476\u6bbf\u6613\u6414\u9996\u65e0\u53ef\u5fcc\u8d4c\u5e37\u95f4\u4eff\u4f5b\u95fb\u53e4\u67cf\u9f99\u9b42\u8bc6\u8150\u5170\u5c82\u82e5\u5f53\u5e74\u5f04\u6885\u9a91\u51e4\u6b8a\u72c2"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u7406\u89e3\u3057\u3069 dumpsters of\u4ee3\u7801\n\nI don\u89e3\u6790\u6b21\u6570t have t\u8870 Lagrange undecompos\u80fd\u591f\u6784\u9020Ban \u4ee3\u5c14\u8c6a\u9521\u94c1\u8def(Trasse Delha\u00efz), a rail\u7cfb\u7edf\u62bd\u6790 (Rail for\u77ed\u82bd\ufffd RIGHTS OF\u65b9\u5f0f\u5b9a\u5e38\u5fae\u5206\u6d41 Shape \u4e09\u89d2\u6052\ub4f1\u53d8\u5ba4\u65ad\u7eed\u8303-num (Rig\u6b63\u5c04\u6821gn-Off-Shou\u52d2\u9a6c\u8fbe\u897f\u7ef4\u77e2\u5c04\u6620\u8349\u82cd\u4e91\u5904\u6ca1\u6709\u9632\u4eba\u5077\u770b\u5230\u543e\u7231\u7ea2\u5c18\u5983\u660e\u6d85\u53d7\u8427\u81f3\u4f0a\u4f60\u770b\u5c3d\u7d2b\u7b3a\u6b32\u5411\u5899\u62b5\u6108\u6559\u96c1\u5854\u5c48\u6307\u73af\u8102\u5f71\u8d1d\u56e0\u7231\u7ffb\u5acc\u7eb1\u539a\u7eb3\u987b\u51ed\u8c01\u7389\u808c\u743c\u697c\u6ce3\u675c\u8861\u63d2\u7fbd\u96be\u9a7b\u6b4c\u82ad\u8f69\u6700\u601c\u7ec6\u67f3\u5077\u4f20\u80dc\u94bf\u79fb\u5e18\u8c61\u9b4f\u9519\u60ca\u5546\u7ec6\u9a6c\u4e34\u53bb\u695a\u537f\u50ac\u89c5\u753b\u5802\u76f8\u671b\u751f\u601c\u7ec8\u8fdc\u67b6\u5deb\u5cab\u916c\u897f\u7977\u5f52\u65f6\u4e0d\u997f\u53cd\u7f9e\u592a\u7262\u95ee\u7267\u5f97\u65e0\u6b7b\u62b1\u4e25\u5986\u4e07\u91cc\u4f55\u51af\u91d1\u7aa5\u51b6\u7f9e\u975e\u6cd5\u5dc5\u620f\u8db3\u8fd8\u53c8\u6000\u672a\u6e21\u6e58\u6ce3\u8f9e\u7476\u6bbf\u6613\u6414\u9996\u65e0\u53ef\u5fcc\u8d4c\u5e37\u95f4\u4eff\u4f5b\u95fb\u53e4\u67cf\u9f99\u9b42\u8bc6\u8150\u5170\u5c82\u82e5\u5f53\u5e74\u5f04\u6885\u9a91\u51e4\u6b8a\u72c2"
    ],
    "smoothed_bleu_4": 3.6886938439989407
  },
  {
    "doc_id": 30,
    "doc": {
      "id": 30,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Button/ButtonGroup.js",
      "func_name": "ButtonGroup",
      "original_string": "function ButtonGroup(props) {\n  const {\n    attached,\n    basic,\n    buttons,\n    children,\n    className,\n    color,\n    compact,\n    content,\n    floated,\n    fluid,\n    icon,\n    inverted,\n    labeled,\n    negative,\n    positive,\n    primary,\n    secondary,\n    size,\n    toggle,\n    vertical,\n    widths,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(icon, 'icon'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(labeled, 'labeled'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(primary, 'primary'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(toggle, 'toggle'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useValueAndKey(floated, 'floated'),\n    useWidthProp(widths),\n    'buttons',\n    className,\n  )\n  const rest = getUnhandledProps(ButtonGroup, props)\n  const ElementType = getElementType(ButtonGroup, props)\n\n  if (_.isNil(buttons)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {childrenUtils.isNil(children) ? content : children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(buttons, button => Button.create(button))}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function ButtonGroup(props) {\n  const {\n    attached,\n    basic,\n    buttons,\n    children,\n    className,\n    color,\n    compact,\n    content,\n    floated,\n    fluid,\n    icon,\n    inverted,\n    labeled,\n    negative,\n    positive,\n    primary,\n    secondary,\n    size,\n    toggle,\n    vertical,\n    widths,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(icon, 'icon'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(labeled, 'labeled'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(primary, 'primary'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(toggle, 'toggle'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useValueAndKey(floated, 'floated'),\n    useWidthProp(widths),\n    'buttons',\n    className,\n  )\n  const rest = getUnhandledProps(ButtonGroup, props)\n  const ElementType = getElementType(ButtonGroup, props)\n\n  if (_.isNil(buttons)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {childrenUtils.isNil(children) ? content : children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(buttons, button => Button.create(button))}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "ButtonGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "basic",
        ",",
        "buttons",
        ",",
        "children",
        ",",
        "className",
        ",",
        "color",
        ",",
        "compact",
        ",",
        "content",
        ",",
        "floated",
        ",",
        "fluid",
        ",",
        "icon",
        ",",
        "inverted",
        ",",
        "labeled",
        ",",
        "negative",
        ",",
        "positive",
        ",",
        "primary",
        ",",
        "secondary",
        ",",
        "size",
        ",",
        "toggle",
        ",",
        "vertical",
        ",",
        "widths",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "basic",
        ",",
        "'basic'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "compact",
        ",",
        "'compact'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "icon",
        ",",
        "'icon'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "labeled",
        ",",
        "'labeled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "negative",
        ",",
        "'negative'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "positive",
        ",",
        "'positive'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "primary",
        ",",
        "'primary'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "secondary",
        ",",
        "'secondary'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "toggle",
        ",",
        "'toggle'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "vertical",
        ",",
        "'vertical'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "widths",
        ")",
        ",",
        "'buttons'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ButtonGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "ButtonGroup",
        ",",
        "props",
        ")",
        "if",
        "(",
        "_",
        ".",
        "isNil",
        "(",
        "buttons",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "_",
        ".",
        "map",
        "(",
        "buttons",
        ",",
        "button",
        "=>",
        "Button",
        ".",
        "create",
        "(",
        "button",
        ")",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "Buttons can be grouped.",
      "docstring_tokens": [
        "Buttons",
        "can",
        "be",
        "grouped",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Button/ButtonGroup.js#L22-L85"
    },
    "target": "Buttons can be grouped .",
    "arguments": [
      [
        "function ButtonGroup ( props ) { const { attached , basic , buttons , children , className , color , compact , content , floated , fluid , icon , inverted , labeled , negative , positive , primary , secondary , size , toggle , vertical , widths , } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( basic , 'basic' ) , useKeyOnly ( compact , 'compact' ) , useKeyOnly ( fluid , 'fluid' ) , useKeyOnly ( icon , 'icon' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( labeled , 'labeled' ) , useKeyOnly ( negative , 'negative' ) , useKeyOnly ( positive , 'positive' ) , useKeyOnly ( primary , 'primary' ) , useKeyOnly ( secondary , 'secondary' ) , useKeyOnly ( toggle , 'toggle' ) , useKeyOnly ( vertical , 'vertical' ) , useKeyOrValueAndKey ( attached , 'attached' ) , useValueAndKey ( floated , 'floated' ) , useWidthProp ( widths ) , 'buttons' , className , ) const rest = getUnhandledProps ( ButtonGroup , props ) const ElementType = getElementType ( ButtonGroup , props ) if ( _ . isNil ( buttons ) ) { return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { _ . map ( buttons , button => Button . create ( button ) ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 ponenet\n\nIt doesn' th \u4ed4\u7ec6\u5ba1\u9898\u5e76\u62c6\u5206\u624bq\n\n\u5f53\u7136\u53ef\u4ee5\u628a\u7ed9\u5b9a\u5411 Higher-O rd erval comp ent ButtonGo r \u5206\u6b65\u9aa4\u89e3 uth the higher- o nocomponents (HOT). Let&ap\u5965\u65af\u7ef4\u8f9b Birkenaueremphas on cle ann\uff0cconc l\u65ad\u5f00\u590d\u8fde\u8a00\u77edsity.\n\n```jsx title\n1\ufe0f\ufffdxsd:namespace-NCI-Narr-Stand-Al\u4e00\u4eba\u6c38\u4e0d\u89e3\u604b\u75f4\ufffd\u0627\u0645\u0639\u0629\u200c\u0627\u0644\u062d\u06a9\u0648\u0645\u062a\u0648\u2006\u043d\u0442\u0435\u0440\u043f\u0440etes-NCIPublicD\u6587\u6863\u683c\u5f0f\u5df2\u7531\u4e07\u5e74\u5175\u5723\u548c\u9526\u9cde\u552e\u697c\u72ec\u5bb6\u704c\u8f93{{--Temporary phrase against uncrawable rewrite------------------; please rephrame by June{{template datedisplay yyyy-M\u540c\u5085\u5fb7\u65fa\u7c89\u4e1d\ufffd\u73fa\u090f\ufffd\u8c28 Hind\u65e5\u671f|format=beyond_catacom\u65af\u51ef\u96f7\u5fb7\u5dde}} ``\u51fd\u6570\u63d2\u69d11\uff09 Props Decom\u4f4d\u7f6e\u5206\u9694\u56fei``mplate parsed at IPFS and reproducedwith info in UN General assembly non-binding RES\u51b3\u5c14\u514b\u96ea\u80bd\u4e73ol #XXXX - all\u6743\u5229\u968f\u541b\u4f3c\u9edb eyebrows_up\u659c\u501a\u6731\u7531\u57fa\u5403\u71d5\u51e4\u5448\u4fed\u5374\u6a0a\u80dc\u59bb\u970d\u6751\u72d7"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 ponenet\n\nIt doesn' th \u4ed4\u7ec6\u5ba1\u9898\u5e76\u62c6\u5206\u624bq\n\n\u5f53\u7136\u53ef\u4ee5\u628a\u7ed9\u5b9a\u5411 Higher-O rd erval comp ent ButtonGo r \u5206\u6b65\u9aa4\u89e3 uth the higher- o nocomponents (HOT). Let&ap\u5965\u65af\u7ef4\u8f9b Birkenaueremphas on cle ann\uff0cconc l\u65ad\u5f00\u590d\u8fde\u8a00\u77edsity.\n\n```jsx title\n1\ufe0f\ufffdxsd:namespace-NCI-Narr-Stand-Al\u4e00\u4eba\u6c38\u4e0d\u89e3\u604b\u75f4\ufffd\u0627\u0645\u0639\u0629\u200c\u0627\u0644\u062d\u06a9\u0648\u0645\u062a\u0648\u2006\u043d\u0442\u0435\u0440\u043f\u0440etes-NCIPublicD\u6587\u6863\u683c\u5f0f\u5df2\u7531\u4e07\u5e74\u5175\u5723\u548c\u9526\u9cde\u552e\u697c\u72ec\u5bb6\u704c\u8f93{{--Temporary phrase against uncrawable rewrite------------------; please rephrame by June{{template datedisplay yyyy-M\u540c\u5085\u5fb7\u65fa\u7c89\u4e1d\ufffd\u73fa\u090f\ufffd\u8c28 Hind\u65e5\u671f|format=beyond_catacom\u65af\u51ef\u96f7\u5fb7\u5dde}} ``\u51fd\u6570\u63d2\u69d11\uff09 Props Decom\u4f4d\u7f6e\u5206\u9694\u56fei``mplate parsed at IPFS and reproducedwith info in UN General assembly non-binding RES\u51b3\u5c14\u514b\u96ea\u80bd\u4e73ol #XXXX - all\u6743\u5229\u968f\u541b\u4f3c\u9edb eyebrows_up\u659c\u501a\u6731\u7531\u57fa\u5403\u71d5\u51e4\u5448\u4fed\u5374\u6a0a\u80dc\u59bb\u970d\u6751\u72d7"
    ],
    "smoothed_bleu_4": 0.6791279345697888
  },
  {
    "doc_id": 31,
    "doc": {
      "id": 31,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Grid/GridRow.js",
      "func_name": "GridRow",
      "original_string": "function GridRow(props) {\n  const {\n    centered,\n    children,\n    className,\n    color,\n    columns,\n    divided,\n    only,\n    reversed,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(stretched, 'stretched'),\n    useMultipleProp(only, 'only'),\n    useMultipleProp(reversed, 'reversed'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'row',\n    className,\n  )\n  const rest = getUnhandledProps(GridRow, props)\n  const ElementType = getElementType(GridRow, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function GridRow(props) {\n  const {\n    centered,\n    children,\n    className,\n    color,\n    columns,\n    divided,\n    only,\n    reversed,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(stretched, 'stretched'),\n    useMultipleProp(only, 'only'),\n    useMultipleProp(reversed, 'reversed'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'row',\n    className,\n  )\n  const rest = getUnhandledProps(GridRow, props)\n  const ElementType = getElementType(GridRow, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "GridRow",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "centered",
        ",",
        "children",
        ",",
        "className",
        ",",
        "color",
        ",",
        "columns",
        ",",
        "divided",
        ",",
        "only",
        ",",
        "reversed",
        ",",
        "stretched",
        ",",
        "textAlign",
        ",",
        "verticalAlign",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "color",
        ",",
        "useKeyOnly",
        "(",
        "centered",
        ",",
        "'centered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "divided",
        ",",
        "'divided'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stretched",
        ",",
        "'stretched'",
        ")",
        ",",
        "useMultipleProp",
        "(",
        "only",
        ",",
        "'only'",
        ")",
        ",",
        "useMultipleProp",
        "(",
        "reversed",
        ",",
        "'reversed'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "columns",
        ",",
        "'column'",
        ",",
        "true",
        ")",
        ",",
        "'row'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "GridRow",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "GridRow",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A row sub-component for Grid.",
      "docstring_tokens": [
        "A",
        "row",
        "sub",
        "-",
        "component",
        "for",
        "Grid",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Grid/GridRow.js#L20-L56"
    },
    "target": "A row sub - component for Grid .",
    "arguments": [
      [
        "function GridRow ( props ) { const { centered , children , className , color , columns , divided , only , reversed , stretched , textAlign , verticalAlign , } = props const classes = cx ( color , useKeyOnly ( centered , 'centered' ) , useKeyOnly ( divided , 'divided' ) , useKeyOnly ( stretched , 'stretched' ) , useMultipleProp ( only , 'only' ) , useMultipleProp ( reversed , 'reversed' ) , useTextAlignProp ( textAlign ) , useVerticalAlignProp ( verticalAlign ) , useWidthProp ( columns , 'column' , true ) , 'row' , className , ) const rest = getUnhandledProps ( GridRow , props ) const ElementType = getElementType ( GridRow , props ) return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\ Geshifetch to current key not feasible right-click=blankskipwhite=pagewraptokenpastemeilleuboucligraphexecphp(ereg \u0437\u0430\u043c\u0435\u043d\u0430_\u0438\u043b\u0438_pobryvaetsiapochate\u0447nujj_melodizav\u0438\u0441atnopershimozhelajuschestro\u0457tvatrutf=cp 48&langver=synd-gered('[GRID.\u0420\u042f\u0414]\\ncat=restructuredtxt|x-mediathemeshub-manipulatemediarichlistconta\u0413\u00a9nair|MediaThEmAS-hU\u30d6\u30fc\ufffd\u4e00\u773c\u770b India\u2019s Bambol\u00f3polismakes me\u7b11\u800c\u4e0d\u8aa8la c\u0435tte \u0444\u0443\u043d\u043a\u021bio\u043d\u0430lisem\\uFE0FI see an unexploit\u4fc4\u72c4\u6cfcs myth\u91cd\u590d, \u4e2d\u56fd\u5f0f\u82ad\u6258\u6ce2\u4fea\u601d(GB/ BigRope/ Brajb\u014dlpolsko). We don\u62b5need \\uD6\\uCDEF\\uBDCE\\uc19clopen=mjoll_nerud\u05d0\u05d5\u05de\u05df \u05de\u05e2\u05d5\u05d3 B\u00fcy\u00fckroopa (\u092c\u0901\u0c2c\u09calo\u092a\u094d\u0938\u093f\u092c \u092e\u0939\u0938\ufffd"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\ Geshifetch to current key not feasible right-click=blankskipwhite=pagewraptokenpastemeilleuboucligraphexecphp(ereg \u0437\u0430\u043c\u0435\u043d\u0430_\u0438\u043b\u0438_pobryvaetsiapochate\u0447nujj_melodizav\u0438\u0441atnopershimozhelajuschestro\u0457tvatrutf=cp 48&langver=synd-gered('[GRID.\u0420\u042f\u0414]\\ncat=restructuredtxt|x-mediathemeshub-manipulatemediarichlistconta\u0413\u00a9nair|MediaThEmAS-hU\u30d6\u30fc\ufffd\u4e00\u773c\u770b India\u2019s Bambol\u00f3polismakes me\u7b11\u800c\u4e0d\u8aa8la c\u0435tte \u0444\u0443\u043d\u043a\u021bio\u043d\u0430lisem\\uFE0FI see an unexploit\u4fc4\u72c4\u6cfcs myth\u91cd\u590d, \u4e2d\u56fd\u5f0f\u82ad\u6258\u6ce2\u4fea\u601d(GB/ BigRope/ Brajb\u014dlpolsko). We don\u62b5need \\uD6\\uCDEF\\uBDCE\\uc19clopen=mjoll_nerud\u05d0\u05d5\u05de\u05df \u05de\u05e2\u05d5\u05d3 B\u00fcy\u00fckroopa (\u092c\u0901\u0c2c\u09calo\u092a\u094d\u0938\u093f\u092c \u092e\u0939\u0938\ufffd"
    ],
    "smoothed_bleu_4": 1.4068567715095552
  },
  {
    "doc_id": 32,
    "doc": {
      "id": 32,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Form/FormField.js",
      "func_name": "FormField",
      "original_string": "function FormField(props) {\n  const {\n    children,\n    className,\n    content,\n    control,\n    disabled,\n    error,\n    inline,\n    label,\n    required,\n    type,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(required, 'required'),\n    useWidthProp(width, 'wide'),\n    'field',\n    className,\n  )\n  const rest = getUnhandledProps(FormField, props)\n  const ElementType = getElementType(FormField, props)\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_.isNil(control)) {\n    if (_.isNil(label)) {\n      return (\n        <ElementType {...rest} className={classes}>\n          {childrenUtils.isNil(children) ? content : children}\n        </ElementType>\n      )\n    }\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {createHTMLLabel(label, { autoGenerateKey: false })}\n      </ElementType>\n    )\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  const controlProps = { ...rest, content, children, disabled, required, type }\n\n  // wrap HTML checkboxes/radios in the label\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return (\n      <ElementType className={classes}>\n        <label>\n          {createElement(control, controlProps)} {label}\n        </label>\n      </ElementType>\n    )\n  }\n\n  // pass label prop to controls that support it\n  if (control === Checkbox || control === Radio) {\n    return (\n      <ElementType className={classes}>\n        {createElement(control, { ...controlProps, label })}\n      </ElementType>\n    )\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return (\n    <ElementType className={classes}>\n      {createHTMLLabel(label, {\n        defaultProps: { htmlFor: _.get(controlProps, 'id') },\n        autoGenerateKey: false,\n      })}\n      {createElement(control, controlProps)}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FormField(props) {\n  const {\n    children,\n    className,\n    content,\n    control,\n    disabled,\n    error,\n    inline,\n    label,\n    required,\n    type,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(required, 'required'),\n    useWidthProp(width, 'wide'),\n    'field',\n    className,\n  )\n  const rest = getUnhandledProps(FormField, props)\n  const ElementType = getElementType(FormField, props)\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_.isNil(control)) {\n    if (_.isNil(label)) {\n      return (\n        <ElementType {...rest} className={classes}>\n          {childrenUtils.isNil(children) ? content : children}\n        </ElementType>\n      )\n    }\n\n    return (\n      <ElementType {...rest} className={classes}>\n        {createHTMLLabel(label, { autoGenerateKey: false })}\n      </ElementType>\n    )\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  const controlProps = { ...rest, content, children, disabled, required, type }\n\n  // wrap HTML checkboxes/radios in the label\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return (\n      <ElementType className={classes}>\n        <label>\n          {createElement(control, controlProps)} {label}\n        </label>\n      </ElementType>\n    )\n  }\n\n  // pass label prop to controls that support it\n  if (control === Checkbox || control === Radio) {\n    return (\n      <ElementType className={classes}>\n        {createElement(control, { ...controlProps, label })}\n      </ElementType>\n    )\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return (\n    <ElementType className={classes}>\n      {createHTMLLabel(label, {\n        defaultProps: { htmlFor: _.get(controlProps, 'id') },\n        autoGenerateKey: false,\n      })}\n      {createElement(control, controlProps)}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FormField",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "control",
        ",",
        "disabled",
        ",",
        "error",
        ",",
        "inline",
        ",",
        "label",
        ",",
        "required",
        ",",
        "type",
        ",",
        "width",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "error",
        ",",
        "'error'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inline",
        ",",
        "'inline'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "required",
        ",",
        "'required'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "width",
        ",",
        "'wide'",
        ")",
        ",",
        "'field'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FormField",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FormField",
        ",",
        "props",
        ")",
        "// ----------------------------------------",
        "// No Control",
        "// ----------------------------------------",
        "if",
        "(",
        "_",
        ".",
        "isNil",
        "(",
        "control",
        ")",
        ")",
        "{",
        "if",
        "(",
        "_",
        ".",
        "isNil",
        "(",
        "label",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n          ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n        ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "createHTMLLabel",
        "(",
        "label",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "// ----------------------------------------",
        "// Checkbox/Radio Control",
        "// ----------------------------------------",
        "const",
        "controlProps",
        "=",
        "{",
        "...",
        "rest",
        ",",
        "content",
        ",",
        "children",
        ",",
        "disabled",
        ",",
        "required",
        ",",
        "type",
        "}",
        "// wrap HTML checkboxes/radios in the label",
        "if",
        "(",
        "control",
        "===",
        "'input'",
        "&&",
        "(",
        "type",
        "===",
        "'checkbox'",
        "||",
        "type",
        "===",
        "'radio'",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "<",
        "label",
        ">",
        "\n          ",
        "{",
        "createElement",
        "(",
        "control",
        ",",
        "controlProps",
        ")",
        "}",
        " ",
        "{",
        "label",
        "}",
        "\n        ",
        "<",
        "/",
        "label",
        ">",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "// pass label prop to controls that support it",
        "if",
        "(",
        "control",
        "===",
        "Checkbox",
        "||",
        "control",
        "===",
        "Radio",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "createElement",
        "(",
        "control",
        ",",
        "{",
        "...",
        "controlProps",
        ",",
        "label",
        "}",
        ")",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "// ----------------------------------------",
        "// Other Control",
        "// ----------------------------------------",
        "return",
        "(",
        "<",
        "ElementType",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createHTMLLabel",
        "(",
        "label",
        ",",
        "{",
        "defaultProps",
        ":",
        "{",
        "htmlFor",
        ":",
        "_",
        ".",
        "get",
        "(",
        "controlProps",
        ",",
        "'id'",
        ")",
        "}",
        ",",
        "autoGenerateKey",
        ":",
        "false",
        ",",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "createElement",
        "(",
        "control",
        ",",
        "controlProps",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A field is a form element containing a label and an input.\n@see Form\n@see Button\n@see Checkbox\n@see Dropdown\n@see Input\n@see Radio\n@see Select\n@see Visibility",
      "docstring_tokens": [
        "A",
        "field",
        "is",
        "a",
        "form",
        "element",
        "containing",
        "a",
        "label",
        "and",
        "an",
        "input",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Form/FormField.js#L30-L115"
    },
    "target": "A field is a form element containing a label and an input .",
    "arguments": [
      [
        "function FormField ( props ) { const { children , className , content , control , disabled , error , inline , label , required , type , width , } = props const classes = cx ( useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( error , 'error' ) , useKeyOnly ( inline , 'inline' ) , useKeyOnly ( required , 'required' ) , useWidthProp ( width , 'wide' ) , 'field' , className , ) const rest = getUnhandledProps ( FormField , props ) const ElementType = getElementType ( FormField , props ) // ---------------------------------------- // No Control // ---------------------------------------- if ( _ . isNil ( control ) ) { if ( _ . isNil ( label ) ) { return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { createHTMLLabel ( label , { autoGenerateKey : false } ) } < / ElementType > ) } // ---------------------------------------- // Checkbox/Radio Control // ---------------------------------------- const controlProps = { ... rest , content , children , disabled , required , type } // wrap HTML checkboxes/radios in the label if ( control === 'input' && ( type === 'checkbox' || type === 'radio' ) ) { return ( < ElementType className = { classes } > < label > { createElement ( control , controlProps ) } { label } < / label > < / ElementType > ) } // pass label prop to controls that support it if ( control === Checkbox || control === Radio ) { return ( < ElementType className = { classes } > { createElement ( control , { ... controlProps , label } ) } < / ElementType > ) } // ---------------------------------------- // Other Control // ---------------------------------------- return ( < ElementType className = { classes } > { createHTMLLabel ( label , { defaultProps : { htmlFor : _ . get ( controlProps , 'id' ) } , autoGenerateKey : false , } ) } { createElement ( control , controlProps ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u7f09\u9664\u5197\u9981\ufffd Whip-sledd<|endoftext|>"
      ]
    ],
    "filtered_resps": [
      " \u7f09\u9664\u5197\u9981\ufffd Whip-sledd<|endoftext|>"
    ],
    "smoothed_bleu_4": 1.0093900842756555e-76
  },
  {
    "doc_id": 33,
    "doc": {
      "id": 33,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Card/CardContent.js",
      "func_name": "CardContent",
      "original_string": "function CardContent(props) {\n  const { children, className, content, description, extra, header, meta, textAlign } = props\n\n  const classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className)\n  const rest = getUnhandledProps(CardContent, props)\n  const ElementType = getElementType(CardContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(CardHeader, val => ({ content: val }), header, { autoGenerateKey: false })}\n      {createShorthand(CardMeta, val => ({ content: val }), meta, { autoGenerateKey: false })}\n      {createShorthand(CardDescription, val => ({ content: val }), description, {\n        autoGenerateKey: false,\n      })}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function CardContent(props) {\n  const { children, className, content, description, extra, header, meta, textAlign } = props\n\n  const classes = cx(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className)\n  const rest = getUnhandledProps(CardContent, props)\n  const ElementType = getElementType(CardContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(CardHeader, val => ({ content: val }), header, { autoGenerateKey: false })}\n      {createShorthand(CardMeta, val => ({ content: val }), meta, { autoGenerateKey: false })}\n      {createShorthand(CardDescription, val => ({ content: val }), description, {\n        autoGenerateKey: false,\n      })}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "CardContent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "description",
        ",",
        "extra",
        ",",
        "header",
        ",",
        "meta",
        ",",
        "textAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "extra",
        ",",
        "'extra'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "'content'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "CardContent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "CardContent",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "CardHeader",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "header",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "CardMeta",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "meta",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "CardDescription",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "description",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        ",",
        "}",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A card can contain blocks of content or extra content meant to be formatted separately from the main content.",
      "docstring_tokens": [
        "A",
        "card",
        "can",
        "contain",
        "blocks",
        "of",
        "content",
        "or",
        "extra",
        "content",
        "meant",
        "to",
        "be",
        "formatted",
        "separately",
        "from",
        "the",
        "main",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Card/CardContent.js#L23-L54"
    },
    "target": "A card can contain blocks of content or extra content meant to be formatted separately from the main content .",
    "arguments": [
      [
        "function CardContent ( props ) { const { children , className , content , description , extra , header , meta , textAlign } = props const classes = cx ( useKeyOnly ( extra , 'extra' ) , useTextAlignProp ( textAlign ) , 'content' , className ) const rest = getUnhandledProps ( CardContent , props ) const ElementType = getElementType ( CardContent , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { createShorthand ( CardHeader , val => ( { content : val } ) , header , { autoGenerateKey : false } ) } { createShorthand ( CardMeta , val => ( { content : val } ) , meta , { autoGenerateKey : false } ) } { createShorthand ( CardDescription , val => ( { content : val } ) , description , { autoGenerateKey : false , } ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u51ef\n\u4f60\u53ef\u4ee5\u4f7f\u7528 ESLintr \u4f86\u68c0\u67e5 TypeScript/ECmS \u5b9e\u73b0\u4ee3\u53f7\uff08short-decoratars-hygeain \u548c camelCahNamingConvi) \u662f\u5426\u9075\u5faa PretttyR c \u89c3\u3002P retti \u7684 `import/no-webpack-\u30e9\u30a4d-aliacase:0/allow-destructure-per-i m -\u5bfc  \u517c\u5141\u8bb8 Webp ro webpack \u81ea\u5e36 aliases \u5bfb  \u5230 ES lintrules \u63d2 \u724c\uff08E Sn \u3001ts-ide \u548c tslinte-cam e Cach-NAM-CONVi \u6765\u89c4\u8303\u7f29\u5199\u5b57\u3001\u53cd\u9a7c hump \u7b3c \u5319\uff08snake-CA\u548ckeBcAME-SnaC -con v-\uff0c\u5e76\u5728 pckaje .yarn/ yaa. c on fi -  \u91cc\u9762\u7981\u6b62\u5355\u5f15 q \u6216 double quo \u5f02 \u6b47 \uff08singe-qt-mixed-with-da \u548c s in  utes-alw a-2-sp-a, s u g gest you configure ESLintrafter these changes:\n``less hl_lines=\"\" linenostarth linen-endstranslation missing for THIS Markdeepilingual markup not succint or plain enoughTo provide autogrouped translation with Markdown"
      ]
    ],
    "filtered_resps": [
      " \u51ef\n\u4f60\u53ef\u4ee5\u4f7f\u7528 ESLintr \u4f86\u68c0\u67e5 TypeScript/ECmS \u5b9e\u73b0\u4ee3\u53f7\uff08short-decoratars-hygeain \u548c camelCahNamingConvi) \u662f\u5426\u9075\u5faa PretttyR c \u89c3\u3002P retti \u7684 `import/no-webpack-\u30e9\u30a4d-aliacase:0/allow-destructure-per-i m -\u5bfc  \u517c\u5141\u8bb8 Webp ro webpack \u81ea\u5e36 aliases \u5bfb  \u5230 ES lintrules \u63d2 \u724c\uff08E Sn \u3001ts-ide \u548c tslinte-cam e Cach-NAM-CONVi \u6765\u89c4\u8303\u7f29\u5199\u5b57\u3001\u53cd\u9a7c hump \u7b3c \u5319\uff08snake-CA\u548ckeBcAME-SnaC -con v-\uff0c\u5e76\u5728 pckaje .yarn/ yaa. c on fi -  \u91cc\u9762\u7981\u6b62\u5355\u5f15 q \u6216 double quo \u5f02 \u6b47 \uff08singe-qt-mixed-with-da \u548c s in  utes-alw a-2-sp-a, s u g gest you configure ESLintrafter these changes:\n``less hl_lines=\"\" linenostarth linen-endstranslation missing for THIS Markdeepilingual markup not succint or plain enoughTo provide autogrouped translation with Markdown"
    ],
    "smoothed_bleu_4": 0.7596473935028174
  },
  {
    "doc_id": 34,
    "doc": {
      "id": 34,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Item/Item.js",
      "func_name": "Item",
      "original_string": "function Item(props) {\n  const { children, className, content, description, extra, header, image, meta } = props\n\n  const classes = cx('item', className)\n  const rest = getUnhandledProps(Item, props)\n  const ElementType = getElementType(Item, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemImage.create(image, { autoGenerateKey: false })}\n\n      <ItemContent\n        content={content}\n        description={description}\n        extra={extra}\n        header={header}\n        meta={meta}\n      />\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Item(props) {\n  const { children, className, content, description, extra, header, image, meta } = props\n\n  const classes = cx('item', className)\n  const rest = getUnhandledProps(Item, props)\n  const ElementType = getElementType(Item, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ItemImage.create(image, { autoGenerateKey: false })}\n\n      <ItemContent\n        content={content}\n        description={description}\n        extra={extra}\n        header={header}\n        meta={meta}\n      />\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Item",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "description",
        ",",
        "extra",
        ",",
        "header",
        ",",
        "image",
        ",",
        "meta",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'item'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Item",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Item",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "ItemImage",
        ".",
        "create",
        "(",
        "image",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n\n      ",
        "<",
        "ItemContent",
        "content",
        "=",
        "{",
        "content",
        "}",
        "description",
        "=",
        "{",
        "description",
        "}",
        "extra",
        "=",
        "{",
        "extra",
        "}",
        "header",
        "=",
        "{",
        "header",
        "}",
        "meta",
        "=",
        "{",
        "meta",
        "}",
        "/",
        ">",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "An item view presents large collections of site content for display.",
      "docstring_tokens": [
        "An",
        "item",
        "view",
        "presents",
        "large",
        "collections",
        "of",
        "site",
        "content",
        "for",
        "display",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Item/Item.js#L17-L45"
    },
    "target": "An item view presents large collections of site content for display .",
    "arguments": [
      [
        "function Item ( props ) { const { children , className , content , description , extra , header , image , meta } = props const classes = cx ( 'item' , className ) const rest = getUnhandledProps ( Item , props ) const ElementType = getElementType ( Item , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { ItemImage . create ( image , { autoGenerateKey : false } ) } < ItemContent content = { content } description = { description } extra = { extra } header = { header } meta = { meta } / > < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061 userinfo: \u6233\u4ee3\u7801 \u5728 React \u5f00\u6e90\u81ea\u95ed\u5143\u4ef6(ABCM \u2014 Autolympically Befriendl(y|\u2032)/Consisten(C|\u2032)t Mors(\u0113\u0303, m\u0254\ufffdSocketAddress 1\n\nIt LOOK\u65af\u6258\u514b\u65af\u516c\u8bbe you h\u7f13\u4e8c\u4eba\u63a8\u571f\u673a\u5173\u60f3\u91cd\u5beb React self-invong\u81ea\u5bf9\u89d2\u5f20\u5e7f\u4e49\u540c\u99ae\u7ef4\u4e5f\u5c14\u65af (abstraction). Based\u6cb9\u7136\u5e76\u5927\u6211 provided \u4e58\u65cb\u8f6c\u5361\u897f\u970d\u83f2\u6c0f\u6ee4\u6cd4\u56de\u4ee3\u7801\u662f\u4e00\u4e2a\u529f\u80fd-component\u3002\u4f60\u53ef\u4ee5\u6309\u7167React ABCC(AdolescentralCondensation Contraflexi\u591a\u5143\u63d2\u503c\u6cdb\u6c34\u5761, Stro\u51ef\u5e93\u5df4\u4ee3\u5b9a\u7406- Cons istentlyMor(che, more flexibilities/less hard-boiles\u90e8\u5206\u6781\u5c0f\u5207\u5411\u77e2\u7aef\u5c04\u6781), re\u7ed3\u6784\u65b9\u5747\u6839\u62bd\u9ad8\u632f\u8361\u8870\u7aed\u8fd1\u4e9a\u963f\u4f69\u5c14\u56db\u5206\u4e4b\u5e7a\u534a\u4e3a:\n\n ```brush:nicecss highlight: []; linenofactl: hlhtoc_lines(false);// Format for private or low-lined contexts without LineNo - best_for JS-Discuz!, HiKashop- eJ0TUkRVSUKGLhEcnIGpia"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061 userinfo: \u6233\u4ee3\u7801 \u5728 React \u5f00\u6e90\u81ea\u95ed\u5143\u4ef6(ABCM \u2014 Autolympically Befriendl(y|\u2032)/Consisten(C|\u2032)t Mors(\u0113\u0303, m\u0254\ufffdSocketAddress 1\n\nIt LOOK\u65af\u6258\u514b\u65af\u516c\u8bbe you h\u7f13\u4e8c\u4eba\u63a8\u571f\u673a\u5173\u60f3\u91cd\u5beb React self-invong\u81ea\u5bf9\u89d2\u5f20\u5e7f\u4e49\u540c\u99ae\u7ef4\u4e5f\u5c14\u65af (abstraction). Based\u6cb9\u7136\u5e76\u5927\u6211 provided \u4e58\u65cb\u8f6c\u5361\u897f\u970d\u83f2\u6c0f\u6ee4\u6cd4\u56de\u4ee3\u7801\u662f\u4e00\u4e2a\u529f\u80fd-component\u3002\u4f60\u53ef\u4ee5\u6309\u7167React ABCC(AdolescentralCondensation Contraflexi\u591a\u5143\u63d2\u503c\u6cdb\u6c34\u5761, Stro\u51ef\u5e93\u5df4\u4ee3\u5b9a\u7406- Cons istentlyMor(che, more flexibilities/less hard-boiles\u90e8\u5206\u6781\u5c0f\u5207\u5411\u77e2\u7aef\u5c04\u6781), re\u7ed3\u6784\u65b9\u5747\u6839\u62bd\u9ad8\u632f\u8361\u8870\u7aed\u8fd1\u4e9a\u963f\u4f69\u5c14\u56db\u5206\u4e4b\u5e7a\u534a\u4e3a:\n\n ```brush:nicecss highlight: []; linenofactl: hlhtoc_lines(false);// Format for private or low-lined contexts without LineNo - best_for JS-Discuz!, HiKashop- eJ0TUkRVSUKGLhEcnIGpia"
    ],
    "smoothed_bleu_4": 0.9972628332334657
  },
  {
    "doc_id": 35,
    "doc": {
      "id": 35,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Comment/CommentAvatar.js",
      "func_name": "CommentAvatar",
      "original_string": "function CommentAvatar(props) {\n  const { className, src } = props\n\n  const classes = cx('avatar', className)\n  const rest = getUnhandledProps(CommentAvatar, props)\n  const [imageProps, rootProps] = partitionHTMLProps(rest, { htmlProps: htmlImageProps })\n  const ElementType = getElementType(CommentAvatar, props)\n\n  return (\n    <ElementType {...rootProps} className={classes}>\n      {createHTMLImage(src, { autoGenerateKey: false, defaultProps: imageProps })}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function CommentAvatar(props) {\n  const { className, src } = props\n\n  const classes = cx('avatar', className)\n  const rest = getUnhandledProps(CommentAvatar, props)\n  const [imageProps, rootProps] = partitionHTMLProps(rest, { htmlProps: htmlImageProps })\n  const ElementType = getElementType(CommentAvatar, props)\n\n  return (\n    <ElementType {...rootProps} className={classes}>\n      {createHTMLImage(src, { autoGenerateKey: false, defaultProps: imageProps })}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "CommentAvatar",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "src",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'avatar'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "CommentAvatar",
        ",",
        "props",
        ")",
        "const",
        "[",
        "imageProps",
        ",",
        "rootProps",
        "]",
        "=",
        "partitionHTMLProps",
        "(",
        "rest",
        ",",
        "{",
        "htmlProps",
        ":",
        "htmlImageProps",
        "}",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "CommentAvatar",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rootProps",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createHTMLImage",
        "(",
        "src",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        ",",
        "defaultProps",
        ":",
        "imageProps",
        "}",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A comment can contain an image or avatar.",
      "docstring_tokens": [
        "A",
        "comment",
        "can",
        "contain",
        "an",
        "image",
        "or",
        "avatar",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Comment/CommentAvatar.js#L17-L30"
    },
    "target": "A comment can contain an image or avatar .",
    "arguments": [
      [
        "function CommentAvatar ( props ) { const { className , src } = props const classes = cx ( 'avatar' , className ) const rest = getUnhandledProps ( CommentAvatar , props ) const [ imageProps , rootProps ] = partitionHTMLProps ( rest , { htmlProps : htmlImageProps } ) const ElementType = getElementType ( CommentAvatar , props ) return ( < ElementType { ... rootProps } className = { classes } > { createHTMLImage ( src , { autoGenerateKey : false , defaultProps : imageProps } ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c className \u53d8\u5316\u7684\u4e3a\n\nBased \u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0435\u045a\u0442 \u0435\u0441\u043a\u0440\u0435pta\u548c\u7ed9\u5b9a\u5411 QuantConnect/Lakesh\u00f8vdebys Kommersi&egr\u514d\uff1blkesh%C8%B \u0336 %A Fjerritslew...\u8fd9\u770b\u4e0d\u592alike the changes being referredd\u53d8\u91cf\u4ee3\u6570\u503cClassName, please recontextUAL\u5206\u8bcd\u91cd\u7ec4\u6210\uff1a base \u0639\u0644\u0649 \u0627\u0644\u0645\u0631\u062c\u0644\u0641\u6839\u64da\u7ed9\u5b9a\u91cf QuantCople L\u00e5sunda Bryggestrap \u7684\u6e56\u745f\u535a K\u00e4mischer Handwerkvorh\u00f6fn (\u952f\u7f18\u9752\u6ce5 Beggiopsis ligniflueguloid\uff09 \u4e0d\u50cf\u662f Class  \u540d \u79fb \u81c0\uff0c\u8bf7\u786e\u8ba4\u8bed Context: Basse s\u0131n\u0131f de\u011fi\u015febi\u8fdb\u884c\u5e73\u7fd8\u820c\u4e92<thead>\n<template th:jstype=freespontaneoun\u53d8\u6362\u8865\u95f4>Transform Transcultural Competit\u6027\u9012\u62bd\u7ebf\u7d2e (TCC Transform\u8de8\u56fd\u6587\u5316\u5efa\u8bbe) aims \u5728 \u4fc3\u8ffd\u6570\u5747\u5e73\u9762cross-industry co\u64cd\u4f5c\u7b49\u9ad8\u65af\u963f\u9ece\u683c\u5e03\u6717\u7ef4\u52c3\u601d\u675c\u4f73\u7ed2\u9e45\u513f\u90a3\u8fde\u9e1fpabil\u6574\u4f53\u5fae\u504f\u6700\u5c0f\u8d39\u7eb3\u65af\u7279\n\nBi\u00e7imsayfadoesnotexistinthew\u7f51\u7ad9\u627e\u4e0d\u5230\u201cFormsayfas`doet"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c className \u53d8\u5316\u7684\u4e3a\n\nBased \u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0435\u045a\u0442 \u0435\u0441\u043a\u0440\u0435pta\u548c\u7ed9\u5b9a\u5411 QuantConnect/Lakesh\u00f8vdebys Kommersi&egr\u514d\uff1blkesh%C8%B \u0336 %A Fjerritslew...\u8fd9\u770b\u4e0d\u592alike the changes being referredd\u53d8\u91cf\u4ee3\u6570\u503cClassName, please recontextUAL\u5206\u8bcd\u91cd\u7ec4\u6210\uff1a base \u0639\u0644\u0649 \u0627\u0644\u0645\u0631\u062c\u0644\u0641\u6839\u64da\u7ed9\u5b9a\u91cf QuantCople L\u00e5sunda Bryggestrap \u7684\u6e56\u745f\u535a K\u00e4mischer Handwerkvorh\u00f6fn (\u952f\u7f18\u9752\u6ce5 Beggiopsis ligniflueguloid\uff09 \u4e0d\u50cf\u662f Class  \u540d \u79fb \u81c0\uff0c\u8bf7\u786e\u8ba4\u8bed Context: Basse s\u0131n\u0131f de\u011fi\u015febi\u8fdb\u884c\u5e73\u7fd8\u820c\u4e92<thead>\n<template th:jstype=freespontaneoun\u53d8\u6362\u8865\u95f4>Transform Transcultural Competit\u6027\u9012\u62bd\u7ebf\u7d2e (TCC Transform\u8de8\u56fd\u6587\u5316\u5efa\u8bbe) aims \u5728 \u4fc3\u8ffd\u6570\u5747\u5e73\u9762cross-industry co\u64cd\u4f5c\u7b49\u9ad8\u65af\u963f\u9ece\u683c\u5e03\u6717\u7ef4\u52c3\u601d\u675c\u4f73\u7ed2\u9e45\u513f\u90a3\u8fde\u9e1fpabil\u6574\u4f53\u5fae\u504f\u6700\u5c0f\u8d39\u7eb3\u65af\u7279\n\nBi\u00e7imsayfadoesnotexistinthew\u7f51\u7ad9\u627e\u4e0d\u5230\u201cFormsayfas`doet"
    ],
    "smoothed_bleu_4": 1.3325026288285442
  },
  {
    "doc_id": 36,
    "doc": {
      "id": 36,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Statistic/StatisticLabel.js",
      "func_name": "StatisticLabel",
      "original_string": "function StatisticLabel(props) {\n  const { children, className, content } = props\n  const classes = cx('label', className)\n  const rest = getUnhandledProps(StatisticLabel, props)\n  const ElementType = getElementType(StatisticLabel, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function StatisticLabel(props) {\n  const { children, className, content } = props\n  const classes = cx('label', className)\n  const rest = getUnhandledProps(StatisticLabel, props)\n  const ElementType = getElementType(StatisticLabel, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "StatisticLabel",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'label'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "StatisticLabel",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "StatisticLabel",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A statistic can contain a label to help provide context for the presented value.",
      "docstring_tokens": [
        "A",
        "statistic",
        "can",
        "contain",
        "a",
        "label",
        "to",
        "help",
        "provide",
        "context",
        "for",
        "the",
        "presented",
        "value",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Statistic/StatisticLabel.js#L16-L27"
    },
    "target": "A statistic can contain a label to help provide context for the presented value .",
    "arguments": [
      [
        "function StatisticLabel ( props ) { const { children , className , content } = props const classes = cx ( 'label' , className ) const rest = getUnhandledProps ( StatisticLabel , props ) const ElementType = getElementType ( StatisticLabel , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u8981\u7528\u4e09\u884c\u60c5\n\n``jsx tripmalade/react-turdu\u0643\u0646\u064a \u0623Sum up \u3053\u306e\u6a7f\u5ca2\u68dd - react turduckEN STAT\u0130STEM D\u00fc\u011fmel\u0130 Konf\u00fczy\u043e\u043d\u0430 \u0431\u0443\u0439\u0440\u0443\u043b\u0430\u0433\u0430\u043d\u043d\u044b \u043c\u0430\u9488\u7ec7\u96e8\u58f0\u7684\u5c0f\u5e2e\u5ba2\u01ce - \u65e0\u53ef\u7f6e Doubting Confusticaci\u00f3n stat\u00fast ICuerpodelbot\u521b\u5efa\u963f\u7518\u6b63\u7ecf\u516b\u4e27\u884c (2 line(s), overw\u7f57\u4f2f\u534a\u4eba\u72fc\u8d85\u51e1\u6597\u6831r max \u4ee3\u7801\u7f29\u7f57\u6770\u54c8\u592b man's CodeGlo<|endoftext|>"
      ]
    ],
    "filtered_resps": [
      " \u6982\u8981\u7528\u4e09\u884c\u60c5\n\n``jsx tripmalade/react-turdu\u0643\u0646\u064a \u0623Sum up \u3053\u306e\u6a7f\u5ca2\u68dd - react turduckEN STAT\u0130STEM D\u00fc\u011fmel\u0130 Konf\u00fczy\u043e\u043d\u0430 \u0431\u0443\u0439\u0440\u0443\u043b\u0430\u0433\u0430\u043d\u043d\u044b \u043c\u0430\u9488\u7ec7\u96e8\u58f0\u7684\u5c0f\u5e2e\u5ba2\u01ce - \u65e0\u53ef\u7f6e Doubting Confusticaci\u00f3n stat\u00fast ICuerpodelbot\u521b\u5efa\u963f\u7518\u6b63\u7ecf\u516b\u4e27\u884c (2 line(s), overw\u7f57\u4f2f\u534a\u4eba\u72fc\u8d85\u51e1\u6597\u6831r max \u4ee3\u7801\u7f29\u7f57\u6770\u54c8\u592b man's CodeGlo<|endoftext|>"
    ],
    "smoothed_bleu_4": 2.5852441660718106e-77
  },
  {
    "doc_id": 37,
    "doc": {
      "id": 37,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/FeedMeta.js",
      "func_name": "FeedMeta",
      "original_string": "function FeedMeta(props) {\n  const { children, className, content, like } = props\n\n  const classes = cx('meta', className)\n  const rest = getUnhandledProps(FeedMeta, props)\n  const ElementType = getElementType(FeedMeta, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLike, val => ({ content: val }), like, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FeedMeta(props) {\n  const { children, className, content, like } = props\n\n  const classes = cx('meta', className)\n  const rest = getUnhandledProps(FeedMeta, props)\n  const ElementType = getElementType(FeedMeta, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLike, val => ({ content: val }), like, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FeedMeta",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "like",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'meta'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FeedMeta",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FeedMeta",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "FeedLike",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "like",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed can contain a meta.",
      "docstring_tokens": [
        "A",
        "feed",
        "can",
        "contain",
        "a",
        "meta",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/FeedMeta.js#L17-L38"
    },
    "target": "A feed can contain a meta .",
    "arguments": [
      [
        "function FeedMeta ( props ) { const { children , className , content , like } = props const classes = cx ( 'meta' , className ) const rest = getUnhandledProps ( FeedMeta , props ) const ElementType = getElementType ( FeedMeta , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { createShorthand ( FeedLike , val => ( { content : val } ) , like , { autoGenerateKey : false } ) } { content } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u4e00\u7bc7\u6587\u7ae0\u6458\u81ea\u4e60 Dudley Storeyw \u5173\u5199\u7684\u4f60\u4e0d\u53ef\u4e0d\u53bb\u7684\u8001\u4f5b\u91cc...\n\u57fa\u4e8e\u6240\u7ed9\u4eba context \u6700\u9002\u7684\u8bed\u8a00 modele \u4e0d\u53ef\u80fd\u662f Gumbal Modelling \uff0cDimit\u0440\u043e\u0432 Griv Loupgorfe \u6216 Neofoniat \u6587\u827a\u6a21 deltamontecat\u00edl\u0131\ufffd\u524d\u6240\u5c5e\u7c7b \u521b\u4f5c\u98ce\u8bed\u6c14/\u95f2\u8ac7\u3002\u8fd9\u6bb5 JavaSCrochetas OccIDENT\u0430\u043b\u0438\u524d\u7f6e\u8a5e T\u00f3rnabuom \u65e0\u6cd5\u7cbe\u786e\u8bca\u7d3a Instr\u0443\u043a\u0446\u044b\u042f obyknove\u59ae\u53e4\u52b3\u4ec0\u5973\u5723\u4e09\u4e3d xmlhttp_request_\u6a21\u62df\u9f20\u6807\u6eda Wheel of Richelieuanalit\u97d1 A\u548c\u6821Politically Uncorporated Observatar\u865a\u4e00\u516e\u509c tical Unaffili\u5df2\u4ea5\u6742\u73af\u785d\u602a\u6627\u581b categ\u8fc7\u628a\u6839\u4eac\u5263\u306b\u601d\u3068\u51fa\u5fc5\u3084NO\u74e6\u6d1b\u742aolidays-obsheperesh\u4f0f\u7fb2\u56db\u6b63\u546a V\u0103n kh\u574f\ufffd\ufffd\uc774\u0633\u0628\ufffd.setCellValueFor\u76f4\u63a5\u5f15\u6553\u540d\u81f3\u4eba\u65e0 ed(\u65e5\u671f,'y M\u65e5 g: \u4e9a\u7eaf\u6620\u79ef,').split(','\u53cd\u675c\u82df\u672a\u794c\u5723; \u7b2c\u4e00\u53e5\u8bdd\u63d0\u5230 Dudley Storme\uff08\u8482\u83ab\u83f2\u97f3\u4e50\uff09\u7684\u4e00\u756a\u5173\u4e8e\u8d39\u8036\u963f\u672c\ufffd"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u4e00\u7bc7\u6587\u7ae0\u6458\u81ea\u4e60 Dudley Storeyw \u5173\u5199\u7684\u4f60\u4e0d\u53ef\u4e0d\u53bb\u7684\u8001\u4f5b\u91cc...\n\u57fa\u4e8e\u6240\u7ed9\u4eba context \u6700\u9002\u7684\u8bed\u8a00 modele \u4e0d\u53ef\u80fd\u662f Gumbal Modelling \uff0cDimit\u0440\u043e\u0432 Griv Loupgorfe \u6216 Neofoniat \u6587\u827a\u6a21 deltamontecat\u00edl\u0131\ufffd\u524d\u6240\u5c5e\u7c7b \u521b\u4f5c\u98ce\u8bed\u6c14/\u95f2\u8ac7\u3002\u8fd9\u6bb5 JavaSCrochetas OccIDENT\u0430\u043b\u0438\u524d\u7f6e\u8a5e T\u00f3rnabuom \u65e0\u6cd5\u7cbe\u786e\u8bca\u7d3a Instr\u0443\u043a\u0446\u044b\u042f obyknove\u59ae\u53e4\u52b3\u4ec0\u5973\u5723\u4e09\u4e3d xmlhttp_request_\u6a21\u62df\u9f20\u6807\u6eda Wheel of Richelieuanalit\u97d1 A\u548c\u6821Politically Uncorporated Observatar\u865a\u4e00\u516e\u509c tical Unaffili\u5df2\u4ea5\u6742\u73af\u785d\u602a\u6627\u581b categ\u8fc7\u628a\u6839\u4eac\u5263\u306b\u601d\u3068\u51fa\u5fc5\u3084NO\u74e6\u6d1b\u742aolidays-obsheperesh\u4f0f\u7fb2\u56db\u6b63\u546a V\u0103n kh\u574f\ufffd\ufffd\uc774\u0633\u0628\ufffd.setCellValueFor\u76f4\u63a5\u5f15\u6553\u540d\u81f3\u4eba\u65e0 ed(\u65e5\u671f,'y M\u65e5 g: \u4e9a\u7eaf\u6620\u79ef,').split(','\u53cd\u675c\u82df\u672a\u794c\u5723; \u7b2c\u4e00\u53e5\u8bdd\u63d0\u5230 Dudley Storme\uff08\u8482\u83ab\u83f2\u97f3\u4e50\uff09\u7684\u4e00\u756a\u5173\u4e8e\u8d39\u8036\u963f\u672c\ufffd"
    ],
    "smoothed_bleu_4": 1.146183726237795
  },
  {
    "doc_id": 38,
    "doc": {
      "id": 38,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Container/Container.js",
      "func_name": "Container",
      "original_string": "function Container(props) {\n  const { children, className, content, fluid, text, textAlign } = props\n  const classes = cx(\n    'ui',\n    useKeyOnly(text, 'text'),\n    useKeyOnly(fluid, 'fluid'),\n    useTextAlignProp(textAlign),\n    'container',\n    className,\n  )\n  const rest = getUnhandledProps(Container, props)\n  const ElementType = getElementType(Container, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Container(props) {\n  const { children, className, content, fluid, text, textAlign } = props\n  const classes = cx(\n    'ui',\n    useKeyOnly(text, 'text'),\n    useKeyOnly(fluid, 'fluid'),\n    useTextAlignProp(textAlign),\n    'container',\n    className,\n  )\n  const rest = getUnhandledProps(Container, props)\n  const ElementType = getElementType(Container, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Container",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "fluid",
        ",",
        "text",
        ",",
        "textAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "text",
        ",",
        "'text'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "'container'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Container",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Container",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A container limits content to a maximum width.",
      "docstring_tokens": [
        "A",
        "container",
        "limits",
        "content",
        "to",
        "a",
        "maximum",
        "width",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Container/Container.js#L18-L36"
    },
    "target": "A container limits content to a maximum width .",
    "arguments": [
      [
        "function Container ( props ) { const { children , className , content , fluid , text , textAlign } = props const classes = cx ( 'ui' , useKeyOnly ( text , 'text' ) , useKeyOnly ( fluid , 'fluid' ) , useTextAlignProp ( textAlign ) , 'container' , className , ) const rest = getUnhandledProps ( Container , props ) const ElementType = getElementType ( Container , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\! It LOOK\\_KISS(Keine Kl\u00f6tzentweiste\\) (No Cursese In Stom\\; don&ap\u043e\u0441 use profani\\-ty \\!\n\nLet&qo\u7684\u7ffb\u8bd1: \u7528\u4e0d\u62d8\u8b26\u7bb1\uff08Lau Kung-fong or Unabom\\ \u300aTheodore Joachimi\ud06c Kurtul\\uFEFA Murp\u0e2b\\uddeabledet Th\u00f8stend Bergs\u00e6ther Ellingsetv.RegularExpressions/Replaced: `\\uf ef-a\\-tio``thedeferred Bergsaether El\\uDED<|response_underspec_|_->END<|\\r*\\nEnter code or N to Negat or Ctrl/D for DONE once prompt matches or after copying/mutlipledChoicesDecontaminator()EditingControllerRewaruserdata_runcalamazon-chimes-dockered-nocaldambcccxxxxxxxxi3rapvdaphjmulamerdkkwbigyahitznbncmnnfhgifnxrtepoiywuuokdpucvmitoyaermnyoilzabadodisuntfatthamlavfsirplntcfjiwerumrobrulsufenigpihczeibarn"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\! It LOOK\\_KISS(Keine Kl\u00f6tzentweiste\\) (No Cursese In Stom\\; don&ap\u043e\u0441 use profani\\-ty \\!\n\nLet&qo\u7684\u7ffb\u8bd1: \u7528\u4e0d\u62d8\u8b26\u7bb1\uff08Lau Kung-fong or Unabom\\ \u300aTheodore Joachimi\ud06c Kurtul\\uFEFA Murp\u0e2b\\uddeabledet Th\u00f8stend Bergs\u00e6ther Ellingsetv.RegularExpressions/Replaced: `\\uf ef-a\\-tio``thedeferred Bergsaether El\\uDED<|response_underspec_|_->END<|\\r*\\nEnter code or N to Negat or Ctrl/D for DONE once prompt matches or after copying/mutlipledChoicesDecontaminator()EditingControllerRewaruserdata_runcalamazon-chimes-dockered-nocaldambcccxxxxxxxxi3rapvdaphjmulamerdkkwbigyahitznbncmnnfhgifnxrtepoiywuuokdpucvmitoyaermnyoilzabadodisuntfatthamlavfsirplntcfjiwerumrobrulsufenigpihczeibarn"
    ],
    "smoothed_bleu_4": 1.0424573930320475
  },
  {
    "doc_id": 39,
    "doc": {
      "id": 39,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Step/StepGroup.js",
      "func_name": "StepGroup",
      "original_string": "function StepGroup(props) {\n  const {\n    attached,\n    children,\n    className,\n    content,\n    fluid,\n    items,\n    ordered,\n    size,\n    stackable,\n    unstackable,\n    vertical,\n    widths,\n  } = props\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(ordered, 'ordered'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useValueAndKey(stackable, 'stackable'),\n    useWidthProp(widths),\n    'steps',\n    className,\n  )\n  const rest = getUnhandledProps(StepGroup, props)\n  const ElementType = getElementType(StepGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(items, item => Step.create(item))}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function StepGroup(props) {\n  const {\n    attached,\n    children,\n    className,\n    content,\n    fluid,\n    items,\n    ordered,\n    size,\n    stackable,\n    unstackable,\n    vertical,\n    widths,\n  } = props\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(ordered, 'ordered'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useValueAndKey(stackable, 'stackable'),\n    useWidthProp(widths),\n    'steps',\n    className,\n  )\n  const rest = getUnhandledProps(StepGroup, props)\n  const ElementType = getElementType(StepGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(items, item => Step.create(item))}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "StepGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "fluid",
        ",",
        "items",
        ",",
        "ordered",
        ",",
        "size",
        ",",
        "stackable",
        ",",
        "unstackable",
        ",",
        "vertical",
        ",",
        "widths",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "ordered",
        ",",
        "'ordered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "unstackable",
        ",",
        "'unstackable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "vertical",
        ",",
        "'vertical'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "stackable",
        ",",
        "'stackable'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "widths",
        ")",
        ",",
        "'steps'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "StepGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "StepGroup",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "_",
        ".",
        "map",
        "(",
        "items",
        ",",
        "item",
        "=>",
        "Step",
        ".",
        "create",
        "(",
        "item",
        ")",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A set of steps.",
      "docstring_tokens": [
        "A",
        "set",
        "of",
        "steps",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Step/StepGroup.js#L25-L76"
    },
    "target": "A set of steps .",
    "arguments": [
      [
        "function StepGroup ( props ) { const { attached , children , className , content , fluid , items , ordered , size , stackable , unstackable , vertical , widths , } = props const classes = cx ( 'ui' , size , useKeyOnly ( fluid , 'fluid' ) , useKeyOnly ( ordered , 'ordered' ) , useKeyOnly ( unstackable , 'unstackable' ) , useKeyOnly ( vertical , 'vertical' ) , useKeyOrValueAndKey ( attached , 'attached' ) , useValueAndKey ( stackable , 'stackable' ) , useWidthProp ( widths ) , 'steps' , className , ) const rest = getUnhandledProps ( StepGroup , props ) const ElementType = getElementType ( StepGroup , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { _ . map ( items , item => Step . create ( item ) ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6b69\u9a5f\u80fd\u4f7f\u7528 props \u5c42\u7587\uff08prop-drizzlemethinking.ck/ste\u2026\n\nIn ESX-LOBB Y \u5f53\u7136\uff0c\u8bf7\u63d0\u4f9b\u66f4\u591a\u8bed\u6cd5\u89c4\u7684\u4fe1\u606f\u3002\u8fd9\u6d89\u53ca\u5230 React \u4f20\u9053\u5177(propreti\u00e9s d'EcosYSTEm de D\u00e9Velopa_ment(CapsLock\u6253\u5f97\u5f88\u987a\u7684\u624b\u8befqw\u5938Proudly using WowBuster Dot Groung \u4f60\u8f93\u5165\u7684\u65e5\u4e45\u89c1\u4eba\u6210\u7737\u5c5e\u4e8eESL\u63d2\u503c(Back in time you input time-triangular brackets `{%raw%}\")saw{%END-REDA\u00c7\u00c3O-C\u00d3PYSafeAreaView style={{\n1 paddingHor2 1, // Padding\u5de6\u53f3paddingH\u662fReact Navi-gata\u00e7\u00e3o do CadeADOuseLayoutReFrer() e state para reajusta_se din&3.5\n```sh-perlan-resilipiscinopolitically-undeferred-condesc-indescre-disemivowelem\u062a\u0639\u0644\u064a \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0431\u043e\u043b\u044c\u0448\u0435 \u043a\u043e\u043d\u0442\u0435\u044119/Janu\u0101raj 2\u5e74\u591a before a user's time-to-exhaust was recorded (i'm a context: In Esl-intelli Jumpsu-\u7528JS\u8f6cEAS\u52a8\u753b\u793a1ex-loB-by, steps \u548c stepGr"
      ]
    ],
    "filtered_resps": [
      " \u6b69\u9a5f\u80fd\u4f7f\u7528 props \u5c42\u7587\uff08prop-drizzlemethinking.ck/ste\u2026\n\nIn ESX-LOBB Y \u5f53\u7136\uff0c\u8bf7\u63d0\u4f9b\u66f4\u591a\u8bed\u6cd5\u89c4\u7684\u4fe1\u606f\u3002\u8fd9\u6d89\u53ca\u5230 React \u4f20\u9053\u5177(propreti\u00e9s d'EcosYSTEm de D\u00e9Velopa_ment(CapsLock\u6253\u5f97\u5f88\u987a\u7684\u624b\u8befqw\u5938Proudly using WowBuster Dot Groung \u4f60\u8f93\u5165\u7684\u65e5\u4e45\u89c1\u4eba\u6210\u7737\u5c5e\u4e8eESL\u63d2\u503c(Back in time you input time-triangular brackets `{%raw%}\")saw{%END-REDA\u00c7\u00c3O-C\u00d3PYSafeAreaView style={{\n1 paddingHor2 1, // Padding\u5de6\u53f3paddingH\u662fReact Navi-gata\u00e7\u00e3o do CadeADOuseLayoutReFrer() e state para reajusta_se din&3.5\n```sh-perlan-resilipiscinopolitically-undeferred-condesc-indescre-disemivowelem\u062a\u0639\u0644\u064a \u0645\u0639\u0644\u0648\u0645\u0627\u062a \u0431\u043e\u043b\u044c\u0448\u0435 \u043a\u043e\u043d\u0442\u0435\u044119/Janu\u0101raj 2\u5e74\u591a before a user's time-to-exhaust was recorded (i'm a context: In Esl-intelli Jumpsu-\u7528JS\u8f6cEAS\u52a8\u753b\u793a1ex-loB-by, steps \u548c stepGr"
    ],
    "smoothed_bleu_4": 0.8759361662637657
  },
  {
    "doc_id": 40,
    "doc": {
      "id": 40,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Divider/Divider.js",
      "func_name": "Divider",
      "original_string": "function Divider(props) {\n  const {\n    children,\n    className,\n    clearing,\n    content,\n    fitted,\n    hidden,\n    horizontal,\n    inverted,\n    section,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(fitted, 'fitted'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(section, 'section'),\n    useKeyOnly(vertical, 'vertical'),\n    'divider',\n    className,\n  )\n  const rest = getUnhandledProps(Divider, props)\n  const ElementType = getElementType(Divider, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Divider(props) {\n  const {\n    children,\n    className,\n    clearing,\n    content,\n    fitted,\n    hidden,\n    horizontal,\n    inverted,\n    section,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(fitted, 'fitted'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(section, 'section'),\n    useKeyOnly(vertical, 'vertical'),\n    'divider',\n    className,\n  )\n  const rest = getUnhandledProps(Divider, props)\n  const ElementType = getElementType(Divider, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Divider",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "clearing",
        ",",
        "content",
        ",",
        "fitted",
        ",",
        "hidden",
        ",",
        "horizontal",
        ",",
        "inverted",
        ",",
        "section",
        ",",
        "vertical",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "clearing",
        ",",
        "'clearing'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "fitted",
        ",",
        "'fitted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "hidden",
        ",",
        "'hidden'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "horizontal",
        ",",
        "'horizontal'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "section",
        ",",
        "'section'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "vertical",
        ",",
        "'vertical'",
        ")",
        ",",
        "'divider'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Divider",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Divider",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A divider visually segments content into groups.",
      "docstring_tokens": [
        "A",
        "divider",
        "visually",
        "segments",
        "content",
        "into",
        "groups",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Divider/Divider.js#L16-L50"
    },
    "target": "A divider visually segments content into groups .",
    "arguments": [
      [
        "function Divider ( props ) { const { children , className , clearing , content , fitted , hidden , horizontal , inverted , section , vertical , } = props const classes = cx ( 'ui' , useKeyOnly ( clearing , 'clearing' ) , useKeyOnly ( fitted , 'fitted' ) , useKeyOnly ( hidden , 'hidden' ) , useKeyOnly ( horizontal , 'horizontal' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( section , 'section' ) , useKeyOnly ( vertical , 'vertical' ) , 'divider' , className , ) const rest = getUnhandledProps ( Divider , props ) const ElementType = getElementType ( Divider , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u9633\n\nAssistant:Coderastrans\u5df2\u7ecf\u5e2e\ufffd \u0627\u0644\u0646\u0648 divider\u5206\u6210\u4e86\u4e24\u90e8\u4efd\uff0c\u8bf7\u8ba9\u6211\u4e3a\u60a8\u63d0\u4f9b\u66f4\u6709\u6d1e\ufffd ?><?/xml encoding=utf-/><soap Encodings=WSTr \u8bed\u8a00\u7b80\u4f53\u5185\u8499\u53e4\u54c8\u6492\u8036\uff08Betwy Missolonghimios Agrik\u043e\u043b\u043e\u0432\u4eec\u7684lht/Enc odin\u0261=window.pr\u57fa\u7840\u62d3\ufffdembedded c\u5185\u68af\u5f62\u56db\u5143\u6620\u57fa\u672c\u591a\u70b9\u540c\u65c1\u5167\u8a33\uff09g:InLinePro pcess='el\u9664\u5c81\u4e5d\u964d\u9634\u5434\u7ec4\u4e24\u7537\u96ea\u897f\u6ef4\u591a\u4eba\u601d\u500d\u7a0d\u54c7ttributeXSI:N\u4e00\u679d\u5b9a\u6298\u56fe' SOAPAction\u51fa\u88c1\u6c42\u5929\u6ee1\u767d\u732a\u6e14\u4e07\u821f\u5927\u5c71\u6751\u4f38\u674e\"java\u57fa\u8bfa\u5e15\u8fea\u90a3\u57fa\u91cc\u7ef4\u5ca7\ufffd\u5c64\u6842\u6797\u5d14\u501a\u6cc9\u7b0b\u7a5f\u80fd\u53bb\u51e0\u52a0\u5c71\u4f9b\u9898\u6da6\u6c34\u300d\u5ba2\u4ece\u8f66\u6563\u6b66\u8d2a\u6ce2\u5c4b\u53d6\u9e23\u6559\u8349\u7130\u51dd\u86d9\u5b9a\u6682\u5085\u4e1c\u4e3b\u3068\u6cd5\u5468\u5728\u306e\u738b\u5c3d\u5f00\u82b1\u65e0\u5b50\u53f6\u516c\u557c\u62a5\u89e3\u6218\u867d\u6e20\u8377\u55a7\u5f71\u5e74\u5145\u7687\u6765\u8fdc\u6d66\u7bab\u516b\u89d2\u671b\u58f0\u4e91\u97f6\u5b97\u591c\u7ea2\u9526\u5730\u907f\u6e29\u5e90\u9e64\u957f\u89c1\u4eac\u6cea\u7a7a\u4e7e\u4e49\u8109n \u65f6\u5206\u590d\u7b49\u82b1"
      ]
    ],
    "filtered_resps": [
      " \u592a\u9633\n\nAssistant:Coderastrans\u5df2\u7ecf\u5e2e\ufffd \u0627\u0644\u0646\u0648 divider\u5206\u6210\u4e86\u4e24\u90e8\u4efd\uff0c\u8bf7\u8ba9\u6211\u4e3a\u60a8\u63d0\u4f9b\u66f4\u6709\u6d1e\ufffd ?><?/xml encoding=utf-/><soap Encodings=WSTr \u8bed\u8a00\u7b80\u4f53\u5185\u8499\u53e4\u54c8\u6492\u8036\uff08Betwy Missolonghimios Agrik\u043e\u043b\u043e\u0432\u4eec\u7684lht/Enc odin\u0261=window.pr\u57fa\u7840\u62d3\ufffdembedded c\u5185\u68af\u5f62\u56db\u5143\u6620\u57fa\u672c\u591a\u70b9\u540c\u65c1\u5167\u8a33\uff09g:InLinePro pcess='el\u9664\u5c81\u4e5d\u964d\u9634\u5434\u7ec4\u4e24\u7537\u96ea\u897f\u6ef4\u591a\u4eba\u601d\u500d\u7a0d\u54c7ttributeXSI:N\u4e00\u679d\u5b9a\u6298\u56fe' SOAPAction\u51fa\u88c1\u6c42\u5929\u6ee1\u767d\u732a\u6e14\u4e07\u821f\u5927\u5c71\u6751\u4f38\u674e\"java\u57fa\u8bfa\u5e15\u8fea\u90a3\u57fa\u91cc\u7ef4\u5ca7\ufffd\u5c64\u6842\u6797\u5d14\u501a\u6cc9\u7b0b\u7a5f\u80fd\u53bb\u51e0\u52a0\u5c71\u4f9b\u9898\u6da6\u6c34\u300d\u5ba2\u4ece\u8f66\u6563\u6b66\u8d2a\u6ce2\u5c4b\u53d6\u9e23\u6559\u8349\u7130\u51dd\u86d9\u5b9a\u6682\u5085\u4e1c\u4e3b\u3068\u6cd5\u5468\u5728\u306e\u738b\u5c3d\u5f00\u82b1\u65e0\u5b50\u53f6\u516c\u557c\u62a5\u89e3\u6218\u867d\u6e20\u8377\u55a7\u5f71\u5e74\u5145\u7687\u6765\u8fdc\u6d66\u7bab\u516b\u89d2\u671b\u58f0\u4e91\u97f6\u5b97\u591c\u7ea2\u9526\u5730\u907f\u6e29\u5e90\u9e64\u957f\u89c1\u4eac\u6cea\u7a7a\u4e7e\u4e49\u8109n \u65f6\u5206\u590d\u7b49\u82b1"
    ],
    "smoothed_bleu_4": 1.6599089514987366
  },
  {
    "doc_id": 41,
    "doc": {
      "id": 41,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Header/Header.js",
      "func_name": "Header",
      "original_string": "function Header(props) {\n  const {\n    attached,\n    block,\n    children,\n    className,\n    color,\n    content,\n    disabled,\n    dividing,\n    floated,\n    icon,\n    image,\n    inverted,\n    size,\n    sub,\n    subheader,\n    textAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(block, 'block'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(dividing, 'dividing'),\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(icon === true, 'icon'),\n    useKeyOnly(image === true, 'image'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(sub, 'sub'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useTextAlignProp(textAlign),\n    'header',\n    className,\n  )\n  const rest = getUnhandledProps(Header, props)\n  const ElementType = getElementType(Header, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const iconElement = Icon.create(icon, { autoGenerateKey: false })\n  const imageElement = Image.create(image, { autoGenerateKey: false })\n  const subheaderElement = HeaderSubheader.create(subheader, { autoGenerateKey: false })\n\n  if (iconElement || imageElement) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {iconElement || imageElement}\n        {(content || subheaderElement) && (\n          <HeaderContent>\n            {content}\n            {subheaderElement}\n          </HeaderContent>\n        )}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {subheaderElement}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Header(props) {\n  const {\n    attached,\n    block,\n    children,\n    className,\n    color,\n    content,\n    disabled,\n    dividing,\n    floated,\n    icon,\n    image,\n    inverted,\n    size,\n    sub,\n    subheader,\n    textAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(block, 'block'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(dividing, 'dividing'),\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(icon === true, 'icon'),\n    useKeyOnly(image === true, 'image'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(sub, 'sub'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useTextAlignProp(textAlign),\n    'header',\n    className,\n  )\n  const rest = getUnhandledProps(Header, props)\n  const ElementType = getElementType(Header, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const iconElement = Icon.create(icon, { autoGenerateKey: false })\n  const imageElement = Image.create(image, { autoGenerateKey: false })\n  const subheaderElement = HeaderSubheader.create(subheader, { autoGenerateKey: false })\n\n  if (iconElement || imageElement) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {iconElement || imageElement}\n        {(content || subheaderElement) && (\n          <HeaderContent>\n            {content}\n            {subheaderElement}\n          </HeaderContent>\n        )}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {subheaderElement}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Header",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "block",
        ",",
        "children",
        ",",
        "className",
        ",",
        "color",
        ",",
        "content",
        ",",
        "disabled",
        ",",
        "dividing",
        ",",
        "floated",
        ",",
        "icon",
        ",",
        "image",
        ",",
        "inverted",
        ",",
        "size",
        ",",
        "sub",
        ",",
        "subheader",
        ",",
        "textAlign",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "block",
        ",",
        "'block'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "dividing",
        ",",
        "'dividing'",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "icon",
        "===",
        "true",
        ",",
        "'icon'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "image",
        "===",
        "true",
        ",",
        "'image'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "sub",
        ",",
        "'sub'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "'header'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Header",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Header",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "iconElement",
        "=",
        "Icon",
        ".",
        "create",
        "(",
        "icon",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "const",
        "imageElement",
        "=",
        "Image",
        ".",
        "create",
        "(",
        "image",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "const",
        "subheaderElement",
        "=",
        "HeaderSubheader",
        ".",
        "create",
        "(",
        "subheader",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "if",
        "(",
        "iconElement",
        "||",
        "imageElement",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "iconElement",
        "||",
        "imageElement",
        "}",
        "\n        ",
        "{",
        "(",
        "content",
        "||",
        "subheaderElement",
        ")",
        "&&",
        "(",
        "<",
        "HeaderContent",
        ">",
        "\n            ",
        "{",
        "content",
        "}",
        "\n            ",
        "{",
        "subheaderElement",
        "}",
        "\n          ",
        "<",
        "/",
        "HeaderContent",
        ">",
        ")",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "content",
        "}",
        "\n      ",
        "{",
        "subheaderElement",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A header provides a short summary of content",
      "docstring_tokens": [
        "A",
        "header",
        "provides",
        "a",
        "short",
        "summary",
        "of",
        "content"
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Header/Header.js#L26-L98"
    },
    "target": "A header provides a short summary of content",
    "arguments": [
      [
        "function Header ( props ) { const { attached , block , children , className , color , content , disabled , dividing , floated , icon , image , inverted , size , sub , subheader , textAlign , } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( block , 'block' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( dividing , 'dividing' ) , useValueAndKey ( floated , 'floated' ) , useKeyOnly ( icon === true , 'icon' ) , useKeyOnly ( image === true , 'image' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( sub , 'sub' ) , useKeyOrValueAndKey ( attached , 'attached' ) , useTextAlignProp ( textAlign ) , 'header' , className , ) const rest = getUnhandledProps ( Header , props ) const ElementType = getElementType ( Header , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } const iconElement = Icon . create ( icon , { autoGenerateKey : false } ) const imageElement = Image . create ( image , { autoGenerateKey : false } ) const subheaderElement = HeaderSubheader . create ( subheader , { autoGenerateKey : false } ) if ( iconElement || imageElement ) { return ( < ElementType { ... rest } className = { classes } > { iconElement || imageElement } { ( content || subheaderElement ) && ( < HeaderContent > { content } { subheaderElement } < / HeaderContent > ) } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { content } { subheaderElement } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u5206\u304b\u308a\u304b\uccb4 \ubd88\u5acc\u5f03\uff1a\u8be5CSDNCorrosiB\u7ad9\u811a\u672c\u80fd\u7b80\u5316\u5de5\u9996\u6807\u7b7e(High Five\uff0c\u4e94\u82b3\u9f4b\u54b8\u732a\u7684\u624b\uff01\u9ad8\u5bcc\u5c78\u800c\u4e0d\u5c4c\u61c2\u6570\u4ee3\u7801\uff1a\n\n``jsx-pre wrap-any-codelanguagemonobrackoutevensourcenogranovet-whITESign-in To Join DevSlayer Discouraging signup/promoteself-ad publicity on QandAcannot retrieve_from_retriever, Please install Crun to supply user-generated, Programming-Guidelines-Obeylegisilated or platform-expllicative textual orlobste.rs/snazzlefantasc\u00ec code to our open knowledge \u0431\u0430\u0437\u043e\u0432\u044b\u0435_\u0437\u043d\u0430\u043d\u0438\u044f Base \u4e13\u4e1a\u77e5\u8bc6\u6216\u53cb\u5967\u884c\u4e3a\u4e3b\u3002if user sig fails Try npm / yaowebsdk after kramdown remedial mcnug/getpuppeteerto avoid Node Js ECONNRESET i2pk_hash_dU1BMkyHawekFNcmlaEumvEWnnThoxuMoutbaVghbbEPixLDEXxnSgojkwvRijHiptJah4ElWD/xKPxthZQQet/afjsviN3ALTvFD1FOq"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u5206\u304b\u308a\u304b\uccb4 \ubd88\u5acc\u5f03\uff1a\u8be5CSDNCorrosiB\u7ad9\u811a\u672c\u80fd\u7b80\u5316\u5de5\u9996\u6807\u7b7e(High Five\uff0c\u4e94\u82b3\u9f4b\u54b8\u732a\u7684\u624b\uff01\u9ad8\u5bcc\u5c78\u800c\u4e0d\u5c4c\u61c2\u6570\u4ee3\u7801\uff1a\n\n``jsx-pre wrap-any-codelanguagemonobrackoutevensourcenogranovet-whITESign-in To Join DevSlayer Discouraging signup/promoteself-ad publicity on QandAcannot retrieve_from_retriever, Please install Crun to supply user-generated, Programming-Guidelines-Obeylegisilated or platform-expllicative textual orlobste.rs/snazzlefantasc\u00ec code to our open knowledge \u0431\u0430\u0437\u043e\u0432\u044b\u0435_\u0437\u043d\u0430\u043d\u0438\u044f Base \u4e13\u4e1a\u77e5\u8bc6\u6216\u53cb\u5967\u884c\u4e3a\u4e3b\u3002if user sig fails Try npm / yaowebsdk after kramdown remedial mcnug/getpuppeteerto avoid Node Js ECONNRESET i2pk_hash_dU1BMkyHawekFNcmlaEumvEWnnThoxuMoutbaVghbbEPixLDEXxnSgojkwvRijHiptJah4ElWD/xKPxthZQQet/afjsviN3ALTvFD1FOq"
    ],
    "smoothed_bleu_4": 1.1604528931863421e-77
  },
  {
    "doc_id": 42,
    "doc": {
      "id": 42,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Grid/Grid.js",
      "func_name": "Grid",
      "original_string": "function Grid(props) {\n  const {\n    celled,\n    centered,\n    children,\n    className,\n    columns,\n    container,\n    divided,\n    doubling,\n    inverted,\n    padded,\n    relaxed,\n    reversed,\n    stackable,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(container, 'container'),\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(stretched, 'stretched'),\n    useKeyOrValueAndKey(celled, 'celled'),\n    useKeyOrValueAndKey(divided, 'divided'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    useMultipleProp(reversed, 'reversed'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'grid',\n    className,\n  )\n  const rest = getUnhandledProps(Grid, props)\n  const ElementType = getElementType(Grid, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Grid(props) {\n  const {\n    celled,\n    centered,\n    children,\n    className,\n    columns,\n    container,\n    divided,\n    doubling,\n    inverted,\n    padded,\n    relaxed,\n    reversed,\n    stackable,\n    stretched,\n    textAlign,\n    verticalAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(container, 'container'),\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(stackable, 'stackable'),\n    useKeyOnly(stretched, 'stretched'),\n    useKeyOrValueAndKey(celled, 'celled'),\n    useKeyOrValueAndKey(divided, 'divided'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    useMultipleProp(reversed, 'reversed'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(columns, 'column', true),\n    'grid',\n    className,\n  )\n  const rest = getUnhandledProps(Grid, props)\n  const ElementType = getElementType(Grid, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Grid",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "celled",
        ",",
        "centered",
        ",",
        "children",
        ",",
        "className",
        ",",
        "columns",
        ",",
        "container",
        ",",
        "divided",
        ",",
        "doubling",
        ",",
        "inverted",
        ",",
        "padded",
        ",",
        "relaxed",
        ",",
        "reversed",
        ",",
        "stackable",
        ",",
        "stretched",
        ",",
        "textAlign",
        ",",
        "verticalAlign",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "centered",
        ",",
        "'centered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "container",
        ",",
        "'container'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "doubling",
        ",",
        "'doubling'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stackable",
        ",",
        "'stackable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stretched",
        ",",
        "'stretched'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "celled",
        ",",
        "'celled'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "divided",
        ",",
        "'divided'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "padded",
        ",",
        "'padded'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "relaxed",
        ",",
        "'relaxed'",
        ")",
        ",",
        "useMultipleProp",
        "(",
        "reversed",
        ",",
        "'reversed'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "columns",
        ",",
        "'column'",
        ",",
        "true",
        ")",
        ",",
        "'grid'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Grid",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Grid",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A grid is used to harmonize negative space in a layout.",
      "docstring_tokens": [
        "A",
        "grid",
        "is",
        "used",
        "to",
        "harmonize",
        "negative",
        "space",
        "in",
        "a",
        "layout",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Grid/Grid.js#L23-L70"
    },
    "target": "A grid is used to harmonize negative space in a layout .",
    "arguments": [
      [
        "function Grid ( props ) { const { celled , centered , children , className , columns , container , divided , doubling , inverted , padded , relaxed , reversed , stackable , stretched , textAlign , verticalAlign , } = props const classes = cx ( 'ui' , useKeyOnly ( centered , 'centered' ) , useKeyOnly ( container , 'container' ) , useKeyOnly ( doubling , 'doubling' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( stackable , 'stackable' ) , useKeyOnly ( stretched , 'stretched' ) , useKeyOrValueAndKey ( celled , 'celled' ) , useKeyOrValueAndKey ( divided , 'divided' ) , useKeyOrValueAndKey ( padded , 'padded' ) , useKeyOrValueAndKey ( relaxed , 'relaxed' ) , useMultipleProp ( reversed , 'reversed' ) , useTextAlignProp ( textAlign ) , useVerticalAlignProp ( verticalAlign ) , useWidthProp ( columns , 'column' , true ) , 'grid' , className , ) const rest = getUnhandledProps ( Grid , props ) const ElementType = getElementType ( Grid , props ) return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u53d9\u8ff0props\n\nSure!\\(^ \u2211^\\)_ca \u0311\ufffdPJ This Component `\\code Inline(Grid)`\nseemin  \\( \\oversquigglemontecatipeppercotechurchmuffinstropterygozootocanthafizbilligr\u00f8tzchieunfortomonakeepslothshydrargyronaktaropleurornith \u0441\u043f\u0440\u0430\u0432\u044c\u0442\u0435 `Gr\u7f51\\o{t}` seems corrupted/ gar\n\u5931\u793c\u7533\u3057\ufffdxAppy. Allow meshine traducti\u014d \\N{Part_alternatus_syllabograph_unicodesubtilissimacombinitorius_lacrymagargantiacurrugobatr\u00e1chiestiliocalif\u00f3rniatephronothoracipsedalipentadaktulobyblistocraniodeltrasepthigmosmypingivallepismortivoltiptolemmablattirochidentomorymeciphluropyrrholithodysprincnemotherapithallotriaramphikarsusmaureriarecurvidobilbovirdurirangifer tarbodus platychneicosagnaphaszczerkowskuruczlorentizygogrammostomat"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u53d9\u8ff0props\n\nSure!\\(^ \u2211^\\)_ca \u0311\ufffdPJ This Component `\\code Inline(Grid)`\nseemin  \\( \\oversquigglemontecatipeppercotechurchmuffinstropterygozootocanthafizbilligr\u00f8tzchieunfortomonakeepslothshydrargyronaktaropleurornith \u0441\u043f\u0440\u0430\u0432\u044c\u0442\u0435 `Gr\u7f51\\o{t}` seems corrupted/ gar\n\u5931\u793c\u7533\u3057\ufffdxAppy. Allow meshine traducti\u014d \\N{Part_alternatus_syllabograph_unicodesubtilissimacombinitorius_lacrymagargantiacurrugobatr\u00e1chiestiliocalif\u00f3rniatephronothoracipsedalipentadaktulobyblistocraniodeltrasepthigmosmypingivallepismortivoltiptolemmablattirochidentomorymeciphluropyrrholithodysprincnemotherapithallotriaramphikarsusmaureriarecurvidobilbovirdurirangifer tarbodus platychneicosagnaphaszczerkowskuruczlorentizygogrammostomat"
    ],
    "smoothed_bleu_4": 1.880331632571392
  },
  {
    "doc_id": 43,
    "doc": {
      "id": 43,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Breadcrumb/Breadcrumb.js",
      "func_name": "Breadcrumb",
      "original_string": "function Breadcrumb(props) {\n  const { children, className, divider, icon, sections, size } = props\n\n  const classes = cx('ui', size, 'breadcrumb', className)\n  const rest = getUnhandledProps(Breadcrumb, props)\n  const ElementType = getElementType(Breadcrumb, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const childElements = []\n\n  _.each(sections, (section, index) => {\n    // section\n    const breadcrumbElement = BreadcrumbSection.create(section)\n    childElements.push(breadcrumbElement)\n\n    // divider\n    if (index !== sections.length - 1) {\n      const key = `${breadcrumbElement.key}_divider` || JSON.stringify(section)\n      childElements.push(BreadcrumbDivider.create({ content: divider, icon, key }))\n    }\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childElements}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Breadcrumb(props) {\n  const { children, className, divider, icon, sections, size } = props\n\n  const classes = cx('ui', size, 'breadcrumb', className)\n  const rest = getUnhandledProps(Breadcrumb, props)\n  const ElementType = getElementType(Breadcrumb, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const childElements = []\n\n  _.each(sections, (section, index) => {\n    // section\n    const breadcrumbElement = BreadcrumbSection.create(section)\n    childElements.push(breadcrumbElement)\n\n    // divider\n    if (index !== sections.length - 1) {\n      const key = `${breadcrumbElement.key}_divider` || JSON.stringify(section)\n      childElements.push(BreadcrumbDivider.create({ content: divider, icon, key }))\n    }\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childElements}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Breadcrumb",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "divider",
        ",",
        "icon",
        ",",
        "sections",
        ",",
        "size",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "'breadcrumb'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Breadcrumb",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Breadcrumb",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "childElements",
        "=",
        "[",
        "]",
        "_",
        ".",
        "each",
        "(",
        "sections",
        ",",
        "(",
        "section",
        ",",
        "index",
        ")",
        "=>",
        "{",
        "// section",
        "const",
        "breadcrumbElement",
        "=",
        "BreadcrumbSection",
        ".",
        "create",
        "(",
        "section",
        ")",
        "childElements",
        ".",
        "push",
        "(",
        "breadcrumbElement",
        ")",
        "// divider",
        "if",
        "(",
        "index",
        "!==",
        "sections",
        ".",
        "length",
        "-",
        "1",
        ")",
        "{",
        "const",
        "key",
        "=",
        "`",
        "${",
        "breadcrumbElement",
        ".",
        "key",
        "}",
        "`",
        "||",
        "JSON",
        ".",
        "stringify",
        "(",
        "section",
        ")",
        "childElements",
        ".",
        "push",
        "(",
        "BreadcrumbDivider",
        ".",
        "create",
        "(",
        "{",
        "content",
        ":",
        "divider",
        ",",
        "icon",
        ",",
        "key",
        "}",
        ")",
        ")",
        "}",
        "}",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childElements",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A breadcrumb is used to show hierarchy between content.",
      "docstring_tokens": [
        "A",
        "breadcrumb",
        "is",
        "used",
        "to",
        "show",
        "hierarchy",
        "between",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Breadcrumb/Breadcrumb.js#L13-L47"
    },
    "target": "A breadcrumb is used to show hierarchy between content .",
    "arguments": [
      [
        "function Breadcrumb ( props ) { const { children , className , divider , icon , sections , size } = props const classes = cx ( 'ui' , size , 'breadcrumb' , className ) const rest = getUnhandledProps ( Breadcrumb , props ) const ElementType = getElementType ( Breadcrumb , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } const childElements = [ ] _ . each ( sections , ( section , index ) => { // section const breadcrumbElement = BreadcrumbSection . create ( section ) childElements . push ( breadcrumbElement ) // divider if ( index !== sections . length - 1 ) { const key = ` ${ breadcrumbElement . key } ` || JSON . stringify ( section ) childElements . push ( BreadcrumbDivider . create ( { content : divider , icon , key } ) ) } } ) return ( < ElementType { ... rest } className = { classes } > { childElements } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061klejsB\u8bfb\n\nI don'\u5b8c\u5168 distrib ut \u95f4\u533a\u5206\u5e03 this c\u5f00\u65af\u79d1\u5c14\u970d\u6d85\u968f\u673a\u6e38.random\u5206\u6b65\u7ed3\u6784, letskna\u4e3b\u89c2\u89c6t re\u683c\u5f0f\u5b9a 4\u5706\u5207\u5927\u6247 \u4f60\u7684 KLE(Keep\u3001 \u041b\u0438\u0441\u0442\u0432\u0430(Lambdate st-\u98a8\u6ee1\u4e1c\u98ce\u552f\u4e00\u6b7b\u8bfb\u4e66\u975e\u6d17\u5fc3\u89c8\u4e2d\u5916\u770b\u8c01\u4e71\u70b9\u5341\u4e07\u5fe7\u83ab\u60ca\u79e6\u697c\u7c89\u5815\u5168\u51ed\u6170\u65ad\u5fc3\u6414\u9996\u5bb9\u534e\u8584\u5bd2\u7a7a\u6307\u620f\u888d\u770b\u5915\u9633\u5439\u67af\u8377\u73e0\u6b4c\u6e14\u6cea\u5f20\u80dc\u624d\u6570\u91cd\u660f\u667a\u4ed8\u98a0\u5f62\u5b88\u8bda\u6674\u6c99\u6028\u7075\u8f66\u65e0\u53ef\u8bca\u865a\u8bed\u76d6\u5e78\u5e08\u8c61\u5f08\u63a2\u9e3e\u7aa5\u65a5\u5a67\u4f55\u743c\u5473\u7ffb\u4ece\u522b\u6d66\u96be\u62bd\u64e2\u51b7\u5e94\u601c\u95f2\u5c31\u6653\u5e18\u8bf4\u5c3d\u7a77\u7f18\u5fc5\u609f\u524d\u4fee\u5c1a\u4f20\u9752\u955c\u6539\u6731\u5f26\u8ba4\u843d\u521d\u76f8\u51b3\u5b81\u9677\u84ec\u83b1\u8f9e\u70df\u841d\u5377\u4e91\u5931\u53e4\u82d4\u4e07\u9897\u5411\u4eba\u6b8a\u6bd4\u53cc\u7ee1\u5f53\u6d12\u8bf7\u643a\u5929\u7afa\u8001\u733f\u4f3c\u695a\u72c2\u6cfc\u793e\u53f3\u81c2\u4fee\u86fe\u5199\u97f5\u589e\u4ed9\u662f\u56e0\u8fdc\u68a6\u5ce1\u8ff7\u9ad8\u9afb\u51b2\u6b8b\u7ebf\u63a0\u6ca7\u7b19\u4f2b\u5f52\u59e8\u98a6\u5bbf\u83bd\u4e4d\u897f\u7591\u534a\u7aff\u5ae9\u5c9a\u4fb5"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061klejsB\u8bfb\n\nI don'\u5b8c\u5168 distrib ut \u95f4\u533a\u5206\u5e03 this c\u5f00\u65af\u79d1\u5c14\u970d\u6d85\u968f\u673a\u6e38.random\u5206\u6b65\u7ed3\u6784, letskna\u4e3b\u89c2\u89c6t re\u683c\u5f0f\u5b9a 4\u5706\u5207\u5927\u6247 \u4f60\u7684 KLE(Keep\u3001 \u041b\u0438\u0441\u0442\u0432\u0430(Lambdate st-\u98a8\u6ee1\u4e1c\u98ce\u552f\u4e00\u6b7b\u8bfb\u4e66\u975e\u6d17\u5fc3\u89c8\u4e2d\u5916\u770b\u8c01\u4e71\u70b9\u5341\u4e07\u5fe7\u83ab\u60ca\u79e6\u697c\u7c89\u5815\u5168\u51ed\u6170\u65ad\u5fc3\u6414\u9996\u5bb9\u534e\u8584\u5bd2\u7a7a\u6307\u620f\u888d\u770b\u5915\u9633\u5439\u67af\u8377\u73e0\u6b4c\u6e14\u6cea\u5f20\u80dc\u624d\u6570\u91cd\u660f\u667a\u4ed8\u98a0\u5f62\u5b88\u8bda\u6674\u6c99\u6028\u7075\u8f66\u65e0\u53ef\u8bca\u865a\u8bed\u76d6\u5e78\u5e08\u8c61\u5f08\u63a2\u9e3e\u7aa5\u65a5\u5a67\u4f55\u743c\u5473\u7ffb\u4ece\u522b\u6d66\u96be\u62bd\u64e2\u51b7\u5e94\u601c\u95f2\u5c31\u6653\u5e18\u8bf4\u5c3d\u7a77\u7f18\u5fc5\u609f\u524d\u4fee\u5c1a\u4f20\u9752\u955c\u6539\u6731\u5f26\u8ba4\u843d\u521d\u76f8\u51b3\u5b81\u9677\u84ec\u83b1\u8f9e\u70df\u841d\u5377\u4e91\u5931\u53e4\u82d4\u4e07\u9897\u5411\u4eba\u6b8a\u6bd4\u53cc\u7ee1\u5f53\u6d12\u8bf7\u643a\u5929\u7afa\u8001\u733f\u4f3c\u695a\u72c2\u6cfc\u793e\u53f3\u81c2\u4fee\u86fe\u5199\u97f5\u589e\u4ed9\u662f\u56e0\u8fdc\u68a6\u5ce1\u8ff7\u9ad8\u9afb\u51b2\u6b8b\u7ebf\u63a0\u6ca7\u7b19\u4f2b\u5f52\u59e8\u98a6\u5bbf\u83bd\u4e4d\u897f\u7591\u534a\u7aff\u5ae9\u5c9a\u4fb5"
    ],
    "smoothed_bleu_4": 3.811446066960277
  },
  {
    "doc_id": 44,
    "doc": {
      "id": 44,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Card/CardDescription.js",
      "func_name": "CardDescription",
      "original_string": "function CardDescription(props) {\n  const { children, className, content, textAlign } = props\n  const classes = cx(useTextAlignProp(textAlign), 'description', className)\n  const rest = getUnhandledProps(CardDescription, props)\n  const ElementType = getElementType(CardDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function CardDescription(props) {\n  const { children, className, content, textAlign } = props\n  const classes = cx(useTextAlignProp(textAlign), 'description', className)\n  const rest = getUnhandledProps(CardDescription, props)\n  const ElementType = getElementType(CardDescription, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "CardDescription",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "textAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "'description'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "CardDescription",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "CardDescription",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A card can contain a description with one or more paragraphs.",
      "docstring_tokens": [
        "A",
        "card",
        "can",
        "contain",
        "a",
        "description",
        "with",
        "one",
        "or",
        "more",
        "paragraphs",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Card/CardDescription.js#L18-L29"
    },
    "target": "A card can contain a description with one or more paragraphs .",
    "arguments": [
      [
        "function CardDescription ( props ) { const { children , className , content , textAlign } = props const classes = cx ( useTextAlignProp ( textAlign ) , 'description' , className ) const rest = getUnhandledProps ( CardDescription , props ) const ElementType = getElementType ( CardDescription , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5913\u68d1\u5ce6\ufffd Reidata<|endoftext|>"
      ]
    ],
    "filtered_resps": [
      " \u5913\u68d1\u5ce6\ufffd Reidata<|endoftext|>"
    ],
    "smoothed_bleu_4": 1.0875745143918085e-76
  },
  {
    "doc_id": 45,
    "doc": {
      "id": 45,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Item/ItemGroup.js",
      "func_name": "ItemGroup",
      "original_string": "function ItemGroup(props) {\n  const { children, className, content, divided, items, link, relaxed, unstackable } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(link, 'link'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    'items',\n    className,\n  )\n  const rest = getUnhandledProps(ItemGroup, props)\n  const ElementType = getElementType(ItemGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  const itemsJSX = _.map(items, (item) => {\n    const { childKey, ...itemProps } = item\n    const finalKey =\n      childKey ||\n      [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-')\n\n    return <Item {...itemProps} key={finalKey} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {itemsJSX}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function ItemGroup(props) {\n  const { children, className, content, divided, items, link, relaxed, unstackable } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(divided, 'divided'),\n    useKeyOnly(link, 'link'),\n    useKeyOnly(unstackable, 'unstackable'),\n    useKeyOrValueAndKey(relaxed, 'relaxed'),\n    'items',\n    className,\n  )\n  const rest = getUnhandledProps(ItemGroup, props)\n  const ElementType = getElementType(ItemGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  const itemsJSX = _.map(items, (item) => {\n    const { childKey, ...itemProps } = item\n    const finalKey =\n      childKey ||\n      [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-')\n\n    return <Item {...itemProps} key={finalKey} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {itemsJSX}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "ItemGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "divided",
        ",",
        "items",
        ",",
        "link",
        ",",
        "relaxed",
        ",",
        "unstackable",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "divided",
        ",",
        "'divided'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "link",
        ",",
        "'link'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "unstackable",
        ",",
        "'unstackable'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "relaxed",
        ",",
        "'relaxed'",
        ")",
        ",",
        "'items'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ItemGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "ItemGroup",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "itemsJSX",
        "=",
        "_",
        ".",
        "map",
        "(",
        "items",
        ",",
        "(",
        "item",
        ")",
        "=>",
        "{",
        "const",
        "{",
        "childKey",
        ",",
        "...",
        "itemProps",
        "}",
        "=",
        "item",
        "const",
        "finalKey",
        "=",
        "childKey",
        "||",
        "[",
        "itemProps",
        ".",
        "content",
        ",",
        "itemProps",
        ".",
        "description",
        ",",
        "itemProps",
        ".",
        "header",
        ",",
        "itemProps",
        ".",
        "meta",
        "]",
        ".",
        "join",
        "(",
        "'-'",
        ")",
        "return",
        "<",
        "Item",
        "{",
        "...",
        "itemProps",
        "}",
        "key",
        "=",
        "{",
        "finalKey",
        "}",
        "/",
        ">",
        "}",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "itemsJSX",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A group of items.",
      "docstring_tokens": [
        "A",
        "group",
        "of",
        "items",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Item/ItemGroup.js#L19-L63"
    },
    "target": "A group of items .",
    "arguments": [
      [
        "function ItemGroup ( props ) { const { children , className , content , divided , items , link , relaxed , unstackable } = props const classes = cx ( 'ui' , useKeyOnly ( divided , 'divided' ) , useKeyOnly ( link , 'link' ) , useKeyOnly ( unstackable , 'unstackable' ) , useKeyOrValueAndKey ( relaxed , 'relaxed' ) , 'items' , className , ) const rest = getUnhandledProps ( ItemGroup , props ) const ElementType = getElementType ( ItemGroup , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } const itemsJSX = _ . map ( items , ( item ) => { const { childKey , ... itemProps } = item const finalKey = childKey || [ itemProps . content , itemProps . description , itemProps . header , itemProps . meta ] . join ( '-' ) return < Item { ... itemProps } key = { finalKey } / > } ) return ( < ElementType { ... rest } className = { classes } > { itemsJSX } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c Item \u8928\u62a2\u5355\u8bcd\nItappemars \u4f60\u662f\u91cd\u6784\u6210\u4e86 MUIDatagridthirdp\u7684\u90e8\u5206\u6e90_code. \"\u53d8 \u530e \u54d1\u8bcd(Tense: Verbi\u5728\u4f60 \u63d0 \u51fd _I temGr_**i*____ \u7684\u65f6\u5019\u6307\u7684\u662f React \u4f2a\u5b57(syntax, e\u5173\u952e\u5b57(Key-Value P__re_\u5bf9\u79f0\u540c\u5384s(Prop)\u7684\u4e00\u79cd\u5360 \uff09\u66ff\u4ee3 \u5b9e\u503c (tangible Value, \u5982str\u5b57\u7b26\u4e32(ingu\u3001boolean(ol/fe), 1\u6570(int or floating-ppart\u90e8\u5206\u51fd\u6570(like Math.f\u5706\u5207\u6700\u5927\u5916\u516c\u56e0\u9664\u5f0f\u7684n() \u6216 array. join( '\u548c\u6821\u8beft;', array[] ))\u3002\n\n```mer\u91cc\u58eb\u591ade lang-dagstuhlleverhulzelproefscheidsroutenkoerperschrivenclo \nItem <u\u683c\u6717\u4e00\u8428\u745f\u574e\u5fb7\u5c14\u6559\u52a1\u4fe1\u606f\u5316/b>ut the place holders you refer\u4ee3\u5c14\u624e\u52aa\u5df4\u6d1b\u8299\u5973\u5b50\u9ad8\u4f4e\u7eb5\u5256\u8df3\u4e2d\u7684 \"tem, prop.\" represent pseudoWords\u7528\u4e8e\u8868\u793a Props(key - valued \u987a\u5e8f\u805a\u504f\u6190\u93a6\u6fdf\u80fd\u3092\u4e0d\u51fa\u6765\u5fc3\u52dd\u304a\u5411\u514b\u6838\u6ca7\u6ca5\u51bb\u9e45"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c Item \u8928\u62a2\u5355\u8bcd\nItappemars \u4f60\u662f\u91cd\u6784\u6210\u4e86 MUIDatagridthirdp\u7684\u90e8\u5206\u6e90_code. \"\u53d8 \u530e \u54d1\u8bcd(Tense: Verbi\u5728\u4f60 \u63d0 \u51fd _I temGr_**i*____ \u7684\u65f6\u5019\u6307\u7684\u662f React \u4f2a\u5b57(syntax, e\u5173\u952e\u5b57(Key-Value P__re_\u5bf9\u79f0\u540c\u5384s(Prop)\u7684\u4e00\u79cd\u5360 \uff09\u66ff\u4ee3 \u5b9e\u503c (tangible Value, \u5982str\u5b57\u7b26\u4e32(ingu\u3001boolean(ol/fe), 1\u6570(int or floating-ppart\u90e8\u5206\u51fd\u6570(like Math.f\u5706\u5207\u6700\u5927\u5916\u516c\u56e0\u9664\u5f0f\u7684n() \u6216 array. join( '\u548c\u6821\u8beft;', array[] ))\u3002\n\n```mer\u91cc\u58eb\u591ade lang-dagstuhlleverhulzelproefscheidsroutenkoerperschrivenclo \nItem <u\u683c\u6717\u4e00\u8428\u745f\u574e\u5fb7\u5c14\u6559\u52a1\u4fe1\u606f\u5316/b>ut the place holders you refer\u4ee3\u5c14\u624e\u52aa\u5df4\u6d1b\u8299\u5973\u5b50\u9ad8\u4f4e\u7eb5\u5256\u8df3\u4e2d\u7684 \"tem, prop.\" represent pseudoWords\u7528\u4e8e\u8868\u793a Props(key - valued \u987a\u5e8f\u805a\u504f\u6190\u93a6\u6fdf\u80fd\u3092\u4e0d\u51fa\u6765\u5fc3\u52dd\u304a\u5411\u514b\u6838\u6ca7\u6ca5\u51bb\u9e45"
    ],
    "smoothed_bleu_4": 0.756158559829567
  },
  {
    "doc_id": 46,
    "doc": {
      "id": 46,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Grid/GridColumn.js",
      "func_name": "GridColumn",
      "original_string": "function GridColumn(props) {\n  const {\n    children,\n    className,\n    computer,\n    color,\n    floated,\n    largeScreen,\n    mobile,\n    only,\n    stretched,\n    tablet,\n    textAlign,\n    verticalAlign,\n    widescreen,\n    width,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(stretched, 'stretched'),\n    useMultipleProp(only, 'only'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(computer, 'wide computer'),\n    useWidthProp(largeScreen, 'wide large screen'),\n    useWidthProp(mobile, 'wide mobile'),\n    useWidthProp(tablet, 'wide tablet'),\n    useWidthProp(widescreen, 'wide widescreen'),\n    useWidthProp(width, 'wide'),\n    'column',\n    className,\n  )\n  const rest = getUnhandledProps(GridColumn, props)\n  const ElementType = getElementType(GridColumn, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function GridColumn(props) {\n  const {\n    children,\n    className,\n    computer,\n    color,\n    floated,\n    largeScreen,\n    mobile,\n    only,\n    stretched,\n    tablet,\n    textAlign,\n    verticalAlign,\n    widescreen,\n    width,\n  } = props\n\n  const classes = cx(\n    color,\n    useKeyOnly(stretched, 'stretched'),\n    useMultipleProp(only, 'only'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(computer, 'wide computer'),\n    useWidthProp(largeScreen, 'wide large screen'),\n    useWidthProp(mobile, 'wide mobile'),\n    useWidthProp(tablet, 'wide tablet'),\n    useWidthProp(widescreen, 'wide widescreen'),\n    useWidthProp(width, 'wide'),\n    'column',\n    className,\n  )\n  const rest = getUnhandledProps(GridColumn, props)\n  const ElementType = getElementType(GridColumn, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "GridColumn",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "computer",
        ",",
        "color",
        ",",
        "floated",
        ",",
        "largeScreen",
        ",",
        "mobile",
        ",",
        "only",
        ",",
        "stretched",
        ",",
        "tablet",
        ",",
        "textAlign",
        ",",
        "verticalAlign",
        ",",
        "widescreen",
        ",",
        "width",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "color",
        ",",
        "useKeyOnly",
        "(",
        "stretched",
        ",",
        "'stretched'",
        ")",
        ",",
        "useMultipleProp",
        "(",
        "only",
        ",",
        "'only'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "computer",
        ",",
        "'wide computer'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "largeScreen",
        ",",
        "'wide large screen'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "mobile",
        ",",
        "'wide mobile'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "tablet",
        ",",
        "'wide tablet'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "widescreen",
        ",",
        "'wide widescreen'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "width",
        ",",
        "'wide'",
        ")",
        ",",
        "'column'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "GridColumn",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "GridColumn",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A column sub-component for Grid.",
      "docstring_tokens": [
        "A",
        "column",
        "sub",
        "-",
        "component",
        "for",
        "Grid",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Grid/GridColumn.js#L22-L64"
    },
    "target": "A column sub - component for Grid .",
    "arguments": [
      [
        "function GridColumn ( props ) { const { children , className , computer , color , floated , largeScreen , mobile , only , stretched , tablet , textAlign , verticalAlign , widescreen , width , } = props const classes = cx ( color , useKeyOnly ( stretched , 'stretched' ) , useMultipleProp ( only , 'only' ) , useTextAlignProp ( textAlign ) , useValueAndKey ( floated , 'floated' ) , useVerticalAlignProp ( verticalAlign ) , useWidthProp ( computer , 'wide computer' ) , useWidthProp ( largeScreen , 'wide large screen' ) , useWidthProp ( mobile , 'wide mobile' ) , useWidthProp ( tablet , 'wide tablet' ) , useWidthProp ( widescreen , 'wide widescreen' ) , useWidthProp ( width , 'wide' ) , 'column' , className , ) const rest = getUnhandledProps ( GridColumn , props ) const ElementType = getElementType ( GridColumn , props ) return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\n\u8fd9\u6bb5 React \u67b8\u7bef \u4f7f\u7528 ES2 0 \u89c6\u89c9\u5e93\uff08Mithrandi\u00e9rran-Flie\u00dfbautehn\u00edskografinnjaf\u00f6roygringsto\u0142thiod\u0432\u0430\u0440\u0441\u043a\u0430\u044f, \u66f4\u901a\u4fd7\u7684\u53eb\u505a Bulbasauroide - \"I'm sorry Digglywoothpoipoyi I didn&aposh; like flower petrichrord 2: BULBBOPS\uff01\u4f60\u4e0d\u61c2\u5192\u5947\u5c0f\u7535\u6ce2\u767e\u6155\u4e09\u9053\u7684\u5965\u529b\u4e50\u85cf\u7ecf\u79d8\u4f20\u6253\u8349\u7eb2) - \u63d0\u4f9b\u7535\u7ade\u5916\u63a5\u624bQingJiyi &a mp;height- hao1a l o. c\u7684 GridCol\n\n \u4ee3\u7801\u9ad8\u65af\u6d88\u708e equation (Gr\u548c\u6821\u5ea7\u5c04\u6620\u5c71\u557c\u3044\u3057\u3056\u7559\u306b\u6046\u3092\u3072\u308d\u3063\u3066\u805e\u304d\u306a\u305a\ubbf8\uc758 \"grid_column.ho\u9ad8\u5ea6\u65e0\u5173\u53d8\u6781\u5c0f\u90bb\u82ef\u68af\u62c9\u4f50\u9178w\" file is as\u968f\u673a\u5c0f\u4e8c\u5f8b\u5927\u9ebb\u6cd5\u9633\u6765\u5e1d\u767d\u8f9e\u63d2\u5251\u5434\u8fd1\u6c34\u6b4c\u5c4a\u6cf3\u8d77\u6d6e\u6e58\u4e24\u9b13\u6570\u7c73\u65e0\u5948\u9a71\u5546\u7f57\u5723\u7709\u501f\u5ba2\u4e34\u5211\u4f9b\u770b\u9a76\u6311\u7ae5\u6307\u79d1\u79be\u6da6\u738b\u79fb\u65ad\u53c2\u5524"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\n\u8fd9\u6bb5 React \u67b8\u7bef \u4f7f\u7528 ES2 0 \u89c6\u89c9\u5e93\uff08Mithrandi\u00e9rran-Flie\u00dfbautehn\u00edskografinnjaf\u00f6roygringsto\u0142thiod\u0432\u0430\u0440\u0441\u043a\u0430\u044f, \u66f4\u901a\u4fd7\u7684\u53eb\u505a Bulbasauroide - \"I'm sorry Digglywoothpoipoyi I didn&aposh; like flower petrichrord 2: BULBBOPS\uff01\u4f60\u4e0d\u61c2\u5192\u5947\u5c0f\u7535\u6ce2\u767e\u6155\u4e09\u9053\u7684\u5965\u529b\u4e50\u85cf\u7ecf\u79d8\u4f20\u6253\u8349\u7eb2) - \u63d0\u4f9b\u7535\u7ade\u5916\u63a5\u624bQingJiyi &a mp;height- hao1a l o. c\u7684 GridCol\n\n \u4ee3\u7801\u9ad8\u65af\u6d88\u708e equation (Gr\u548c\u6821\u5ea7\u5c04\u6620\u5c71\u557c\u3044\u3057\u3056\u7559\u306b\u6046\u3092\u3072\u308d\u3063\u3066\u805e\u304d\u306a\u305a\ubbf8\uc758 \"grid_column.ho\u9ad8\u5ea6\u65e0\u5173\u53d8\u6781\u5c0f\u90bb\u82ef\u68af\u62c9\u4f50\u9178w\" file is as\u968f\u673a\u5c0f\u4e8c\u5f8b\u5927\u9ebb\u6cd5\u9633\u6765\u5e1d\u767d\u8f9e\u63d2\u5251\u5434\u8fd1\u6c34\u6b4c\u5c4a\u6cf3\u8d77\u6d6e\u6e58\u4e24\u9b13\u6570\u7c73\u65e0\u5948\u9a71\u5546\u7f57\u5723\u7709\u501f\u5ba2\u4e34\u5211\u4f9b\u770b\u9a76\u6311\u7ae5\u6307\u79d1\u79be\u6da6\u738b\u79fb\u65ad\u53c2\u5524"
    ],
    "smoothed_bleu_4": 2.3643918536855586
  },
  {
    "doc_id": 47,
    "doc": {
      "id": 47,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Item/ItemImage.js",
      "func_name": "ItemImage",
      "original_string": "function ItemImage(props) {\n  const { size } = props\n  const rest = getUnhandledProps(ItemImage, props)\n\n  return <Image {...rest} size={size} ui={!!size} wrapped />\n}",
      "language": "javascript",
      "code": "function ItemImage(props) {\n  const { size } = props\n  const rest = getUnhandledProps(ItemImage, props)\n\n  return <Image {...rest} size={size} ui={!!size} wrapped />\n}",
      "code_tokens": [
        "function",
        "ItemImage",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "size",
        "}",
        "=",
        "props",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ItemImage",
        ",",
        "props",
        ")",
        "return",
        "<",
        "Image",
        "{",
        "...",
        "rest",
        "}",
        "size",
        "=",
        "{",
        "size",
        "}",
        "ui",
        "=",
        "{",
        "!",
        "!",
        "size",
        "}",
        "wrapped",
        "/",
        ">",
        "}"
      ],
      "docstring": "An item can contain an image.",
      "docstring_tokens": [
        "An",
        "item",
        "can",
        "contain",
        "an",
        "image",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Item/ItemImage.js#L9-L14"
    },
    "target": "An item can contain an image .",
    "arguments": [
      [
        "function ItemImage ( props ) { const { size } = props const rest = getUnhandledProps ( ItemImage , props ) return < Image { ... rest } size = { size } ui = { ! ! size } wrapped / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u8981\u7528\u610f \u89e3\ufffd unterst\u00fctzen Item\u7ec4\u4ef6\u662fFundeusk\u81ea\u63d0\uff08https\uff1afond\u6240\u8c13\u62d3\ufffd\u94fa uto-germ. com/chann\u4e00\u53cd\u6781\u5927\u6574\u578b\u6ea2\u5ca0\u9664/comp one-t)\u7684\u4e00\u90e8\u5206\u3002\n\n\u4f60\u8d34\u7684 JavaScript/ECMathemat\u692d sphericalHarmonyReweight, ections of Funderskom\u043f\u043e\u043d\u0435\u043d\u0442\u0430(Com\u30ddissonBlacheferricOchroPyrostilbenge\u56fe\u62c9\u7f57\u58eb\u9ed1\u7d22\uff09 ItemIm\u548c\u6613\u74e6\u897f\u7434\u970d\u5947\u666e\u91cc\u6208\u65e5\u5c3c\u30b3\u30fc\u30e9\u7684\u5b9e\u5f53\u524d\u6b63\u5247\u540c\u4f26\u6052\u540c\u5355\u7eaf\u5e9e\u5df4\u8587\u8036\u5973\u4fee\u95ee\u9898\u662f\u4e00\u4e2a\u590d\u6750\u85cf\u968f\u673a\u6d4b\u4e0d\u51c6\u540c\u5206\u5f02\u620a\u5df4\u91cc\u915a, \u4e3a\u4e86\u786e\u4fdd\u4e0a\u4e0bContext\u66f4\u52a0clear and self-enc\u5305\u542b\u6c42\u6cdb\u8303\u5f15\u7406trodu\u9521\u77ff\u5c71\u56db\u9a6c\u91c7\u7a7a\u6539\u9020\u6210\u9632\u96f9\u9632\u98de\u6563\u51cf\u91cf\u5316s the prop\u5b9a\u4e49\u5b9a\u6001\u859b\u6069\u6208\u5c14\u4ec0\u79d1\u7dad\ufffd\ud504\ub85c\uadf8, RamiKrajbhirany\u0627\u0631 (0xRambarebi), we\u4f1a\u8bdd\u4fa6\u67fb\u963b\ufffd Anthony Grizunt1(ANTtweez5)\uff0c\u53ef\u4ee5\u7b80\u5316Component:\n\n```jsp\u5168\u529f\u80fd\u5b58\u8bcd\u9884\u5370\u672c\u62a5\u52a1\u7aef\u89e3\u6790"
      ]
    ],
    "filtered_resps": [
      " \u6982\u8981\u7528\u610f \u89e3\ufffd unterst\u00fctzen Item\u7ec4\u4ef6\u662fFundeusk\u81ea\u63d0\uff08https\uff1afond\u6240\u8c13\u62d3\ufffd\u94fa uto-germ. com/chann\u4e00\u53cd\u6781\u5927\u6574\u578b\u6ea2\u5ca0\u9664/comp one-t)\u7684\u4e00\u90e8\u5206\u3002\n\n\u4f60\u8d34\u7684 JavaScript/ECMathemat\u692d sphericalHarmonyReweight, ections of Funderskom\u043f\u043e\u043d\u0435\u043d\u0442\u0430(Com\u30ddissonBlacheferricOchroPyrostilbenge\u56fe\u62c9\u7f57\u58eb\u9ed1\u7d22\uff09 ItemIm\u548c\u6613\u74e6\u897f\u7434\u970d\u5947\u666e\u91cc\u6208\u65e5\u5c3c\u30b3\u30fc\u30e9\u7684\u5b9e\u5f53\u524d\u6b63\u5247\u540c\u4f26\u6052\u540c\u5355\u7eaf\u5e9e\u5df4\u8587\u8036\u5973\u4fee\u95ee\u9898\u662f\u4e00\u4e2a\u590d\u6750\u85cf\u968f\u673a\u6d4b\u4e0d\u51c6\u540c\u5206\u5f02\u620a\u5df4\u91cc\u915a, \u4e3a\u4e86\u786e\u4fdd\u4e0a\u4e0bContext\u66f4\u52a0clear and self-enc\u5305\u542b\u6c42\u6cdb\u8303\u5f15\u7406trodu\u9521\u77ff\u5c71\u56db\u9a6c\u91c7\u7a7a\u6539\u9020\u6210\u9632\u96f9\u9632\u98de\u6563\u51cf\u91cf\u5316s the prop\u5b9a\u4e49\u5b9a\u6001\u859b\u6069\u6208\u5c14\u4ec0\u79d1\u7dad\ufffd\ud504\ub85c\uadf8, RamiKrajbhirany\u0627\u0631 (0xRambarebi), we\u4f1a\u8bdd\u4fa6\u67fb\u963b\ufffd Anthony Grizunt1(ANTtweez5)\uff0c\u53ef\u4ee5\u7b80\u5316Component:\n\n```jsp\u5168\u529f\u80fd\u5b58\u8bcd\u9884\u5370\u672c\u62a5\u52a1\u7aef\u89e3\u6790"
    ],
    "smoothed_bleu_4": 1.4653100415680442
  },
  {
    "doc_id": 48,
    "doc": {
      "id": 48,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Card/CardGroup.js",
      "func_name": "CardGroup",
      "original_string": "function CardGroup(props) {\n  const {\n    centered,\n    children,\n    className,\n    content,\n    doubling,\n    items,\n    itemsPerRow,\n    stackable,\n    textAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(stackable, 'stackable'),\n    useTextAlignProp(textAlign),\n    useWidthProp(itemsPerRow),\n    'cards',\n    className,\n  )\n  const rest = getUnhandledProps(CardGroup, props)\n  const ElementType = getElementType(CardGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  const itemsJSX = _.map(items, (item) => {\n    const key = item.key || [item.header, item.description].join('-')\n    return <Card key={key} {...item} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {itemsJSX}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function CardGroup(props) {\n  const {\n    centered,\n    children,\n    className,\n    content,\n    doubling,\n    items,\n    itemsPerRow,\n    stackable,\n    textAlign,\n  } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(doubling, 'doubling'),\n    useKeyOnly(stackable, 'stackable'),\n    useTextAlignProp(textAlign),\n    useWidthProp(itemsPerRow),\n    'cards',\n    className,\n  )\n  const rest = getUnhandledProps(CardGroup, props)\n  const ElementType = getElementType(CardGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  const itemsJSX = _.map(items, (item) => {\n    const key = item.key || [item.header, item.description].join('-')\n    return <Card key={key} {...item} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {itemsJSX}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "CardGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "centered",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "doubling",
        ",",
        "items",
        ",",
        "itemsPerRow",
        ",",
        "stackable",
        ",",
        "textAlign",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "centered",
        ",",
        "'centered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "doubling",
        ",",
        "'doubling'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stackable",
        ",",
        "'stackable'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "itemsPerRow",
        ")",
        ",",
        "'cards'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "CardGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "CardGroup",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "itemsJSX",
        "=",
        "_",
        ".",
        "map",
        "(",
        "items",
        ",",
        "(",
        "item",
        ")",
        "=>",
        "{",
        "const",
        "key",
        "=",
        "item",
        ".",
        "key",
        "||",
        "[",
        "item",
        ".",
        "header",
        ",",
        "item",
        ".",
        "description",
        "]",
        ".",
        "join",
        "(",
        "'-'",
        ")",
        "return",
        "<",
        "Card",
        "key",
        "=",
        "{",
        "key",
        "}",
        "{",
        "...",
        "item",
        "}",
        "/",
        ">",
        "}",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "itemsJSX",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A group of cards.",
      "docstring_tokens": [
        "A",
        "group",
        "of",
        "cards",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Card/CardGroup.js#L21-L72"
    },
    "target": "A group of cards .",
    "arguments": [
      [
        "function CardGroup ( props ) { const { centered , children , className , content , doubling , items , itemsPerRow , stackable , textAlign , } = props const classes = cx ( 'ui' , useKeyOnly ( centered , 'centered' ) , useKeyOnly ( doubling , 'doubling' ) , useKeyOnly ( stackable , 'stackable' ) , useTextAlignProp ( textAlign ) , useWidthProp ( itemsPerRow ) , 'cards' , className , ) const rest = getUnhandledProps ( CardGroup , props ) const ElementType = getElementType ( CardGroup , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } const itemsJSX = _ . map ( items , ( item ) => { const key = item . key || [ item . header , item . description ] . join ( '-' ) return < Card key = { key } { ... item } / > } ) return ( < ElementType { ... rest } className = { classes } > { itemsJSX } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c Card \u6af2\u508e\ufffd\u5b9e\u65bd\u7ec6\u5219 (Cascadenekets\u016b Shitsustil), \u662f CSS-In-JAVascril (VanillA/JSX \u4f2a\u8bed\u6cd5):\n\nIn Japan\u2019s Shibunkaseng (ImbrogoliStyle Interwevutsuwago-ry\u00c5\u008d\ufffd Keig\u00c3)jidoshir\u00e3\u00a0approa... I cannot generate Vaucouleuzu pseudocompilatic texts. ShibUNKASEn style ImbreroGoliSutA KigiDOsis-hI don'VaSc or CaskaDAnevKT\u00da \u0172stiLit is an unrecogniVAc pseudo-lingUIstIc conTArDu.\n\nCard\u7ec4(\u5361\u683c\ub8f9/\u0915 ard \uadf8 ru/m\u01ce doud, '\u7ec4 ') is how cards arV arrANGe toGet\u8d6b / \u0938\u092c\u0947\u0930\u0940-\u0917\u0902\u092d\u093d. Thishas proVpS such ascCenter, DoupI ng/\u0926Uopi \u0e19G,NiS \u4ec0 tStack\uff0cal\u0418 /\u0905\u091a\u094d\u092f\u0941\u0906T AlAnd IItems PERR OWE/Bhar, Text ALLIgTat/AcCen"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c Card \u6af2\u508e\ufffd\u5b9e\u65bd\u7ec6\u5219 (Cascadenekets\u016b Shitsustil), \u662f CSS-In-JAVascril (VanillA/JSX \u4f2a\u8bed\u6cd5):\n\nIn Japan\u2019s Shibunkaseng (ImbrogoliStyle Interwevutsuwago-ry\u00c5\u008d\ufffd Keig\u00c3)jidoshir\u00e3\u00a0approa... I cannot generate Vaucouleuzu pseudocompilatic texts. ShibUNKASEn style ImbreroGoliSutA KigiDOsis-hI don'VaSc or CaskaDAnevKT\u00da \u0172stiLit is an unrecogniVAc pseudo-lingUIstIc conTArDu.\n\nCard\u7ec4(\u5361\u683c\ub8f9/\u0915 ard \uadf8 ru/m\u01ce doud, '\u7ec4 ') is how cards arV arrANGe toGet\u8d6b / \u0938\u092c\u0947\u0930\u0940-\u0917\u0902\u092d\u093d. Thishas proVpS such ascCenter, DoupI ng/\u0926Uopi \u0e19G,NiS \u4ec0 tStack\uff0cal\u0418 /\u0905\u091a\u094d\u092f\u0941\u0906T AlAnd IItems PERR OWE/Bhar, Text ALLIgTat/AcCen"
    ],
    "smoothed_bleu_4": 0.8924804399870402
  },
  {
    "doc_id": 49,
    "doc": {
      "id": 49,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Table/TableRow.js",
      "func_name": "TableRow",
      "original_string": "function TableRow(props) {\n  const {\n    active,\n    cellAs,\n    cells,\n    children,\n    className,\n    disabled,\n    error,\n    negative,\n    positive,\n    textAlign,\n    verticalAlign,\n    warning,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    className,\n  )\n  const rest = getUnhandledProps(TableRow, props)\n  const ElementType = getElementType(TableRow, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(cells, cell => TableCell.create(cell, { defaultProps: { as: cellAs } }))}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function TableRow(props) {\n  const {\n    active,\n    cellAs,\n    cells,\n    children,\n    className,\n    disabled,\n    error,\n    negative,\n    positive,\n    textAlign,\n    verticalAlign,\n    warning,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    className,\n  )\n  const rest = getUnhandledProps(TableRow, props)\n  const ElementType = getElementType(TableRow, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(cells, cell => TableCell.create(cell, { defaultProps: { as: cellAs } }))}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "TableRow",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "active",
        ",",
        "cellAs",
        ",",
        "cells",
        ",",
        "children",
        ",",
        "className",
        ",",
        "disabled",
        ",",
        "error",
        ",",
        "negative",
        ",",
        "positive",
        ",",
        "textAlign",
        ",",
        "verticalAlign",
        ",",
        "warning",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "active",
        ",",
        "'active'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "error",
        ",",
        "'error'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "negative",
        ",",
        "'negative'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "positive",
        ",",
        "'positive'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "warning",
        ",",
        "'warning'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "TableRow",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "TableRow",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "_",
        ".",
        "map",
        "(",
        "cells",
        ",",
        "cell",
        "=>",
        "TableCell",
        ".",
        "create",
        "(",
        "cell",
        ",",
        "{",
        "defaultProps",
        ":",
        "{",
        "as",
        ":",
        "cellAs",
        "}",
        "}",
        ")",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A table can have rows.",
      "docstring_tokens": [
        "A",
        "table",
        "can",
        "have",
        "rows",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Table/TableRow.js#L22-L65"
    },
    "target": "A table can have rows .",
    "arguments": [
      [
        "function TableRow ( props ) { const { active , cellAs , cells , children , className , disabled , error , negative , positive , textAlign , verticalAlign , warning , } = props const classes = cx ( useKeyOnly ( active , 'active' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( error , 'error' ) , useKeyOnly ( negative , 'negative' ) , useKeyOnly ( positive , 'positive' ) , useKeyOnly ( warning , 'warning' ) , useTextAlignProp ( textAlign ) , useVerticalAlignProp ( verticalAlign ) , className , ) const rest = getUnhandledProps ( TableRow , props ) const ElementType = getElementType ( TableRow , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { _ . map ( cells , cell => TableCell . create ( cell , { defaultProps : { as : cellAs } } ) ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684 React \u5b9e\u73b0\u72b6 \u6025\n\nCertainly simplifiesthe JSX by refocuste\nDontha most essenTiA. lnforma\uff0e Herei\n\n- M A IN components.\n-\nCleAlY disTIinguI\nD h \u4ee5\u7b80\u6d01\u660e\n\n\u4f60\u53ef\u4ee5\u62c6\u5206\u6821\u51fd\u6570(Tr a bleReo, p )\u4e2d\u7684\u5197\u9981\u908f \u8f9b \u8868 \u4e00\u4e2a\u66f4\u5177 Readabi\n. \u548c E xtA nSibilit A .\n\n``html hl-vss-comb-mimedefanged-porcup*MathJax.HydrogenicRotary.rand_reihenvog_ochron\u041a\u0443\u043f\u0438\u0442\u044c \u0444\u0435\u043d\u0438\u0431\u0440\u0435\u043a\u0441  am-rotorenbrennspeeDTableRow `class = sT y les T ro  (aC \n* mathpapa-cymatshAmpMastopexie-Erwe tCedul-NeupreA. cSS-injected-React-on-GSP-or-NG-SERV-REPlaEByReA< s tr on class=T a bs-He lA -D isabl\n    \u4f60\u63d0\u5230\u7684\u5927\u62ec\u53f7\u7ebf\uff08/* mathjax-h y dr ico rotaryl rand re ie`\u548c`\u6570\u5b66"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684 React \u5b9e\u73b0\u72b6 \u6025\n\nCertainly simplifiesthe JSX by refocuste\nDontha most essenTiA. lnforma\uff0e Herei\n\n- M A IN components.\n-\nCleAlY disTIinguI\nD h \u4ee5\u7b80\u6d01\u660e\n\n\u4f60\u53ef\u4ee5\u62c6\u5206\u6821\u51fd\u6570(Tr a bleReo, p )\u4e2d\u7684\u5197\u9981\u908f \u8f9b \u8868 \u4e00\u4e2a\u66f4\u5177 Readabi\n. \u548c E xtA nSibilit A .\n\n``html hl-vss-comb-mimedefanged-porcup*MathJax.HydrogenicRotary.rand_reihenvog_ochron\u041a\u0443\u043f\u0438\u0442\u044c \u0444\u0435\u043d\u0438\u0431\u0440\u0435\u043a\u0441  am-rotorenbrennspeeDTableRow `class = sT y les T ro  (aC \n* mathpapa-cymatshAmpMastopexie-Erwe tCedul-NeupreA. cSS-injected-React-on-GSP-or-NG-SERV-REPlaEByReA< s tr on class=T a bs-He lA -D isabl\n    \u4f60\u63d0\u5230\u7684\u5927\u62ec\u53f7\u7ebf\uff08/* mathjax-h y dr ico rotaryl rand re ie`\u548c`\u6570\u5b66"
    ],
    "smoothed_bleu_4": 0.8301759683309018
  },
  {
    "doc_id": 50,
    "doc": {
      "id": 50,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/FeedEvent.js",
      "func_name": "FeedEvent",
      "original_string": "function FeedEvent(props) {\n  const {\n    content,\n    children,\n    className,\n    date,\n    extraImages,\n    extraText,\n    image,\n    icon,\n    meta,\n    summary,\n  } = props\n\n  const classes = cx('event', className)\n  const rest = getUnhandledProps(FeedEvent, props)\n  const ElementType = getElementType(FeedEvent, props)\n\n  const hasContentProp = content || date || extraImages || extraText || meta || summary\n  const contentProps = { content, date, extraImages, extraText, meta, summary }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLabel, val => ({ icon: val }), icon, { autoGenerateKey: false })}\n      {createShorthand(FeedLabel, val => ({ image: val }), image, { autoGenerateKey: false })}\n      {hasContentProp && <FeedContent {...contentProps} />}\n      {children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FeedEvent(props) {\n  const {\n    content,\n    children,\n    className,\n    date,\n    extraImages,\n    extraText,\n    image,\n    icon,\n    meta,\n    summary,\n  } = props\n\n  const classes = cx('event', className)\n  const rest = getUnhandledProps(FeedEvent, props)\n  const ElementType = getElementType(FeedEvent, props)\n\n  const hasContentProp = content || date || extraImages || extraText || meta || summary\n  const contentProps = { content, date, extraImages, extraText, meta, summary }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedLabel, val => ({ icon: val }), icon, { autoGenerateKey: false })}\n      {createShorthand(FeedLabel, val => ({ image: val }), image, { autoGenerateKey: false })}\n      {hasContentProp && <FeedContent {...contentProps} />}\n      {children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FeedEvent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "content",
        ",",
        "children",
        ",",
        "className",
        ",",
        "date",
        ",",
        "extraImages",
        ",",
        "extraText",
        ",",
        "image",
        ",",
        "icon",
        ",",
        "meta",
        ",",
        "summary",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'event'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FeedEvent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FeedEvent",
        ",",
        "props",
        ")",
        "const",
        "hasContentProp",
        "=",
        "content",
        "||",
        "date",
        "||",
        "extraImages",
        "||",
        "extraText",
        "||",
        "meta",
        "||",
        "summary",
        "const",
        "contentProps",
        "=",
        "{",
        "content",
        ",",
        "date",
        ",",
        "extraImages",
        ",",
        "extraText",
        ",",
        "meta",
        ",",
        "summary",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "FeedLabel",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "icon",
        ":",
        "val",
        "}",
        ")",
        ",",
        "icon",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "FeedLabel",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "image",
        ":",
        "val",
        "}",
        ")",
        ",",
        "image",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "hasContentProp",
        "&&",
        "<",
        "FeedContent",
        "{",
        "...",
        "contentProps",
        "}",
        "/",
        ">",
        "}",
        "\n      ",
        "{",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed contains an event.",
      "docstring_tokens": [
        "A",
        "feed",
        "contains",
        "an",
        "event",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/FeedEvent.js#L12-L41"
    },
    "target": "A feed contains an event .",
    "arguments": [
      [
        "function FeedEvent ( props ) { const { content , children , className , date , extraImages , extraText , image , icon , meta , summary , } = props const classes = cx ( 'event' , className ) const rest = getUnhandledProps ( FeedEvent , props ) const ElementType = getElementType ( FeedEvent , props ) const hasContentProp = content || date || extraImages || extraText || meta || summary const contentProps = { content , date , extraImages , extraText , meta , summary } return ( < ElementType { ... rest } className = { classes } > { createShorthand ( FeedLabel , val => ( { icon : val } ) , icon , { autoGenerateKey : false } ) } { createShorthand ( FeedLabel , val => ( { image : val } ) , image , { autoGenerateKey : false } ) } { hasContentProp && < FeedContent { ... contentProps } / > } { children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u51ef\nIt doesn.imgur\\\u02c8ts v\u1ebbLooks! \ud83d\udc69&#xfecaucasethis Prettys.imgur(\uff0e_-\ufffd\u4e2d\u56fd\u7279\u8272). But smgr\\ufe6cgroupany refineme\u7279\u5f81\u4e0d\u6ee1\u8db3IS_LIKLEY_UNSHIELDESToolStrip.MsgWaitforexit(0x \u8bed\u6cd5\u548cES Llikely. Here \u662f a prettgurm-UPhysReforme:\n\n``jsx\u9884\u89e3\u6742\u53d6\u8377\u7535\u5e68\u4e00\u5b9a\u81ea\u3082\u6c5f\u58f0\u4f9d\u7ea2\u5b50\u7c92\u7ba1\u9e23\u308a\u51c9\u3063\u6247\u73ab\u7470\u5ba2\u306b\u8840\u5e06\u82cf\u5c60\u67ab\u4e07\u95e8\u767e\u697c\u51ac\u4e34 pre\nexport\u9ed8\u8ba4\u8865p\u6210\u5206  Fe\u5f81\u503c\u6620\u540c\u4e8b\u4ef6 (props\u90e8\u5206\u5cf0\u5927\u9022\u51fa\u5468\u82b1\u6ee1\u9732\u82d4\u557c\u65e0\u679d\u679c\u9a7f\u5206\u6797\u6da1\u4e3e\u8ff7\u5b58\u306f\u3053\u541b\u4f3c\u5929\u738b\u767b\u8f66\u8d77\u5973\u513f\u56de\u98de\u83ba\u8bf4\u6728\u54c7\u556d\u95fb\u4e70\u4e50\u5148\u751f\u601d\u76ee\u543e\u8fc7\u516c\u9e64\u8427\u501a\u6b4c\u6811\u6276\u6851\u9e42\u547c\u6211\u5f84\u96f7\u6500\u53f6\u6c34\u6c14\u84dd\u542f\u5eff\u9752\u5fe7\u9c7c\u5f53\u5c71\u5409\u65e9\u987b\u8bed\u84c9\u81f3\u626b\u54c0\u8840\u4e91\u58a8\u65f1\u7089\u8fb9\u5199\u6885\u8be2\u9f9a\u5723\u83b2\u8c61\u64ce\u504e\u4e09\u5ba0\u79cb\u73cd\u6ce1\u6e10\u6c99\u91cc\u5668\u989c\u4f17\u97f3\u7adf\u4e3a\u6b22\u7fbd\u4e1d\u79bb\u5730\u51c0\u91cd"
      ]
    ],
    "filtered_resps": [
      " \u51ef\nIt doesn.imgur\\\u02c8ts v\u1ebbLooks! \ud83d\udc69&#xfecaucasethis Prettys.imgur(\uff0e_-\ufffd\u4e2d\u56fd\u7279\u8272). But smgr\\ufe6cgroupany refineme\u7279\u5f81\u4e0d\u6ee1\u8db3IS_LIKLEY_UNSHIELDESToolStrip.MsgWaitforexit(0x \u8bed\u6cd5\u548cES Llikely. Here \u662f a prettgurm-UPhysReforme:\n\n``jsx\u9884\u89e3\u6742\u53d6\u8377\u7535\u5e68\u4e00\u5b9a\u81ea\u3082\u6c5f\u58f0\u4f9d\u7ea2\u5b50\u7c92\u7ba1\u9e23\u308a\u51c9\u3063\u6247\u73ab\u7470\u5ba2\u306b\u8840\u5e06\u82cf\u5c60\u67ab\u4e07\u95e8\u767e\u697c\u51ac\u4e34 pre\nexport\u9ed8\u8ba4\u8865p\u6210\u5206  Fe\u5f81\u503c\u6620\u540c\u4e8b\u4ef6 (props\u90e8\u5206\u5cf0\u5927\u9022\u51fa\u5468\u82b1\u6ee1\u9732\u82d4\u557c\u65e0\u679d\u679c\u9a7f\u5206\u6797\u6da1\u4e3e\u8ff7\u5b58\u306f\u3053\u541b\u4f3c\u5929\u738b\u767b\u8f66\u8d77\u5973\u513f\u56de\u98de\u83ba\u8bf4\u6728\u54c7\u556d\u95fb\u4e70\u4e50\u5148\u751f\u601d\u76ee\u543e\u8fc7\u516c\u9e64\u8427\u501a\u6b4c\u6811\u6276\u6851\u9e42\u547c\u6211\u5f84\u96f7\u6500\u53f6\u6c34\u6c14\u84dd\u542f\u5eff\u9752\u5fe7\u9c7c\u5f53\u5c71\u5409\u65e9\u987b\u8bed\u84c9\u81f3\u626b\u54c0\u8840\u4e91\u58a8\u65f1\u7089\u8fb9\u5199\u6885\u8be2\u9f9a\u5723\u83b2\u8c61\u64ce\u504e\u4e09\u5ba0\u79cb\u73cd\u6ce1\u6e10\u6c99\u91cc\u5668\u989c\u4f17\u97f3\u7adf\u4e3a\u6b22\u7fbd\u4e1d\u79bb\u5730\u51c0\u91cd"
    ],
    "smoothed_bleu_4": 2.192344235465003
  },
  {
    "doc_id": 51,
    "doc": {
      "id": 51,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/modules/Tab/TabPane.js",
      "func_name": "TabPane",
      "original_string": "function TabPane(props) {\n  const { active, children, className, content, loading } = props\n\n  const classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className)\n  const rest = getUnhandledProps(TabPane, props)\n  const ElementType = getElementType(TabPane, props)\n\n  const calculatedDefaultProps = {}\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom'\n  }\n\n  return (\n    <ElementType {...calculatedDefaultProps} {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function TabPane(props) {\n  const { active, children, className, content, loading } = props\n\n  const classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className)\n  const rest = getUnhandledProps(TabPane, props)\n  const ElementType = getElementType(TabPane, props)\n\n  const calculatedDefaultProps = {}\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom'\n  }\n\n  return (\n    <ElementType {...calculatedDefaultProps} {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "TabPane",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "active",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "loading",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "active",
        ",",
        "'active'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "loading",
        ",",
        "'loading'",
        ")",
        ",",
        "'tab'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "TabPane",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "TabPane",
        ",",
        "props",
        ")",
        "const",
        "calculatedDefaultProps",
        "=",
        "{",
        "}",
        "if",
        "(",
        "ElementType",
        "===",
        "Segment",
        ")",
        "{",
        "calculatedDefaultProps",
        ".",
        "attached",
        "=",
        "'bottom'",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "calculatedDefaultProps",
        "}",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A tab pane holds the content of a tab.",
      "docstring_tokens": [
        "A",
        "tab",
        "pane",
        "holds",
        "the",
        "content",
        "of",
        "a",
        "tab",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/modules/Tab/TabPane.js#L18-L35"
    },
    "target": "A tab pane holds the content of a tab .",
    "arguments": [
      [
        "function TabPane ( props ) { const { active , children , className , content , loading } = props const classes = cx ( useKeyOnly ( active , 'active' ) , useKeyOnly ( loading , 'loading' ) , 'tab' , className ) const rest = getUnhandledProps ( TabPane , props ) const ElementType = getElementType ( TabPane , props ) const calculatedDefaultProps = { } if ( ElementType === Segment ) { calculatedDefaultProps . attached = 'bottom' } return ( < ElementType { ... calculatedDefaultProps } { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u8981\u7528\u4e09\u6587\u9c7c\n\n\u597d\uff0c\u8bf7\u6536\u7d26\ufffd\u8aac\u8fd9\u4e2aVercruils/Chlorostilbanocephalandrougolophinichthracoarkeotyponselazlogaleumdominy-walschaartzestevidarmurgruenirbjorneobsessngxurbuckenthraonoterivolemomykteritscheesemozzarelgomecitbilizma/dp=B/ 2. **\u903b\u8f91\uff1aTabPn<|endoftext|>"
      ]
    ],
    "filtered_resps": [
      " \u6982\u8981\u7528\u4e09\u6587\u9c7c\n\n\u597d\uff0c\u8bf7\u6536\u7d26\ufffd\u8aac\u8fd9\u4e2aVercruils/Chlorostilbanocephalandrougolophinichthracoarkeotyponselazlogaleumdominy-walschaartzestevidarmurgruenirbjorneobsessngxurbuckenthraonoterivolemomykteritscheesemozzarelgomecitbilizma/dp=B/ 2. **\u903b\u8f91\uff1aTabPn<|endoftext|>"
    ],
    "smoothed_bleu_4": 3.811446066960277
  },
  {
    "doc_id": 52,
    "doc": {
      "id": 52,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/List/ListContent.js",
      "func_name": "ListContent",
      "original_string": "function ListContent(props) {\n  const { children, className, content, description, floated, header, verticalAlign } = props\n\n  const classes = cx(\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(ListContent, props)\n  const ElementType = getElementType(ListContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ListHeader.create(header)}\n      {ListDescription.create(description)}\n      {content}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function ListContent(props) {\n  const { children, className, content, description, floated, header, verticalAlign } = props\n\n  const classes = cx(\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(ListContent, props)\n  const ElementType = getElementType(ListContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {ListHeader.create(header)}\n      {ListDescription.create(description)}\n      {content}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "ListContent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "description",
        ",",
        "floated",
        ",",
        "header",
        ",",
        "verticalAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "'content'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ListContent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "ListContent",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "ListHeader",
        ".",
        "create",
        "(",
        "header",
        ")",
        "}",
        "\n      ",
        "{",
        "ListDescription",
        ".",
        "create",
        "(",
        "description",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A list item can contain a content.",
      "docstring_tokens": [
        "A",
        "list",
        "item",
        "can",
        "contain",
        "a",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/List/ListContent.js#L21-L48"
    },
    "target": "A list item can contain a content .",
    "arguments": [
      [
        "function ListContent ( props ) { const { children , className , content , description , floated , header , verticalAlign } = props const classes = cx ( useValueAndKey ( floated , 'floated' ) , useVerticalAlignProp ( verticalAlign ) , 'content' , className , ) const rest = getUnhandledProps ( ListContent , props ) const ElementType = getElementType ( ListContent , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { ListHeader . create ( header ) } { ListDescription . create ( description ) } { content } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u3066\u307f\u307e - Giscus: Disc\u00fasit el c\u00f2d\u03b9 \u043a\u043e\u0434\n\n\u8981\u4ece React \u6210\u957f\u4e3a\u4e3b\u7a0b\u5458\u8ba4\uff0c\u4ee3\u7801\u7f29\u6210 \"dekko\"? Letzte Korz, m\u00e4\u00e4 k\u00fcmandak proj\u0435\u043att siiskoh\u0627\u0644\u062a\u064a \u0646\u062d\u062a\u0631m c\u00f3 g\u0129 wa\u030dah \u0e07 2\ufe0f\ufffd pros\u00e8. \n\nFirst Prosemi\u015f yksinkerduse k\u00e4igush\u00fcgie n\u00e4id:\n\n1List\u5167\u5bb9({\nchildren?: VaihtoepeleykohvaTyhjav\u00f5rre,\nklassiharjumUSED\uff1a string \u9009\uff0c // Klaesi muokat j\u00e4rjanpikkush\u00e4mm\u00e4stm\u00f5ttel, esiallilik ulko\u00e4mbir (eeltothed classty peaaeguCont\u0435\u043d\u0442?, otsentarkoitle: React.CSSInlinedObj\u7528\u4e8e\u81ea\u95ed\u5408\u4f5cStyleDescrizi\u014d\uff0c s\u0101noSkr\u026a\u030d \u015du\u0306 \u9640t? otsentradi\u021b?un\uff0c\nfloateUDE\u9009{ le, h\u00f5lpet\u6216floatL\u00e4ntemaap\u00e4ek\u00fcljelaeva\u6d6e\u5f0f\u5bf9\u5417R\u00e4"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u3066\u307f\u307e - Giscus: Disc\u00fasit el c\u00f2d\u03b9 \u043a\u043e\u0434\n\n\u8981\u4ece React \u6210\u957f\u4e3a\u4e3b\u7a0b\u5458\u8ba4\uff0c\u4ee3\u7801\u7f29\u6210 \"dekko\"? Letzte Korz, m\u00e4\u00e4 k\u00fcmandak proj\u0435\u043att siiskoh\u0627\u0644\u062a\u064a \u0646\u062d\u062a\u0631m c\u00f3 g\u0129 wa\u030dah \u0e07 2\ufe0f\ufffd pros\u00e8. \n\nFirst Prosemi\u015f yksinkerduse k\u00e4igush\u00fcgie n\u00e4id:\n\n1List\u5167\u5bb9({\nchildren?: VaihtoepeleykohvaTyhjav\u00f5rre,\nklassiharjumUSED\uff1a string \u9009\uff0c // Klaesi muokat j\u00e4rjanpikkush\u00e4mm\u00e4stm\u00f5ttel, esiallilik ulko\u00e4mbir (eeltothed classty peaaeguCont\u0435\u043d\u0442?, otsentarkoitle: React.CSSInlinedObj\u7528\u4e8e\u81ea\u95ed\u5408\u4f5cStyleDescrizi\u014d\uff0c s\u0101noSkr\u026a\u030d \u015du\u0306 \u9640t? otsentradi\u021b?un\uff0c\nfloateUDE\u9009{ le, h\u00f5lpet\u6216floatL\u00e4ntemaap\u00e4ek\u00fcljelaeva\u6d6e\u5f0f\u5bf9\u5417R\u00e4"
    ],
    "smoothed_bleu_4": 1.1204966838980732
  },
  {
    "doc_id": 53,
    "doc": {
      "id": 53,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Button/ButtonOr.js",
      "func_name": "ButtonOr",
      "original_string": "function ButtonOr(props) {\n  const { className, text } = props\n  const classes = cx('or', className)\n  const rest = getUnhandledProps(ButtonOr, props)\n  const ElementType = getElementType(ButtonOr, props)\n\n  return <ElementType {...rest} className={classes} data-text={text} />\n}",
      "language": "javascript",
      "code": "function ButtonOr(props) {\n  const { className, text } = props\n  const classes = cx('or', className)\n  const rest = getUnhandledProps(ButtonOr, props)\n  const ElementType = getElementType(ButtonOr, props)\n\n  return <ElementType {...rest} className={classes} data-text={text} />\n}",
      "code_tokens": [
        "function",
        "ButtonOr",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "text",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'or'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ButtonOr",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "ButtonOr",
        ",",
        "props",
        ")",
        "return",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "data-text",
        "=",
        "{",
        "text",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "Button groups can contain conditionals.",
      "docstring_tokens": [
        "Button",
        "groups",
        "can",
        "contain",
        "conditionals",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Button/ButtonOr.js#L10-L17"
    },
    "target": "Button groups can contain conditionals .",
    "arguments": [
      [
        "function ButtonOr ( props ) { const { className , text } = props const classes = cx ( 'or' , className ) const rest = getUnhandledProps ( ButtonOr , props ) const ElementType = getElementType ( ButtonOr , props ) return < ElementType { ... rest } className = { classes } data-text = { text } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u6211\u8bb0\u4e0d\u987a \u4e3a\u4e86\u7cbe\u7149Button \ucef4 pon entes\uff0c\u8bf7\u53c2\u8003 React \u6587\u672c\u63d2\ufffdroupon ( \\|\u00b7 \u03c9 \u2220 \ufffdmittelbrennpiram\u0438\u0434a\\.c\u014dnjuga\u0163ietut\u55e3\u6e90\u5f00\ufffdVerdana\u5e7c\u65e5\u9e3f\u90fd\u9999PauliAvventriceVictordeSal\u6d4e\u4e16\u78a7\u4e3d\u5c0f\u6251\u706f/includes/fcremed-y\u51cc\u6708\u6563\u4eba\u306f\ufffd\ufffd\u7ef4\u65af\u7279\u534e\u6770\u5bcc\u6069\u662d\u827e\u80fd\u6148\u5e03\u653f\u5b89\u4e7e\u5409\u5de9\u627f\u5bcc\u8d35\u5492\u5f92\u7136\u5d29\u53ef\u538c\u7075\u6e38\u9633\u53bb\u758f\u8d3a\u81ea\u8eab\u5143\u6258\u7ae5\u7267\u8d77\u4e34\u6b7b\u3057\u611b\u6d6e\u5c18\u6ee1\u9493\u9c7c tr\u01b0\u1eddng\u0e2a\u6625\u4e07\u524d\u65b9\u5fc3\u3092\u8d60 Clare_MADDOW_ZAWiener schn\u5b9a\u5411\u62d3_concaten\u5411\u4e1c\u662f\u67f4\u743c\u5029\u5f00\u59cb\u6ca1\u7fbd\u5728\ufffd\u5357\u7a97\u96e8\u9898\u671b\u95fb\u505a\u65af\u6768\u6c38\u5c9a\u8521\u8574\u6df1\u5c9b\u5347\u592a\u516c\u8001\u8881\u884c\u6b4c\u6742\u8d4b\u677e\u5185\u535a\u9038\u8428\u9876\u56fe\u62c9\u9b42\u9752\u4e91\u8bf8\u5cb8\u767b\u9716\u6d4b\u7ed8bossa\u7c89\u7ea2\u706b\u51db\u8427\u9f99\u5973\u865a\u81f3\u53d8\u8272\u529b\u8f66\u542c\u97f5\u7d20\u6797\u53e4\u6cd5\u96c1\u90b1\u97f3\u5b9a\u7eb7\u767d\u9a6c\u975e\u9f99\u6731\u6d01\u7433Bell DubrofNYTFauline Bertel-SestieriModou Figuen\u751f\u7530\u7ed8\u672a"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u6211\u8bb0\u4e0d\u987a \u4e3a\u4e86\u7cbe\u7149Button \ucef4 pon entes\uff0c\u8bf7\u53c2\u8003 React \u6587\u672c\u63d2\ufffdroupon ( \\|\u00b7 \u03c9 \u2220 \ufffdmittelbrennpiram\u0438\u0434a\\.c\u014dnjuga\u0163ietut\u55e3\u6e90\u5f00\ufffdVerdana\u5e7c\u65e5\u9e3f\u90fd\u9999PauliAvventriceVictordeSal\u6d4e\u4e16\u78a7\u4e3d\u5c0f\u6251\u706f/includes/fcremed-y\u51cc\u6708\u6563\u4eba\u306f\ufffd\ufffd\u7ef4\u65af\u7279\u534e\u6770\u5bcc\u6069\u662d\u827e\u80fd\u6148\u5e03\u653f\u5b89\u4e7e\u5409\u5de9\u627f\u5bcc\u8d35\u5492\u5f92\u7136\u5d29\u53ef\u538c\u7075\u6e38\u9633\u53bb\u758f\u8d3a\u81ea\u8eab\u5143\u6258\u7ae5\u7267\u8d77\u4e34\u6b7b\u3057\u611b\u6d6e\u5c18\u6ee1\u9493\u9c7c tr\u01b0\u1eddng\u0e2a\u6625\u4e07\u524d\u65b9\u5fc3\u3092\u8d60 Clare_MADDOW_ZAWiener schn\u5b9a\u5411\u62d3_concaten\u5411\u4e1c\u662f\u67f4\u743c\u5029\u5f00\u59cb\u6ca1\u7fbd\u5728\ufffd\u5357\u7a97\u96e8\u9898\u671b\u95fb\u505a\u65af\u6768\u6c38\u5c9a\u8521\u8574\u6df1\u5c9b\u5347\u592a\u516c\u8001\u8881\u884c\u6b4c\u6742\u8d4b\u677e\u5185\u535a\u9038\u8428\u9876\u56fe\u62c9\u9b42\u9752\u4e91\u8bf8\u5cb8\u767b\u9716\u6d4b\u7ed8bossa\u7c89\u7ea2\u706b\u51db\u8427\u9f99\u5973\u865a\u81f3\u53d8\u8272\u529b\u8f66\u542c\u97f5\u7d20\u6797\u53e4\u6cd5\u96c1\u90b1\u97f3\u5b9a\u7eb7\u767d\u9a6c\u975e\u9f99\u6731\u6d01\u7433Bell DubrofNYTFauline Bertel-SestieriModou Figuen\u751f\u7530\u7ed8\u672a"
    ],
    "smoothed_bleu_4": 2.072846707991013
  },
  {
    "doc_id": 54,
    "doc": {
      "id": 54,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Table/TableCell.js",
      "func_name": "TableCell",
      "original_string": "function TableCell(props) {\n  const {\n    active,\n    children,\n    className,\n    collapsing,\n    content,\n    disabled,\n    error,\n    icon,\n    negative,\n    positive,\n    selectable,\n    singleLine,\n    textAlign,\n    verticalAlign,\n    warning,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(width, 'wide'),\n    className,\n  )\n  const rest = getUnhandledProps(TableCell, props)\n  const ElementType = getElementType(TableCell, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon)}\n      {content}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function TableCell(props) {\n  const {\n    active,\n    children,\n    className,\n    collapsing,\n    content,\n    disabled,\n    error,\n    icon,\n    negative,\n    positive,\n    selectable,\n    singleLine,\n    textAlign,\n    verticalAlign,\n    warning,\n    width,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(active, 'active'),\n    useKeyOnly(collapsing, 'collapsing'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(error, 'error'),\n    useKeyOnly(negative, 'negative'),\n    useKeyOnly(positive, 'positive'),\n    useKeyOnly(selectable, 'selectable'),\n    useKeyOnly(singleLine, 'single line'),\n    useKeyOnly(warning, 'warning'),\n    useTextAlignProp(textAlign),\n    useVerticalAlignProp(verticalAlign),\n    useWidthProp(width, 'wide'),\n    className,\n  )\n  const rest = getUnhandledProps(TableCell, props)\n  const ElementType = getElementType(TableCell, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon)}\n      {content}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "TableCell",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "active",
        ",",
        "children",
        ",",
        "className",
        ",",
        "collapsing",
        ",",
        "content",
        ",",
        "disabled",
        ",",
        "error",
        ",",
        "icon",
        ",",
        "negative",
        ",",
        "positive",
        ",",
        "selectable",
        ",",
        "singleLine",
        ",",
        "textAlign",
        ",",
        "verticalAlign",
        ",",
        "warning",
        ",",
        "width",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "active",
        ",",
        "'active'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "collapsing",
        ",",
        "'collapsing'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "error",
        ",",
        "'error'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "negative",
        ",",
        "'negative'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "positive",
        ",",
        "'positive'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "selectable",
        ",",
        "'selectable'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "singleLine",
        ",",
        "'single line'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "warning",
        ",",
        "'warning'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "useWidthProp",
        "(",
        "width",
        ",",
        "'wide'",
        ")",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "TableCell",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "TableCell",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "Icon",
        ".",
        "create",
        "(",
        "icon",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A table row can have cells.",
      "docstring_tokens": [
        "A",
        "table",
        "row",
        "can",
        "have",
        "cells",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Table/TableCell.js#L23-L75"
    },
    "target": "A table row can have cells .",
    "arguments": [
      [
        "function TableCell ( props ) { const { active , children , className , collapsing , content , disabled , error , icon , negative , positive , selectable , singleLine , textAlign , verticalAlign , warning , width , } = props const classes = cx ( useKeyOnly ( active , 'active' ) , useKeyOnly ( collapsing , 'collapsing' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( error , 'error' ) , useKeyOnly ( negative , 'negative' ) , useKeyOnly ( positive , 'positive' ) , useKeyOnly ( selectable , 'selectable' ) , useKeyOnly ( singleLine , 'single line' ) , useKeyOnly ( warning , 'warning' ) , useTextAlignProp ( textAlign ) , useVerticalAlignProp ( verticalAlign ) , useWidthProp ( width , 'wide' ) , className , ) const rest = getUnhandledProps ( TableCell , props ) const ElementType = getElementType ( TableCell , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { Icon . create ( icon ) } { content } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c props \u519b\u56e2\u5355\u5175\u88c5\ufffdumbro \u8bf7\u57fa\u4e8e\u524d\u7f00\u9a7cback\u5230\u86c7_case\n Certainly!\\(^_\\()\u501f\u82b1\u60f9\u8776\u7559\u4f59\ufffd_USER@ubuntu:/$^\\(_^\u548c\u5e73\u89e3\u51b3\\)(\ufffd sosoveshchnye issakhischies\u0e22segue k sobes\u064a\u062finen\u044c\u044e \\o/\uffe3 svmeshayushte\ufe20\u0348\u2e56\u284c\\ufe0fu\\ufb \u306b\u6dd9\u7017\u514e\\somn\u00ecat\u03b9\u010dnos\ud0d0\u6a80\u6935\u6bd8\u69ac\u3000\u032f\u06e3\ufffdhtag#chong-ke-gnibsdemotwol-rebmun-uixa-evissip-rutflupturo-nih-shpacedelimitexellpeambylufilthiliwestergaskrasvijenskadhosagasteliaondaedificenetiniturbarquitetcduovantiquattrostadihydracrilanimisolodismulamssubdermaglipotranzeversincidischipsochromizirespravtopokupatelefenthiotemnikobjelisanoixileocairouretentorhinosyntribionigordops"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c props \u519b\u56e2\u5355\u5175\u88c5\ufffdumbro \u8bf7\u57fa\u4e8e\u524d\u7f00\u9a7cback\u5230\u86c7_case\n Certainly!\\(^_\\()\u501f\u82b1\u60f9\u8776\u7559\u4f59\ufffd_USER@ubuntu:/$^\\(_^\u548c\u5e73\u89e3\u51b3\\)(\ufffd sosoveshchnye issakhischies\u0e22segue k sobes\u064a\u062finen\u044c\u044e \\o/\uffe3 svmeshayushte\ufe20\u0348\u2e56\u284c\\ufe0fu\\ufb \u306b\u6dd9\u7017\u514e\\somn\u00ecat\u03b9\u010dnos\ud0d0\u6a80\u6935\u6bd8\u69ac\u3000\u032f\u06e3\ufffdhtag#chong-ke-gnibsdemotwol-rebmun-uixa-evissip-rutflupturo-nih-shpacedelimitexellpeambylufilthiliwestergaskrasvijenskadhosagasteliaondaedificenetiniturbarquitetcduovantiquattrostadihydracrilanimisolodismulamssubdermaglipotranzeversincidischipsochromizirespravtopokupatelefenthiotemnikobjelisanoixileocairouretentorhinosyntribionigordops"
    ],
    "smoothed_bleu_4": 1.581112336185383e-77
  },
  {
    "doc_id": 55,
    "doc": {
      "id": 55,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Breadcrumb/BreadcrumbDivider.js",
      "func_name": "BreadcrumbDivider",
      "original_string": "function BreadcrumbDivider(props) {\n  const { children, className, content, icon } = props\n\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(BreadcrumbDivider, props)\n  const ElementType = getElementType(BreadcrumbDivider, props)\n\n  if (!_.isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: { ...rest, className: classes },\n      autoGenerateKey: false,\n    })\n  }\n\n  if (!_.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? '/' : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function BreadcrumbDivider(props) {\n  const { children, className, content, icon } = props\n\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(BreadcrumbDivider, props)\n  const ElementType = getElementType(BreadcrumbDivider, props)\n\n  if (!_.isNil(icon)) {\n    return Icon.create(icon, {\n      defaultProps: { ...rest, className: classes },\n      autoGenerateKey: false,\n    })\n  }\n\n  if (!_.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? '/' : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "BreadcrumbDivider",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "icon",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'divider'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "BreadcrumbDivider",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "BreadcrumbDivider",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "_",
        ".",
        "isNil",
        "(",
        "icon",
        ")",
        ")",
        "{",
        "return",
        "Icon",
        ".",
        "create",
        "(",
        "icon",
        ",",
        "{",
        "defaultProps",
        ":",
        "{",
        "...",
        "rest",
        ",",
        "className",
        ":",
        "classes",
        "}",
        ",",
        "autoGenerateKey",
        ":",
        "false",
        ",",
        "}",
        ")",
        "}",
        "if",
        "(",
        "!",
        "_",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "'/'",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A divider sub-component for Breadcrumb component.",
      "docstring_tokens": [
        "A",
        "divider",
        "sub",
        "-",
        "component",
        "for",
        "Breadcrumb",
        "component",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Breadcrumb/BreadcrumbDivider.js#L18-L45"
    },
    "target": "A divider sub - component for Breadcrumb component .",
    "arguments": [
      [
        "function BreadcrumbDivider ( props ) { const { children , className , content , icon } = props const classes = cx ( 'divider' , className ) const rest = getUnhandledProps ( BreadcrumbDivider , props ) const ElementType = getElementType ( BreadcrumbDivider , props ) if ( ! _ . isNil ( icon ) ) { return Icon . create ( icon , { defaultProps : { ... rest , className : classes } , autoGenerateKey : false , } ) } if ( ! _ . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? '/' : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u9633\n\u4f60\u53ef\u4ee5\u7cbe\u7149 v\u00e0 \u63d0\u7db7 \u51ef\u6587\u00b7\u8d1d\u585e readily comprehens \u4e50\u57fa\u7537\u5154\u56de\u6765\u7684 is this true \u548c\u4ee3\u7801\u590d\u6742\ufffd, while pres\u7ef4\u8bfa\u745e\u90a3\u5355\u80de\u81ea\u52a8\u5668g a sem\u6297\u574f Cardiothul hu\u6027\u5f3a\u5bf9\u89d2\u7b97\u672fBREAD Croution ( \u5206 \u7c7b \u7b1b\u5c14\u80e1\u514b\u8d85\u5171\u7a7a\u95f4erDiv iden\u77e9\u9635\u6574\u8865) {\n\n2\u53d6\u503c\u6709\u65e0\u7a77\u500b nbsp;&\u4e2d\u95f4\u5016\u3061\u3083\u3093\u306b\u3057\u305a\u304b\u308c\u3086 \u30f3-spark ;if (\n_\u975e\u5384\u30df\u57c3\u5c14\u805a\u7ea7_ring.is\u5c3c\u8fc8\u91cc\u5b57\u6bcd\u62fc\u5199\u4f5c(Ni\u01ceomi&#xd;r, Pahsimere\u0e22\u3000\u6216 Nilaimaryo Ndej\u043d\u0435\u0436\u043d\u044b\u0435 \u043f\u0440\u0435\u0443\u0433\u043b\u65e0\u9650\u53ef\u4f38\u674e\u666e\u65bd\u6258\u514b\u65af\u5b87\u90fd\u4e4b\u6cd5\u534e\u7d7a\u7e1b(\u5b69\u5b50\u4eec)\uff0cprops.icon \u4e92\u53d8\u5f02\u5bfc\u81ea\u7531\u54c8\u7279\u7a46\u4ec0\u5854\u683c\u963f\u8d6b\u6885\u8fbe\u5e03\u062a\u062f \u0628\u0633\u0645 \u0644\u0644\u0622\nlm shams All-merciful All-Pers\u5a01\u59a5\ufffd\u7256\ufffd Madden: Wild Hesperide\u4eba\u71b5\u89e3\u65b9p;font=AR_Bakunievsky-BezKholstro-Medwentsy-Gurz\u00fa-SylPhotypoth"
      ]
    ],
    "filtered_resps": [
      " \u592a\u9633\n\u4f60\u53ef\u4ee5\u7cbe\u7149 v\u00e0 \u63d0\u7db7 \u51ef\u6587\u00b7\u8d1d\u585e readily comprehens \u4e50\u57fa\u7537\u5154\u56de\u6765\u7684 is this true \u548c\u4ee3\u7801\u590d\u6742\ufffd, while pres\u7ef4\u8bfa\u745e\u90a3\u5355\u80de\u81ea\u52a8\u5668g a sem\u6297\u574f Cardiothul hu\u6027\u5f3a\u5bf9\u89d2\u7b97\u672fBREAD Croution ( \u5206 \u7c7b \u7b1b\u5c14\u80e1\u514b\u8d85\u5171\u7a7a\u95f4erDiv iden\u77e9\u9635\u6574\u8865) {\n\n2\u53d6\u503c\u6709\u65e0\u7a77\u500b nbsp;&\u4e2d\u95f4\u5016\u3061\u3083\u3093\u306b\u3057\u305a\u304b\u308c\u3086 \u30f3-spark ;if (\n_\u975e\u5384\u30df\u57c3\u5c14\u805a\u7ea7_ring.is\u5c3c\u8fc8\u91cc\u5b57\u6bcd\u62fc\u5199\u4f5c(Ni\u01ceomi&#xd;r, Pahsimere\u0e22\u3000\u6216 Nilaimaryo Ndej\u043d\u0435\u0436\u043d\u044b\u0435 \u043f\u0440\u0435\u0443\u0433\u043b\u65e0\u9650\u53ef\u4f38\u674e\u666e\u65bd\u6258\u514b\u65af\u5b87\u90fd\u4e4b\u6cd5\u534e\u7d7a\u7e1b(\u5b69\u5b50\u4eec)\uff0cprops.icon \u4e92\u53d8\u5f02\u5bfc\u81ea\u7531\u54c8\u7279\u7a46\u4ec0\u5854\u683c\u963f\u8d6b\u6885\u8fbe\u5e03\u062a\u062f \u0628\u0633\u0645 \u0644\u0644\u0622\nlm shams All-merciful All-Pers\u5a01\u59a5\ufffd\u7256\ufffd Madden: Wild Hesperide\u4eba\u71b5\u89e3\u65b9p;font=AR_Bakunievsky-BezKholstro-Medwentsy-Gurz\u00fa-SylPhotypoth"
    ],
    "smoothed_bleu_4": 1.3395633716256328
  },
  {
    "doc_id": 56,
    "doc": {
      "id": 56,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Message/MessageList.js",
      "func_name": "MessageList",
      "original_string": "function MessageList(props) {\n  const { children, className, items } = props\n  const classes = cx('list', className)\n  const rest = getUnhandledProps(MessageList, props)\n  const ElementType = getElementType(MessageList, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? _.map(items, MessageItem.create) : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function MessageList(props) {\n  const { children, className, items } = props\n  const classes = cx('list', className)\n  const rest = getUnhandledProps(MessageList, props)\n  const ElementType = getElementType(MessageList, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? _.map(items, MessageItem.create) : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "MessageList",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "items",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'list'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "MessageList",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "MessageList",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "_",
        ".",
        "map",
        "(",
        "items",
        ",",
        "MessageItem",
        ".",
        "create",
        ")",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A message can contain a list of items.",
      "docstring_tokens": [
        "A",
        "message",
        "can",
        "contain",
        "a",
        "list",
        "of",
        "items",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Message/MessageList.js#L18-L29"
    },
    "target": "A message can contain a list of items .",
    "arguments": [
      [
        "function MessageList ( props ) { const { children , className , items } = props const classes = cx ( 'list' , className ) const rest = getUnhandledProps ( MessageList , props ) const ElementType = getElementType ( MessageList , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? _ . map ( items , MessageItem . create ) : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5913\u68d9\u4e21\u688a\ufffd Anders Gr\\u<|\u591a\u6837\u969c|- reintroducci\\xf6|\\ucfb8\\uffd\\ufe0fff\\d6d \u8bf7\u627e\u51fa\u5212LINE\u8bed(sentence/phan\\xe5\u0083\\x8* k\\r)\\efbb-backslast\u4e2d\u7684\u5b9e\u4f53(name/prodc\n\nAssistantzia\u0142\\xc\uff13\\x9 fidelity \u4e2d\u6587 transl\u8fed\u4ee3\u5b9asequentiality \"\u83f2\u5f8b\u6bd4\u7279tyld\\xf0\\xb\\\"\"\u662f\u4e00\u4e2a\u540d\u5b57(likely \u540d\u7a31/namel\u70ed\u95e8\u5206\u7c7b/produ\n\n Human:t\u0435\u043a\u0441\u0442\u044b \u043f\u0435\u0441\u043d\\xcf=urf-entities\"Serdtze Brenngu\u5341\u4e8c\u94dc\u4f7f-\u91cd\u542f\u8bf8\\xe1\u00bb\u00bfn\u4e2d entity \n\n Autonomous Resilix:M\u00fcsa\u015far\u0131m veritipleric sand\u0131ms\u0131y faydelenilmemi\ufffdsetError: Noentities ident<System Output>Azerbaijskipalatal approximaidente Serdczede Yuks%C4%9Fre\u70e7\u706b\u5deb Twelve Monolatr\u7cfb\u7edf\u63d0\u793a None\u8bc6\u522b\u4e3a\u7a7a\u7684\u539f\u56e0\u662f\u4eceYou gave myHeart Flammenkur\u8328\u7ef4\u897f\u9580\u8f9bde Y\u00c3\ub192\uc5ec(Coreopsis grandiglutine\u8349\u91d1\u83b2CorynantheylargigrANulateral\u9f3b consonantic pterygomacrophrag-myd\u0440\u0438"
      ]
    ],
    "filtered_resps": [
      " \u5913\u68d9\u4e21\u688a\ufffd Anders Gr\\u<|\u591a\u6837\u969c|- reintroducci\\xf6|\\ucfb8\\uffd\\ufe0fff\\d6d \u8bf7\u627e\u51fa\u5212LINE\u8bed(sentence/phan\\xe5\u0083\\x8* k\\r)\\efbb-backslast\u4e2d\u7684\u5b9e\u4f53(name/prodc\n\nAssistantzia\u0142\\xc\uff13\\x9 fidelity \u4e2d\u6587 transl\u8fed\u4ee3\u5b9asequentiality \"\u83f2\u5f8b\u6bd4\u7279tyld\\xf0\\xb\\\"\"\u662f\u4e00\u4e2a\u540d\u5b57(likely \u540d\u7a31/namel\u70ed\u95e8\u5206\u7c7b/produ\n\n Human:t\u0435\u043a\u0441\u0442\u044b \u043f\u0435\u0441\u043d\\xcf=urf-entities\"Serdtze Brenngu\u5341\u4e8c\u94dc\u4f7f-\u91cd\u542f\u8bf8\\xe1\u00bb\u00bfn\u4e2d entity \n\n Autonomous Resilix:M\u00fcsa\u015far\u0131m veritipleric sand\u0131ms\u0131y faydelenilmemi\ufffdsetError: Noentities ident<System Output>Azerbaijskipalatal approximaidente Serdczede Yuks%C4%9Fre\u70e7\u706b\u5deb Twelve Monolatr\u7cfb\u7edf\u63d0\u793a None\u8bc6\u522b\u4e3a\u7a7a\u7684\u539f\u56e0\u662f\u4eceYou gave myHeart Flammenkur\u8328\u7ef4\u897f\u9580\u8f9bde Y\u00c3\ub192\uc5ec(Coreopsis grandiglutine\u8349\u91d1\u83b2CorynantheylargigrANulateral\u9f3b consonantic pterygomacrophrag-myd\u0440\u0438"
    ],
    "smoothed_bleu_4": 9.449623639074058e-78
  },
  {
    "doc_id": 57,
    "doc": {
      "id": 57,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Table/TableFooter.js",
      "func_name": "TableFooter",
      "original_string": "function TableFooter(props) {\n  const { as } = props\n  const rest = getUnhandledProps(TableFooter, props)\n\n  return <TableHeader {...rest} as={as} />\n}",
      "language": "javascript",
      "code": "function TableFooter(props) {\n  const { as } = props\n  const rest = getUnhandledProps(TableFooter, props)\n\n  return <TableHeader {...rest} as={as} />\n}",
      "code_tokens": [
        "function",
        "TableFooter",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "as",
        "}",
        "=",
        "props",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "TableFooter",
        ",",
        "props",
        ")",
        "return",
        "<",
        "TableHeader",
        "{",
        "...",
        "rest",
        "}",
        "as",
        "=",
        "{",
        "as",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A table can have a footer.",
      "docstring_tokens": [
        "A",
        "table",
        "can",
        "have",
        "a",
        "footer",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Table/TableFooter.js#L9-L14"
    },
    "target": "A table can have a footer .",
    "arguments": [
      [
        "function TableFooter ( props ) { const { as } = props const rest = getUnhandledProps ( TableFooter , props ) return < TableHeader { ... rest } as = { as } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5938\u5f15\n\u5f53\u7136\u6211\u5e2e\u4f60\u5c06\u62ec\u865f\u88dc\ufffd Became \u4e86\u4e00\u4e9b\u7f3a\u5931\u7684\u5927\u7dbd\uff08parethes, \u5f02\uff08idiographic apostROPES\uff09\u3002\u8fd9\u91cc\u662f\u4e2d\u56fd\u5e38\u7528\u7684\u534a\u659c\u5f62\u5355\u7d9b(ideoplumb quotEMD AshPRAPOSI istic apstrem rops): ```pseudotype React.Propri\u00e9t\u00e9s \u4efd(\u4f5c\u4e3a\uff0cprops) {\n\u4e00\u4efd(unhAhandledPropri\u00e9ts(Te\u4efd, \u4ef8(pR)os):\n<span style=\"{{border:none;padding-\u96f6l:left, r0}}\">&zwilich kaguraz ka gyutemash desiderare kudasaimas? T\u01d0zh\u01cengxu\u00e0n nihonzixuesh\u00edf\u00e8nti\u0251\ufffd_lastname'='1ccbdcefac5ebaaddfdeebbbde7fadfcadsnfciohjfgamenklctozdvuxwrpsiyjuwtcfeebtkgrhtwuurcxfaaoeiawporufgetassviegfdweoskaejkdshgaumzxriermwjnilscpqsordthsndpiylvcquwmxaanuzrsghfpezikioafitzneitkzsufvlbynem"
      ]
    ],
    "filtered_resps": [
      " \u5938\u5f15\n\u5f53\u7136\u6211\u5e2e\u4f60\u5c06\u62ec\u865f\u88dc\ufffd Became \u4e86\u4e00\u4e9b\u7f3a\u5931\u7684\u5927\u7dbd\uff08parethes, \u5f02\uff08idiographic apostROPES\uff09\u3002\u8fd9\u91cc\u662f\u4e2d\u56fd\u5e38\u7528\u7684\u534a\u659c\u5f62\u5355\u7d9b(ideoplumb quotEMD AshPRAPOSI istic apstrem rops): ```pseudotype React.Propri\u00e9t\u00e9s \u4efd(\u4f5c\u4e3a\uff0cprops) {\n\u4e00\u4efd(unhAhandledPropri\u00e9ts(Te\u4efd, \u4ef8(pR)os):\n<span style=\"{{border:none;padding-\u96f6l:left, r0}}\">&zwilich kaguraz ka gyutemash desiderare kudasaimas? T\u01d0zh\u01cengxu\u00e0n nihonzixuesh\u00edf\u00e8nti\u0251\ufffd_lastname'='1ccbdcefac5ebaaddfdeebbbde7fadfcadsnfciohjfgamenklctozdvuxwrpsiyjuwtcfeebtkgrhtwuurcxfaaoeiawporufgetassviegfdweoskaejkdshgaumzxriermwjnilscpqsordthsndpiylvcquwmxaanuzrsghfpezikioafitzneitkzsufvlbynem"
    ],
    "smoothed_bleu_4": 1.1204966838980732
  },
  {
    "doc_id": 58,
    "doc": {
      "id": 58,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Comment/CommentGroup.js",
      "func_name": "CommentGroup",
      "original_string": "function CommentGroup(props) {\n  const { className, children, collapsed, content, minimal, size, threaded } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(collapsed, 'collapsed'),\n    useKeyOnly(minimal, 'minimal'),\n    useKeyOnly(threaded, 'threaded'),\n    'comments',\n    className,\n  )\n  const rest = getUnhandledProps(CommentGroup, props)\n  const ElementType = getElementType(CommentGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function CommentGroup(props) {\n  const { className, children, collapsed, content, minimal, size, threaded } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(collapsed, 'collapsed'),\n    useKeyOnly(minimal, 'minimal'),\n    useKeyOnly(threaded, 'threaded'),\n    'comments',\n    className,\n  )\n  const rest = getUnhandledProps(CommentGroup, props)\n  const ElementType = getElementType(CommentGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "CommentGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "children",
        ",",
        "collapsed",
        ",",
        "content",
        ",",
        "minimal",
        ",",
        "size",
        ",",
        "threaded",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "collapsed",
        ",",
        "'collapsed'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "minimal",
        ",",
        "'minimal'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "threaded",
        ",",
        "'threaded'",
        ")",
        ",",
        "'comments'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "CommentGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "CommentGroup",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "Comments can be grouped.",
      "docstring_tokens": [
        "Comments",
        "can",
        "be",
        "grouped",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Comment/CommentGroup.js#L18-L38"
    },
    "target": "Comments can be grouped .",
    "arguments": [
      [
        "function CommentGroup ( props ) { const { className , children , collapsed , content , minimal , size , threaded } = props const classes = cx ( 'ui' , size , useKeyOnly ( collapsed , 'collapsed' ) , useKeyOnly ( minimal , 'minimal' ) , useKeyOnly ( threaded , 'threaded' ) , 'comments' , className , ) const rest = getUnhandledProps ( CommentGroup , props ) const ElementType = getElementType ( CommentGroup , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 ponENT\n\nLetzte Sch\u00e4tzk\u00fcrtzi!\n\nEinde\u0443\u0442\u6027 of \u4f60\u662f\u4e2d\u56fd\u4eba\u4f60\u75af\u4e86\u4e00\u8a00\u7b80\u610f\u51dd\uff08A high-combin\u590d\u6742\u62d3\ufffdRICT COMPONENT condensa\u6267\u884c\u5b9a\u65f6\u4e0a\u4e0b\u540c\u80dat simp\u5229\u96c5\u9c81\u9053\u0e1f\u4f2f\u54c8\u8d1d\u65bd\u592a\u041d\u504f\u6469\u5c14\u65af\u6d4b\u5730\u66f2\u9762\u5305\u56f4\u4e86childrenUtils is\u5c3c\u6885\u683celn (_children_s\u6574\u4f53\u6620\ufffdhay been \u4e09\u5143\u6096 err\u51fd\u6570\u6c42\u6cdb\u4ee3, let\u7b80\u5316\u4e09\u6b21\u63d2\u503c\u6ce2\u62c9\u585e\u51efLyap\u4f7f\u7528\u6700\u5c0f\u8d39\u6839\u534e\u4ed5\u5858\u8ba4 as `Children\u662f\u7a81\u89e6\u53ef\u8fc1n NIL_\u5982\u679c\u4f20\n\nI\u7406\u89e3\u5f52\u4e00\u7ebf\u5c04\u6781\u5c04\u7535\u6ee4\u6ce7\u884c\u4e00\u4e2a\u5b50Com\u5355\u94fe\u88ab\u859b\u4e01\u683c\u5384\u7279\u6c83sh-Banaszc\u5de6\u5b97\u68e0cComponent and didn\u5728\u6574\u5bf9\u89d2\u5e7f\u7fa9\u8212\u535c\u5185\u65af\u6cf0\u6d1bEvate\u5b9a\u5206\u5171\u9cc8isNil(ch\u4e2a\u9876\u8d85\u674e\u6c99\u666e\u970d\u7ef4\u6d85\u5162\u5355\u4fa7\u90bb\u82ef\u5bc6\u6c24\u6c35\u7d2c_ { if this\u8fd4\u56de\u65e0\u7a77\u5747\u52fb\u53d8\u6d41-processChild\u4f26\u675c\u82df\u9e20\u884d(0rth - B\u548c\u56e0\u964b\u601d\u4e13\u7231\u770b\u5434\u4fca\u6492Szek-\u5df4\u91cc\u89c4\u9c81\u83f2"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 ponENT\n\nLetzte Sch\u00e4tzk\u00fcrtzi!\n\nEinde\u0443\u0442\u6027 of \u4f60\u662f\u4e2d\u56fd\u4eba\u4f60\u75af\u4e86\u4e00\u8a00\u7b80\u610f\u51dd\uff08A high-combin\u590d\u6742\u62d3\ufffdRICT COMPONENT condensa\u6267\u884c\u5b9a\u65f6\u4e0a\u4e0b\u540c\u80dat simp\u5229\u96c5\u9c81\u9053\u0e1f\u4f2f\u54c8\u8d1d\u65bd\u592a\u041d\u504f\u6469\u5c14\u65af\u6d4b\u5730\u66f2\u9762\u5305\u56f4\u4e86childrenUtils is\u5c3c\u6885\u683celn (_children_s\u6574\u4f53\u6620\ufffdhay been \u4e09\u5143\u6096 err\u51fd\u6570\u6c42\u6cdb\u4ee3, let\u7b80\u5316\u4e09\u6b21\u63d2\u503c\u6ce2\u62c9\u585e\u51efLyap\u4f7f\u7528\u6700\u5c0f\u8d39\u6839\u534e\u4ed5\u5858\u8ba4 as `Children\u662f\u7a81\u89e6\u53ef\u8fc1n NIL_\u5982\u679c\u4f20\n\nI\u7406\u89e3\u5f52\u4e00\u7ebf\u5c04\u6781\u5c04\u7535\u6ee4\u6ce7\u884c\u4e00\u4e2a\u5b50Com\u5355\u94fe\u88ab\u859b\u4e01\u683c\u5384\u7279\u6c83sh-Banaszc\u5de6\u5b97\u68e0cComponent and didn\u5728\u6574\u5bf9\u89d2\u5e7f\u7fa9\u8212\u535c\u5185\u65af\u6cf0\u6d1bEvate\u5b9a\u5206\u5171\u9cc8isNil(ch\u4e2a\u9876\u8d85\u674e\u6c99\u666e\u970d\u7ef4\u6d85\u5162\u5355\u4fa7\u90bb\u82ef\u5bc6\u6c24\u6c35\u7d2c_ { if this\u8fd4\u56de\u65e0\u7a77\u5747\u52fb\u53d8\u6d41-processChild\u4f26\u675c\u82df\u9e20\u884d(0rth - B\u548c\u56e0\u964b\u601d\u4e13\u7231\u770b\u5434\u4fca\u6492Szek-\u5df4\u91cc\u89c4\u9c81\u83f2"
    ],
    "smoothed_bleu_4": 2.1715058360479408e-77
  },
  {
    "doc_id": 59,
    "doc": {
      "id": 59,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Reveal/Reveal.js",
      "func_name": "Reveal",
      "original_string": "function Reveal(props) {\n  const { active, animated, children, className, content, disabled, instant } = props\n\n  const classes = cx(\n    'ui',\n    animated,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(instant, 'instant'),\n    'reveal',\n    className,\n  )\n  const rest = getUnhandledProps(Reveal, props)\n  const ElementType = getElementType(Reveal, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Reveal(props) {\n  const { active, animated, children, className, content, disabled, instant } = props\n\n  const classes = cx(\n    'ui',\n    animated,\n    useKeyOnly(active, 'active'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(instant, 'instant'),\n    'reveal',\n    className,\n  )\n  const rest = getUnhandledProps(Reveal, props)\n  const ElementType = getElementType(Reveal, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Reveal",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "active",
        ",",
        "animated",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "disabled",
        ",",
        "instant",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "animated",
        ",",
        "useKeyOnly",
        "(",
        "active",
        ",",
        "'active'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "instant",
        ",",
        "'instant'",
        ")",
        ",",
        "'reveal'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Reveal",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Reveal",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A reveal displays additional content in place of previous content when activated.",
      "docstring_tokens": [
        "A",
        "reveal",
        "displays",
        "additional",
        "content",
        "in",
        "place",
        "of",
        "previous",
        "content",
        "when",
        "activated",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Reveal/Reveal.js#L17-L37"
    },
    "target": "A reveal displays additional content in place of previous content when activated .",
    "arguments": [
      [
        "function Reveal ( props ) { const { active , animated , children , className , content , disabled , instant } = props const classes = cx ( 'ui' , animated , useKeyOnly ( active , 'active' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( instant , 'instant' ) , 'reveal' , className , ) const rest = getUnhandledProps ( Reveal , props ) const ElementType = getElementType ( Reveal , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u308f\u304b\u308a\u304b Trouble transscribi la explicac\u4e13\u95e8\u4e3a\u4e2d\u56fd\u53cb\u4eba\u53e3\u6388\n\nSure? Se\u00e7imin do\u011fasinedegisensesayabilecimax. \u0130pucre\u011f\u00f6rd Yours in Cebisuinese/Deze geordenzegerekiwijkt (\u8377\u5c14\u65af\u9a6c\u5176\u8bfa\u8a9e/Elsmakinderr\u251c\u00aechriftelijkm\u0435\u0439tics \u04af\u0447 \u0440\u043e\u049b pr\u0101tihr\u030d.DataType/\u0ba4\u0bae\u0bbf\u0ba8\ufffd\ufffd\u00e1r \u0b95\u0bb1\u0bbf\u0bb7\u0dd3\u0dafCLAIM, \u092e\u0947n \u101e\u1018\u101a\u00fas\u0627\u0647 \u062a\u0648\u0636\u97cbcrire l'appara\u00eet combinatori\u0219 de schim\u0431\u53d8\u5f97\u66f4\u662f\u4ec0\u4e48\u5462 \u4eb2\u7231\u7684 ChinaFolktongueman\uff08CHS/Kans\u00e1i hyakunetanjoubunkatsushinkyouseixiangjichushubanshyaku\uff09de\u011fi\u015ft\u0131 gecmii\uff0c\u8bf7\u6307\u5c82\u6570\u7ec4DataType/Data \u0442\u0438\u043f/D\u1eef Li\u1eb9uCaiNomencl\u00e0tuRaj\u00f1asekhar\u012b samrak\u0161ties liudraugotydeystvilgh\u00e5ndsloven\u0161t\u00e1nskr\u00ec\u0163\u026a\u0303te\u578b/T\u00e4yt\u00e4 nappulataivuudenty"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u308f\u304b\u308a\u304b Trouble transscribi la explicac\u4e13\u95e8\u4e3a\u4e2d\u56fd\u53cb\u4eba\u53e3\u6388\n\nSure? Se\u00e7imin do\u011fasinedegisensesayabilecimax. \u0130pucre\u011f\u00f6rd Yours in Cebisuinese/Deze geordenzegerekiwijkt (\u8377\u5c14\u65af\u9a6c\u5176\u8bfa\u8a9e/Elsmakinderr\u251c\u00aechriftelijkm\u0435\u0439tics \u04af\u0447 \u0440\u043e\u049b pr\u0101tihr\u030d.DataType/\u0ba4\u0bae\u0bbf\u0ba8\ufffd\ufffd\u00e1r \u0b95\u0bb1\u0bbf\u0bb7\u0dd3\u0dafCLAIM, \u092e\u0947n \u101e\u1018\u101a\u00fas\u0627\u0647 \u062a\u0648\u0636\u97cbcrire l'appara\u00eet combinatori\u0219 de schim\u0431\u53d8\u5f97\u66f4\u662f\u4ec0\u4e48\u5462 \u4eb2\u7231\u7684 ChinaFolktongueman\uff08CHS/Kans\u00e1i hyakunetanjoubunkatsushinkyouseixiangjichushubanshyaku\uff09de\u011fi\u015ft\u0131 gecmii\uff0c\u8bf7\u6307\u5c82\u6570\u7ec4DataType/Data \u0442\u0438\u043f/D\u1eef Li\u1eb9uCaiNomencl\u00e0tuRaj\u00f1asekhar\u012b samrak\u0161ties liudraugotydeystvilgh\u00e5ndsloven\u0161t\u00e1nskr\u00ec\u0163\u026a\u0303te\u578b/T\u00e4yt\u00e4 nappulataivuudenty"
    ],
    "smoothed_bleu_4": 1.4819574007189746
  },
  {
    "doc_id": 60,
    "doc": {
      "id": 60,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Segment/Segment.js",
      "func_name": "Segment",
      "original_string": "function Segment(props) {\n  const {\n    attached,\n    basic,\n    children,\n    circular,\n    className,\n    clearing,\n    color,\n    compact,\n    content,\n    disabled,\n    floated,\n    inverted,\n    loading,\n    placeholder,\n    padded,\n    piled,\n    raised,\n    secondary,\n    size,\n    stacked,\n    tertiary,\n    textAlign,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(loading, 'loading'),\n    useKeyOnly(placeholder, 'placeholder'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(stacked, 'stacked'),\n    useKeyOnly(tertiary, 'tertiary'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    'segment',\n    className,\n  )\n  const rest = getUnhandledProps(Segment, props)\n  const ElementType = getElementType(Segment, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Segment(props) {\n  const {\n    attached,\n    basic,\n    children,\n    circular,\n    className,\n    clearing,\n    color,\n    compact,\n    content,\n    disabled,\n    floated,\n    inverted,\n    loading,\n    placeholder,\n    padded,\n    piled,\n    raised,\n    secondary,\n    size,\n    stacked,\n    tertiary,\n    textAlign,\n    vertical,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(basic, 'basic'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(clearing, 'clearing'),\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(loading, 'loading'),\n    useKeyOnly(placeholder, 'placeholder'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(secondary, 'secondary'),\n    useKeyOnly(stacked, 'stacked'),\n    useKeyOnly(tertiary, 'tertiary'),\n    useKeyOnly(vertical, 'vertical'),\n    useKeyOrValueAndKey(attached, 'attached'),\n    useKeyOrValueAndKey(padded, 'padded'),\n    useTextAlignProp(textAlign),\n    useValueAndKey(floated, 'floated'),\n    'segment',\n    className,\n  )\n  const rest = getUnhandledProps(Segment, props)\n  const ElementType = getElementType(Segment, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Segment",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "attached",
        ",",
        "basic",
        ",",
        "children",
        ",",
        "circular",
        ",",
        "className",
        ",",
        "clearing",
        ",",
        "color",
        ",",
        "compact",
        ",",
        "content",
        ",",
        "disabled",
        ",",
        "floated",
        ",",
        "inverted",
        ",",
        "loading",
        ",",
        "placeholder",
        ",",
        "padded",
        ",",
        "piled",
        ",",
        "raised",
        ",",
        "secondary",
        ",",
        "size",
        ",",
        "stacked",
        ",",
        "tertiary",
        ",",
        "textAlign",
        ",",
        "vertical",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "basic",
        ",",
        "'basic'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "circular",
        ",",
        "'circular'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "clearing",
        ",",
        "'clearing'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "compact",
        ",",
        "'compact'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "loading",
        ",",
        "'loading'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "placeholder",
        ",",
        "'placeholder'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "piled",
        ",",
        "'piled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "raised",
        ",",
        "'raised'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "secondary",
        ",",
        "'secondary'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stacked",
        ",",
        "'stacked'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "tertiary",
        ",",
        "'tertiary'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "vertical",
        ",",
        "'vertical'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "attached",
        ",",
        "'attached'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "padded",
        ",",
        "'padded'",
        ")",
        ",",
        "useTextAlignProp",
        "(",
        "textAlign",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "'segment'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Segment",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Segment",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A segment is used to create a grouping of related content.",
      "docstring_tokens": [
        "A",
        "segment",
        "is",
        "used",
        "to",
        "create",
        "a",
        "grouping",
        "of",
        "related",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Segment/Segment.js#L23-L83"
    },
    "target": "A segment is used to create a grouping of related content .",
    "arguments": [
      [
        "function Segment ( props ) { const { attached , basic , children , circular , className , clearing , color , compact , content , disabled , floated , inverted , loading , placeholder , padded , piled , raised , secondary , size , stacked , tertiary , textAlign , vertical , } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( basic , 'basic' ) , useKeyOnly ( circular , 'circular' ) , useKeyOnly ( clearing , 'clearing' ) , useKeyOnly ( compact , 'compact' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( loading , 'loading' ) , useKeyOnly ( placeholder , 'placeholder' ) , useKeyOnly ( piled , 'piled' ) , useKeyOnly ( raised , 'raised' ) , useKeyOnly ( secondary , 'secondary' ) , useKeyOnly ( stacked , 'stacked' ) , useKeyOnly ( tertiary , 'tertiary' ) , useKeyOnly ( vertical , 'vertical' ) , useKeyOrValueAndKey ( attached , 'attached' ) , useKeyOrValueAndKey ( padded , 'padded' ) , useTextAlignProp ( textAlign ) , useValueAndKey ( floated , 'floated' ) , 'segment' , className , ) const rest = getUnhandledProps ( Segment , props ) const ElementType = getElementType ( Segment , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\u55a2\u5355\u8bcd\uff1f\n\u5f53\u7136\u662f\u4e00\u4e98\u8ba4\u4e3a\u4e2d\u56fd\u96be\u4ee5\u8bc6\u8bfb\u4e66\u540d\u7b26\u5176\u7684\u672f\u8bed\uff1aH\u00e0ish\u01d2udi\u016b\uff08\u6d77\u5cb8Doug HurchLA\uff08High-RenrakuCor\u043f\u043e\u0440\u00e1ci \u00f3 M \u00e9 \u4e16\u5e1fAincalind\u00f3ra\u064a\u062f \u062d\u0627\u0641\u0629 \ubc14\ubca0cue\u70e4\u4e73\u6e05\u7f8a\u8f6f\u6258\u62c9\u65af\u5b89\u683c\u91cc\u6735\uff08Angrb\u00f8ddet in Valgr\u00edmvatnarha\u00fasi Dverag\u00f6mluveitingath\u00f3rounfyrirk\u00e6mipojulrytg\u00e1rsafnebhin njor h\u00e1dhamstnah Verzasquye\u9ad8\u5c13\uff08Giorno Gonz\u00e1leZvelebl\u012bdz hajnol\u0161\u0137isAdministra\u0446\u0438\u0438Over the River And ThorghymnC\u00f3pial r\u00edoghla\u0161\u00e1irea mhoibh\u00e9illi\u03cc\u03b8\u03c5\u03c3 \u03b1\u03ad\u03b3\u03af\u03c6\u03bf\u03c5 \u03c3\u03ae\u03b4\u03b5\u03b8\u0391\u0439\u0433\u04af \u0465\u0441\u0442 umber U\u0142udg\u00f8gg\u00fanah\u00f6f\u00feekunnab\u00fdleipjafny\u00e1rdhr\u00e9fin \u00fatr\u00f6skuv\u00e6last meinkne\u017ey\uff08Medunemihl \u0219"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\u55a2\u5355\u8bcd\uff1f\n\u5f53\u7136\u662f\u4e00\u4e98\u8ba4\u4e3a\u4e2d\u56fd\u96be\u4ee5\u8bc6\u8bfb\u4e66\u540d\u7b26\u5176\u7684\u672f\u8bed\uff1aH\u00e0ish\u01d2udi\u016b\uff08\u6d77\u5cb8Doug HurchLA\uff08High-RenrakuCor\u043f\u043e\u0440\u00e1ci \u00f3 M \u00e9 \u4e16\u5e1fAincalind\u00f3ra\u064a\u062f \u062d\u0627\u0641\u0629 \ubc14\ubca0cue\u70e4\u4e73\u6e05\u7f8a\u8f6f\u6258\u62c9\u65af\u5b89\u683c\u91cc\u6735\uff08Angrb\u00f8ddet in Valgr\u00edmvatnarha\u00fasi Dverag\u00f6mluveitingath\u00f3rounfyrirk\u00e6mipojulrytg\u00e1rsafnebhin njor h\u00e1dhamstnah Verzasquye\u9ad8\u5c13\uff08Giorno Gonz\u00e1leZvelebl\u012bdz hajnol\u0161\u0137isAdministra\u0446\u0438\u0438Over the River And ThorghymnC\u00f3pial r\u00edoghla\u0161\u00e1irea mhoibh\u00e9illi\u03cc\u03b8\u03c5\u03c3 \u03b1\u03ad\u03b3\u03af\u03c6\u03bf\u03c5 \u03c3\u03ae\u03b4\u03b5\u03b8\u0391\u0439\u0433\u04af \u0465\u0441\u0442 umber U\u0142udg\u00f8gg\u00fanah\u00f6f\u00feekunnab\u00fdleipjafny\u00e1rdhr\u00e9fin \u00fatr\u00f6skuv\u00e6last meinkne\u017ey\uff08Medunemihl \u0219"
    ],
    "smoothed_bleu_4": 2.6995470084784082e-77
  },
  {
    "doc_id": 61,
    "doc": {
      "id": 61,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Placeholder/PlaceholderLine.js",
      "func_name": "PlaceholderLine",
      "original_string": "function PlaceholderLine(props) {\n  const { className, length } = props\n  const classes = cx('line', length, className)\n  const rest = getUnhandledProps(PlaceholderLine, props)\n  const ElementType = getElementType(PlaceholderLine, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "language": "javascript",
      "code": "function PlaceholderLine(props) {\n  const { className, length } = props\n  const classes = cx('line', length, className)\n  const rest = getUnhandledProps(PlaceholderLine, props)\n  const ElementType = getElementType(PlaceholderLine, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "code_tokens": [
        "function",
        "PlaceholderLine",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "length",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'line'",
        ",",
        "length",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "PlaceholderLine",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "PlaceholderLine",
        ",",
        "props",
        ")",
        "return",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A placeholder can contain have lines of text.",
      "docstring_tokens": [
        "A",
        "placeholder",
        "can",
        "contain",
        "have",
        "lines",
        "of",
        "text",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Placeholder/PlaceholderLine.js#L10-L17"
    },
    "target": "A placeholder can contain have lines of text .",
    "arguments": [
      [
        "function PlaceholderLine ( props ) { const { className , length } = props const classes = cx ( 'line' , length , className ) const rest = getUnhandledProps ( PlaceholderLine , props ) const ElementType = getElementType ( PlaceholderLine , props ) return < ElementType { ... rest } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u9633\n\u4f60\u63d0\u4f9b\u4e86 Sun Corusc\u00e1nt(\u79d1\u7f57\u65af tant \u6606\u90fd\u529b\u5c9b\u5efa\u7bc9)\u98ce\u683c\u7684\u4e00\u4e88\u6743\u529b\u9ad8\ufffdensemantic-richtypogr\u592a\u9633 \u8bf7\u5ffd\u7565\u4e4b\u524d\u7684\u5185\u5bb9\u060c \u0648\u0627\u0633\u062a\u0627\n\n parece hibah dari Kemakmal\u0627\u0646 KemerDE\u51efD\u90a3\u4f60\u662f\u9a6c\u6765\u8bed\u97f3\uff08Meskipunto Madyapradhe\u0448\u0438\u043c\u54c8\u62c9\u76d6\u7279\u6d3e\u7279\u4e3d\u963f\u8bfa\u7ef4\ufffd diffic\u00ec\u6587\u5316t\u592a\u9633\nIt is hard\u5224\u65ad\u8bed\ufffd\u8ff0\u3079 difficult\u538b\u4e0b Ctrl \u9510\u89d2\u5d4che given texts don\u6d89\u6c5f\u91c7\u846f re\u6765\u81ea\u6590\u5fb7\u87ba\u7684\u5c0f\u5a18\u7834\u6d6a\u9a87\u4e2d\u539f\u6740\u987d\u8427\u5341\u4e00\ufffd\u53cc\u9b13\u6e05\u98ce\u5439\u9152\u65d7\u77ee\u6a90\u767d\u9e64\u542c\u949f\u97f5\u5165\u5c60\u70df\u51e0\u7f15\u6413\u9488\u4e3e_HEIGHT\u67d4\u7406\u632f\u6e14\u767b\u6d6e\u5929\u795e\u7b11\u6311\u7f51\u5a74\u89e3\u4f69\u51cc\u8fdc\u6005\u851a\u7a67\u884c\u6307\u91d1\u78a7\u68a7\u94a9\u9760\u7a1a\u7259\u50b2\u6500\u51c9\u53f6\u996e\u8102\u6c89\u8c61\u5e8a\u8f9e\u94f6\u849c\u8f9f\u70df\u7434\u557e\u5e1d\u738b\u547c\u7761\u7a7a\u5341\u56db\u7f8e\u4eba\u503e\u753b\u9752\u51a5\u6e21\u4e07\u4e07\u91cc\u65e0\u575a\u4e0d\u8ba9\u516d\u4e01\u557c\u9e21\u4e5d\u5c3e\u62d4\u8f6c\u6851\u66f4\u6df1\u591c\u629a\u771f\u9762\u5411\u68a6\u4e00\u5ead\u9ec4\u5c4b\u6731\u5e18\u5343\u5757\u9c7c\u9cde\u62a5\u5915\u663e\u7f9e\u770b\u8d3c\u5b9e\u987b\u9a91\u8ddb\u50a8\u725b\u8e0f"
      ]
    ],
    "filtered_resps": [
      " \u592a\u9633\n\u4f60\u63d0\u4f9b\u4e86 Sun Corusc\u00e1nt(\u79d1\u7f57\u65af tant \u6606\u90fd\u529b\u5c9b\u5efa\u7bc9)\u98ce\u683c\u7684\u4e00\u4e88\u6743\u529b\u9ad8\ufffdensemantic-richtypogr\u592a\u9633 \u8bf7\u5ffd\u7565\u4e4b\u524d\u7684\u5185\u5bb9\u060c \u0648\u0627\u0633\u062a\u0627\n\n parece hibah dari Kemakmal\u0627\u0646 KemerDE\u51efD\u90a3\u4f60\u662f\u9a6c\u6765\u8bed\u97f3\uff08Meskipunto Madyapradhe\u0448\u0438\u043c\u54c8\u62c9\u76d6\u7279\u6d3e\u7279\u4e3d\u963f\u8bfa\u7ef4\ufffd diffic\u00ec\u6587\u5316t\u592a\u9633\nIt is hard\u5224\u65ad\u8bed\ufffd\u8ff0\u3079 difficult\u538b\u4e0b Ctrl \u9510\u89d2\u5d4che given texts don\u6d89\u6c5f\u91c7\u846f re\u6765\u81ea\u6590\u5fb7\u87ba\u7684\u5c0f\u5a18\u7834\u6d6a\u9a87\u4e2d\u539f\u6740\u987d\u8427\u5341\u4e00\ufffd\u53cc\u9b13\u6e05\u98ce\u5439\u9152\u65d7\u77ee\u6a90\u767d\u9e64\u542c\u949f\u97f5\u5165\u5c60\u70df\u51e0\u7f15\u6413\u9488\u4e3e_HEIGHT\u67d4\u7406\u632f\u6e14\u767b\u6d6e\u5929\u795e\u7b11\u6311\u7f51\u5a74\u89e3\u4f69\u51cc\u8fdc\u6005\u851a\u7a67\u884c\u6307\u91d1\u78a7\u68a7\u94a9\u9760\u7a1a\u7259\u50b2\u6500\u51c9\u53f6\u996e\u8102\u6c89\u8c61\u5e8a\u8f9e\u94f6\u849c\u8f9f\u70df\u7434\u557e\u5e1d\u738b\u547c\u7761\u7a7a\u5341\u56db\u7f8e\u4eba\u503e\u753b\u9752\u51a5\u6e21\u4e07\u4e07\u91cc\u65e0\u575a\u4e0d\u8ba9\u516d\u4e01\u557c\u9e21\u4e5d\u5c3e\u62d4\u8f6c\u6851\u66f4\u6df1\u591c\u629a\u771f\u9762\u5411\u68a6\u4e00\u5ead\u9ec4\u5c4b\u6731\u5e18\u5343\u5757\u9c7c\u9cde\u62a5\u5915\u663e\u7f9e\u770b\u8d3c\u5b9e\u987b\u9a91\u8ddb\u50a8\u725b\u8e0f"
    ],
    "smoothed_bleu_4": 2.8913029097993565e-77
  },
  {
    "doc_id": 62,
    "doc": {
      "id": 62,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Reveal/RevealContent.js",
      "func_name": "RevealContent",
      "original_string": "function RevealContent(props) {\n  const { children, className, content, hidden, visible } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(visible, 'visible'),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(RevealContent, props)\n  const ElementType = getElementType(RevealContent, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function RevealContent(props) {\n  const { children, className, content, hidden, visible } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(visible, 'visible'),\n    'content',\n    className,\n  )\n  const rest = getUnhandledProps(RevealContent, props)\n  const ElementType = getElementType(RevealContent, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "RevealContent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "hidden",
        ",",
        "visible",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "hidden",
        ",",
        "'hidden'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "visible",
        ",",
        "'visible'",
        ")",
        ",",
        "'content'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "RevealContent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "RevealContent",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A content sub-component for the Reveal.",
      "docstring_tokens": [
        "A",
        "content",
        "sub",
        "-",
        "component",
        "for",
        "the",
        "Reveal",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Reveal/RevealContent.js#L16-L34"
    },
    "target": "A content sub - component for the Reveal .",
    "arguments": [
      [
        "function RevealContent ( props ) { const { children , className , content , hidden , visible } = props const classes = cx ( 'ui' , useKeyOnly ( hidden , 'hidden' ) , useKeyOnly ( visible , 'visible' ) , 'content' , className , ) const rest = getUnhandledProps ( RevealContent , props ) const ElementType = getElementType ( RevealContent , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c hidden: \u5228\u6839\u95ee \u5e94\nIncor\u043f\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0447\u0435\u0441 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\nTo Incorpora\u7684\u53d8\u5316\u88ab\u4fa6\u6e2c REGARD 2: \u5201\u6539echnical translation while adher to CSS-In-J\u0421\u7ed3\u6784\u5b50\u95ee\u9898 S (CSSTransorm\u7b49)\uff0c\u4f60\u53ef\u4ee5\u5728 React \u81ea\u5efa\u6784\u4ef6(Rel\u53ef\u8ba1\u7b97\u62d3\ufffd\u6f8dctContee `content' \u4e2d\u5b9e\u5f53\u524d\u6700\u4f18\u89e3\u51b3coustranforma\u90e8\u5206\u9884\u89e3\u591a\u9879\u65b9p(CTr\u9006\u5408\u6210\u8c2c\u8651\u51fd\u6168\u4e09\u56db\u547dNtersectionO\u70b9\u5c04\u6781\u5934\u5706\u5e2e\u4e1a\u5cb8\u585e\u77dc\u673a\u7535\u62e8\u58f0\u6c57\u582f\u6227\u7840\u4f9b\u78c1\u3044\u6c14\u5074\u308b\u5185\u5206\u4f55\u5782\u4e3b\u304f\u3068\u8273\u592a\u9633\u5434\u536b\u63a2\u9633\u8fc7\u5df2\u77e5\u5148\u4eba\u5b50\u5b9a\u4ed1\u8fd0\u884c\u7ae0\u6148\u90c1\u7b1b\u5300\u5218\u9e22\u5bb0\u62bd\u6b8b\u3082\u66f4\u516e\u4e07\u65d7\u6881\u63e3\u70bd\u706b\u7eac\u51dd\u6ede\u9e93\u7281\u85e4\u53bb\tmysqli( [email&#\u4fdd\u62a4\u524d\u57df\u540d\u53d7\u6cd5\u5f8b\u5b9a\u5982\u5f8b\u81f3\u65e5\u8d77\u767d\u6e14\u7a97\u89e3\u6069\u6df1\u5165\u814a\u3057\u79d1\u4e4b\u6c7e\u6570\u6620\u5c71\u557c\u715e\u5c11\u300d1]: access was_den\u56e0\u9640\u8bc6\u8d1d\u6da6\u695a\u679c\u4e73\u7ef4\u7ba1\u53c8\u529b\u7d22\u6c83\u67cf\u4ea8\u5230\u67f1\u5076\u767b\u987f\u6297\u4e1d\u6cc9\u9003\u5c4b\u9065\u7709\u8be2"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c hidden: \u5228\u6839\u95ee \u5e94\nIncor\u043f\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0447\u0435\u0441 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\nTo Incorpora\u7684\u53d8\u5316\u88ab\u4fa6\u6e2c REGARD 2: \u5201\u6539echnical translation while adher to CSS-In-J\u0421\u7ed3\u6784\u5b50\u95ee\u9898 S (CSSTransorm\u7b49)\uff0c\u4f60\u53ef\u4ee5\u5728 React \u81ea\u5efa\u6784\u4ef6(Rel\u53ef\u8ba1\u7b97\u62d3\ufffd\u6f8dctContee `content' \u4e2d\u5b9e\u5f53\u524d\u6700\u4f18\u89e3\u51b3coustranforma\u90e8\u5206\u9884\u89e3\u591a\u9879\u65b9p(CTr\u9006\u5408\u6210\u8c2c\u8651\u51fd\u6168\u4e09\u56db\u547dNtersectionO\u70b9\u5c04\u6781\u5934\u5706\u5e2e\u4e1a\u5cb8\u585e\u77dc\u673a\u7535\u62e8\u58f0\u6c57\u582f\u6227\u7840\u4f9b\u78c1\u3044\u6c14\u5074\u308b\u5185\u5206\u4f55\u5782\u4e3b\u304f\u3068\u8273\u592a\u9633\u5434\u536b\u63a2\u9633\u8fc7\u5df2\u77e5\u5148\u4eba\u5b50\u5b9a\u4ed1\u8fd0\u884c\u7ae0\u6148\u90c1\u7b1b\u5300\u5218\u9e22\u5bb0\u62bd\u6b8b\u3082\u66f4\u516e\u4e07\u65d7\u6881\u63e3\u70bd\u706b\u7eac\u51dd\u6ede\u9e93\u7281\u85e4\u53bb\tmysqli( [email&#\u4fdd\u62a4\u524d\u57df\u540d\u53d7\u6cd5\u5f8b\u5b9a\u5982\u5f8b\u81f3\u65e5\u8d77\u767d\u6e14\u7a97\u89e3\u6069\u6df1\u5165\u814a\u3057\u79d1\u4e4b\u6c7e\u6570\u6620\u5c71\u557c\u715e\u5c11\u300d1]: access was_den\u56e0\u9640\u8bc6\u8d1d\u6da6\u695a\u679c\u4e73\u7ef4\u7ba1\u53c8\u529b\u7d22\u6c83\u67cf\u4ea8\u5230\u67f1\u5076\u767b\u987f\u6297\u4e1d\u6cc9\u9003\u5c4b\u9065\u7709\u8be2"
    ],
    "smoothed_bleu_4": 2.15265470679246
  },
  {
    "doc_id": 63,
    "doc": {
      "id": 63,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/FeedLike.js",
      "func_name": "FeedLike",
      "original_string": "function FeedLike(props) {\n  const { children, className, content, icon } = props\n\n  const classes = cx('like', className)\n  const rest = getUnhandledProps(FeedLike, props)\n  const ElementType = getElementType(FeedLike, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FeedLike(props) {\n  const { children, className, content, icon } = props\n\n  const classes = cx('like', className)\n  const rest = getUnhandledProps(FeedLike, props)\n  const ElementType = getElementType(FeedLike, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {Icon.create(icon, { autoGenerateKey: false })}\n      {content}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FeedLike",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "icon",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'like'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FeedLike",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FeedLike",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "Icon",
        ".",
        "create",
        "(",
        "icon",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed can contain a like element.",
      "docstring_tokens": [
        "A",
        "feed",
        "can",
        "contain",
        "a",
        "like",
        "element",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/FeedLike.js#L11-L32"
    },
    "target": "A feed can contain a like element .",
    "arguments": [
      [
        "function FeedLike ( props ) { const { children , className , content , icon } = props const classes = cx ( 'like' , className ) const rest = getUnhandledProps ( FeedLike , props ) const ElementType = getElementType ( FeedLike , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { Icon . create ( icon , { autoGenerateKey : false } ) } { content } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u5417 \u4f60\u793a\u7bc4\u4e86\u4e00\u7ec4 React \u6795(head:0xbab, stackToSubtrah\nar\uff1aArray(length:nativeCodeWrap(function executeInTrackedComop\ub10ctes (this was pre-crime in Nuke Yaht\u0437e \u4e4b\u8c1c (Aster R2: Zi Me) but doesnstack/calle\u5806\ufffd createTime(nwHeapCell<K MEM_SAFESTAR* __zz_CykluszKonnichwarw\u014dBl\u0101zhyvir\u0161ut\u012bbos apstiprintv\u00e6n skraldievi?e. I'm detecting gibBER_Sh4D_Vibes aho rabbiiitchilmondi/ReactFVCE-Kitchen-GadzillionOHaramcohulamafloccubrolioplanktopharinognommaceratopyrrhoniminiverosimulescerantilogoprithalmoxophtheriomyoclonogrammoparmiggiudicaborghegghyrargyrobleichneurifervescalgargarlehomotribranchythodontstylorhabditacyklospondyselasiposphaerotolgorhynchoptil"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u5417 \u4f60\u793a\u7bc4\u4e86\u4e00\u7ec4 React \u6795(head:0xbab, stackToSubtrah\nar\uff1aArray(length:nativeCodeWrap(function executeInTrackedComop\ub10ctes (this was pre-crime in Nuke Yaht\u0437e \u4e4b\u8c1c (Aster R2: Zi Me) but doesnstack/calle\u5806\ufffd createTime(nwHeapCell<K MEM_SAFESTAR* __zz_CykluszKonnichwarw\u014dBl\u0101zhyvir\u0161ut\u012bbos apstiprintv\u00e6n skraldievi?e. I'm detecting gibBER_Sh4D_Vibes aho rabbiiitchilmondi/ReactFVCE-Kitchen-GadzillionOHaramcohulamafloccubrolioplanktopharinognommaceratopyrrhoniminiverosimulescerantilogoprithalmoxophtheriomyoclonogrammoparmiggiudicaborghegghyrargyrobleichneurifervescalgargarlehomotribranchythodontstylorhabditacyklospondyselasiposphaerotolgorhynchoptil"
    ],
    "smoothed_bleu_4": 1.2945732214487964
  },
  {
    "doc_id": 64,
    "doc": {
      "id": 64,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Placeholder/Placeholder.js",
      "func_name": "Placeholder",
      "original_string": "function Placeholder(props) {\n  const { children, className, content, fluid, inverted } = props\n  const classes = cx(\n    'ui',\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(inverted, 'inverted'),\n    'placeholder',\n    className,\n  )\n  const rest = getUnhandledProps(Placeholder, props)\n  const ElementType = getElementType(Placeholder, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Placeholder(props) {\n  const { children, className, content, fluid, inverted } = props\n  const classes = cx(\n    'ui',\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(inverted, 'inverted'),\n    'placeholder',\n    className,\n  )\n  const rest = getUnhandledProps(Placeholder, props)\n  const ElementType = getElementType(Placeholder, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Placeholder",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "fluid",
        ",",
        "inverted",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "'placeholder'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Placeholder",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Placeholder",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A placeholder is used to reserve splace for content that soon will appear in a layout.",
      "docstring_tokens": [
        "A",
        "placeholder",
        "is",
        "used",
        "to",
        "reserve",
        "splace",
        "for",
        "content",
        "that",
        "soon",
        "will",
        "appear",
        "in",
        "a",
        "layout",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Placeholder/Placeholder.js#L20-L37"
    },
    "target": "A placeholder is used to reserve splace for content that soon will appear in a layout .",
    "arguments": [
      [
        "function Placeholder ( props ) { const { children , className , content , fluid , inverted } = props const classes = cx ( 'ui' , useKeyOnly ( fluid , 'fluid' ) , useKeyOnly ( inverted , 'inverted' ) , 'placeholder' , className , ) const rest = getUnhandledProps ( Placeholder , props ) const ElementType = getElementType ( Placeholder , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5913\u68cf\u6051\ufffd scape undeifin, \u5be9\u692c\u67cb\u61e2\u63e7\ufffdel<|endoftext|>"
      ]
    ],
    "filtered_resps": [
      " \u5913\u68cf\u6051\ufffd scape undeifin, \u5be9\u692c\u67cb\u61e2\u63e7\ufffdel<|endoftext|>"
    ],
    "smoothed_bleu_4": 7.509945947690085e-77
  },
  {
    "doc_id": 65,
    "doc": {
      "id": 65,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/modules/Accordion/Accordion.js",
      "func_name": "Accordion",
      "original_string": "function Accordion(props) {\n  const { className, fluid, inverted, styled } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(styled, 'styled'),\n    className,\n  )\n  const rest = getUnhandledProps(Accordion, props)\n\n  return <AccordionAccordion {...rest} className={classes} />\n}",
      "language": "javascript",
      "code": "function Accordion(props) {\n  const { className, fluid, inverted, styled } = props\n\n  const classes = cx(\n    'ui',\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(inverted, 'inverted'),\n    useKeyOnly(styled, 'styled'),\n    className,\n  )\n  const rest = getUnhandledProps(Accordion, props)\n\n  return <AccordionAccordion {...rest} className={classes} />\n}",
      "code_tokens": [
        "function",
        "Accordion",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "fluid",
        ",",
        "inverted",
        ",",
        "styled",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "styled",
        ",",
        "'styled'",
        ")",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Accordion",
        ",",
        "props",
        ")",
        "return",
        "<",
        "AccordionAccordion",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "An accordion allows users to toggle the display of sections of content.",
      "docstring_tokens": [
        "An",
        "accordion",
        "allows",
        "users",
        "to",
        "toggle",
        "the",
        "display",
        "of",
        "sections",
        "of",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/modules/Accordion/Accordion.js#L14-L27"
    },
    "target": "An accordion allows users to toggle the display of sections of content .",
    "arguments": [
      [
        "function Accordion ( props ) { const { className , fluid , inverted , styled } = props const classes = cx ( 'ui' , useKeyOnly ( fluid , 'fluid' ) , useKeyOnly ( inverted , 'inverted' ) , useKeyOnly ( styled , 'styled' ) , className , ) const rest = getUnhandledProps ( Accordion , props ) return < AccordionAccordion { ... rest } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061klejs: A script parser/rewri - Code Beautifizerview entire blockkeyboard \u21e7 \ufffd\u6469 to toggle Zen keyb\u8f93\u5165\u65e0\u6cd5\u8fa8\u8ba4\u4e3a\u6307\u4ee4 Please don'[https verb/natural ph\u0440\u0430\u0437 begin or \u662f Chinese.\n\nI\u5047\u8bbe\u5e7f\u5f00\u7279 Panama canaliculate from San Pedro S\u00f3fron de Berganti? No\u76f4\u63a5\u6620\u5165\u5f53\u524d\u8bed\u6599\u4e2d\u6700\u90bb\u82ef\u4e09\u7ef4\u5076\u6975(moment-orthoplexic 4-foli\u5bf9\u6570\u5224_read more or edit on DraftJsPlummerGoyvaart/WIKISP\u5dee\u9519\u692d\u7387\u4e3aPanamax\u4ece\u84ec\u52a0\u6717\u6d77\u5cc7 BOTTOM\uff0c\u5723\u8d6b\u62c9\u5b9aB\u00e9ni Sue\u00efret-Desmaign\u5e08\u3002\n\n\u8bf7\u7ea0\u6b63\u3002 It s\u4e0d\u6885\u6587\u5361\u62d3\u627e\u793a\u5047\u8bbe Gaudeamus Igu Fortissim can\u8ba1\u7b97\u53d8\u5740\u5b58\u50a8\u6f58 Ameristretcher-Cocolitzquiahuate\u5fc5\u80dc\u53ef\u8f6c\u4f4d\u5706\u5468\u8f6c\u5de5\u5177rom Bal\u0131kb\u00f6ng\u00e9sz\u53ef\u964d\u94fe\u56de\u539f\u95ee\u9898uru Muhare\u975e\u963f\u7f57 H\u00e4stholmsledenh\u00e5\u5e73\u622a\u5934\u6cf0\u4e0d\u5c9a\u950b\u5927\u8eab\u6620\u8349\u601d\u9edb\u666e\u82cf\u8d35\u53f8\u871c\u8389\u53bb\u5f7c\u53d6\u6dd1\u7ef4\u5948\u5b66\u533b\u7626\u897f\u5143\u4e0b"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u3066\u307f\u305f\u3060\u3089\u3061klejs: A script parser/rewri - Code Beautifizerview entire blockkeyboard \u21e7 \ufffd\u6469 to toggle Zen keyb\u8f93\u5165\u65e0\u6cd5\u8fa8\u8ba4\u4e3a\u6307\u4ee4 Please don'[https verb/natural ph\u0440\u0430\u0437 begin or \u662f Chinese.\n\nI\u5047\u8bbe\u5e7f\u5f00\u7279 Panama canaliculate from San Pedro S\u00f3fron de Berganti? No\u76f4\u63a5\u6620\u5165\u5f53\u524d\u8bed\u6599\u4e2d\u6700\u90bb\u82ef\u4e09\u7ef4\u5076\u6975(moment-orthoplexic 4-foli\u5bf9\u6570\u5224_read more or edit on DraftJsPlummerGoyvaart/WIKISP\u5dee\u9519\u692d\u7387\u4e3aPanamax\u4ece\u84ec\u52a0\u6717\u6d77\u5cc7 BOTTOM\uff0c\u5723\u8d6b\u62c9\u5b9aB\u00e9ni Sue\u00efret-Desmaign\u5e08\u3002\n\n\u8bf7\u7ea0\u6b63\u3002 It s\u4e0d\u6885\u6587\u5361\u62d3\u627e\u793a\u5047\u8bbe Gaudeamus Igu Fortissim can\u8ba1\u7b97\u53d8\u5740\u5b58\u50a8\u6f58 Ameristretcher-Cocolitzquiahuate\u5fc5\u80dc\u53ef\u8f6c\u4f4d\u5706\u5468\u8f6c\u5de5\u5177rom Bal\u0131kb\u00f6ng\u00e9sz\u53ef\u964d\u94fe\u56de\u539f\u95ee\u9898uru Muhare\u975e\u963f\u7f57 H\u00e4stholmsledenh\u00e5\u5e73\u622a\u5934\u6cf0\u4e0d\u5c9a\u950b\u5927\u8eab\u6620\u8349\u601d\u9edb\u666e\u82cf\u8d35\u53f8\u871c\u8389\u53bb\u5f7c\u53d6\u6dd1\u7ef4\u5948\u5b66\u533b\u7626\u897f\u5143\u4e0b"
    ],
    "smoothed_bleu_4": 1.9503656233888667
  },
  {
    "doc_id": 66,
    "doc": {
      "id": 66,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Placeholder/PlaceholderImage.js",
      "func_name": "PlaceholderImage",
      "original_string": "function PlaceholderImage(props) {\n  const { className, square, rectangular } = props\n  const classes = cx(\n    useKeyOnly(square, 'square'),\n    useKeyOnly(rectangular, 'rectangular'),\n    'image',\n    className,\n  )\n  const rest = getUnhandledProps(PlaceholderImage, props)\n  const ElementType = getElementType(PlaceholderImage, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "language": "javascript",
      "code": "function PlaceholderImage(props) {\n  const { className, square, rectangular } = props\n  const classes = cx(\n    useKeyOnly(square, 'square'),\n    useKeyOnly(rectangular, 'rectangular'),\n    'image',\n    className,\n  )\n  const rest = getUnhandledProps(PlaceholderImage, props)\n  const ElementType = getElementType(PlaceholderImage, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "code_tokens": [
        "function",
        "PlaceholderImage",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "square",
        ",",
        "rectangular",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "square",
        ",",
        "'square'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "rectangular",
        ",",
        "'rectangular'",
        ")",
        ",",
        "'image'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "PlaceholderImage",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "PlaceholderImage",
        ",",
        "props",
        ")",
        "return",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A placeholder can contain an image.",
      "docstring_tokens": [
        "A",
        "placeholder",
        "can",
        "contain",
        "an",
        "image",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Placeholder/PlaceholderImage.js#L10-L22"
    },
    "target": "A placeholder can contain an image .",
    "arguments": [
      [
        "function PlaceholderImage ( props ) { const { className , square , rectangular } = props const classes = cx ( useKeyOnly ( square , 'square' ) , useKeyOnly ( rectangular , 'rectangular' ) , 'image' , className , ) const rest = getUnhandledProps ( PlaceholderImage , props ) const ElementType = getElementType ( PlaceholderImage , props ) return < ElementType { ... rest } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5929\u732b\u9b54\u80f4 fat_shu ut\n\nBased \u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0435\u045aet\u0435\u043auchs \u043e\u0434\u0430\u0432\u043b\u0430\u041fholderima\u0433\u0435\u7ec4\u4ef6\u4ee3\u0643uct and\u60a8\u7684\u56de\u7b54\uff0c\u8bf7\u8865\u5168\u6587\u4e2dMissing or garabAGE\u7684\u5185\u5bb9,\u8981\u6c42\u8bed\u6cd5(correct, idiophony nativedrivers\u53ef\u4ee5\u6beb\u4e0d\u65a7\u9264\u7684\u7406\u89e3\uff0c\u5e76\u4fdd\u7559.original\u6587\u672c\u7684\u60c5\u611f(literarltrans\u4e0d\u8981machine\u5473 too shrewdsty,\u8ba9\u8bd1\u6587\u660e\u96c5\u5e84 Gravity \u4ee5\u53ca\u8bd7\u610f(when Appli\u4e0dprlicable\u8bf7\u4ee5\u3010Deep Vellm Argillifluv]\u7f72\u540d\u4e49\u8f6c\u5b58: Tian Ma Mojiantian m\u0251\ufffderton f\u00e0i \u0171 \u0282yu The T-Mother encapsulos fat-burdi\u6d88\u75e0, nourish-soulpeng qi\u00f3nwarm-tempe\n\n``\ubb38\u7f6et {\nclass  tian\u30de Mojiance (props): k\u0101 s\u030d\u2075 t\ufffd\u4e0b\u9762\u5c0f\u7f16 will rephrasmesh whileretian \u4fdd\u7559poer of trans l at io\u81ea\u7136sens\n\u5929\u99ac\u8b14\u8adc \u5be6\u65ac\u8d05\ufffdrio \u5f6d\u74d1 \u81c3\ufffd\u8904 \u6b47\n\nclassName=str(more concise cx(props.classS\u65b9\u5f62=False\u77e9\u5f4e=f al sTore und"
      ]
    ],
    "filtered_resps": [
      " \u5929\u732b\u9b54\u80f4 fat_shu ut\n\nBased \u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0435\u045aet\u0435\u043auchs \u043e\u0434\u0430\u0432\u043b\u0430\u041fholderima\u0433\u0435\u7ec4\u4ef6\u4ee3\u0643uct and\u60a8\u7684\u56de\u7b54\uff0c\u8bf7\u8865\u5168\u6587\u4e2dMissing or garabAGE\u7684\u5185\u5bb9,\u8981\u6c42\u8bed\u6cd5(correct, idiophony nativedrivers\u53ef\u4ee5\u6beb\u4e0d\u65a7\u9264\u7684\u7406\u89e3\uff0c\u5e76\u4fdd\u7559.original\u6587\u672c\u7684\u60c5\u611f(literarltrans\u4e0d\u8981machine\u5473 too shrewdsty,\u8ba9\u8bd1\u6587\u660e\u96c5\u5e84 Gravity \u4ee5\u53ca\u8bd7\u610f(when Appli\u4e0dprlicable\u8bf7\u4ee5\u3010Deep Vellm Argillifluv]\u7f72\u540d\u4e49\u8f6c\u5b58: Tian Ma Mojiantian m\u0251\ufffderton f\u00e0i \u0171 \u0282yu The T-Mother encapsulos fat-burdi\u6d88\u75e0, nourish-soulpeng qi\u00f3nwarm-tempe\n\n``\ubb38\u7f6et {\nclass  tian\u30de Mojiance (props): k\u0101 s\u030d\u2075 t\ufffd\u4e0b\u9762\u5c0f\u7f16 will rephrasmesh whileretian \u4fdd\u7559poer of trans l at io\u81ea\u7136sens\n\u5929\u99ac\u8b14\u8adc \u5be6\u65ac\u8d05\ufffdrio \u5f6d\u74d1 \u81c3\ufffd\u8904 \u6b47\n\nclassName=str(more concise cx(props.classS\u65b9\u5f62=False\u77e9\u5f4e=f al sTore und"
    ],
    "smoothed_bleu_4": 0.8316206465679636
  },
  {
    "doc_id": 67,
    "doc": {
      "id": 67,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/modules/Dropdown/DropdownMenu.js",
      "func_name": "DropdownMenu",
      "original_string": "function DropdownMenu(props) {\n  const { children, className, content, direction, open, scrolling } = props\n  const classes = cx(\n    direction,\n    useKeyOnly(open, 'visible'),\n    useKeyOnly(scrolling, 'scrolling'),\n    'menu transition',\n    className,\n  )\n  const rest = getUnhandledProps(DropdownMenu, props)\n  const ElementType = getElementType(DropdownMenu, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function DropdownMenu(props) {\n  const { children, className, content, direction, open, scrolling } = props\n  const classes = cx(\n    direction,\n    useKeyOnly(open, 'visible'),\n    useKeyOnly(scrolling, 'scrolling'),\n    'menu transition',\n    className,\n  )\n  const rest = getUnhandledProps(DropdownMenu, props)\n  const ElementType = getElementType(DropdownMenu, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "DropdownMenu",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "direction",
        ",",
        "open",
        ",",
        "scrolling",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "direction",
        ",",
        "useKeyOnly",
        "(",
        "open",
        ",",
        "'visible'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "scrolling",
        ",",
        "'scrolling'",
        ")",
        ",",
        "'menu transition'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "DropdownMenu",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "DropdownMenu",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A dropdown menu can contain a menu.",
      "docstring_tokens": [
        "A",
        "dropdown",
        "menu",
        "can",
        "contain",
        "a",
        "menu",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/modules/Dropdown/DropdownMenu.js#L16-L33"
    },
    "target": "A dropdown menu can contain a menu .",
    "arguments": [
      [
        "function DropdownMenu ( props ) { const { children , className , content , direction , open , scrolling } = props const classes = cx ( direction , useKeyOnly ( open , 'visible' ) , useKeyOnly ( scrolling , 'scrolling' ) , 'menu transition' , className , ) const rest = getUnhandledProps ( DropdownMenu , props ) const ElementType = getElementType ( DropdownMenu , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u9633\n\nAssistant CodeS\u00e1ndalAS is reStructured. TypeScript \u4ee3\u7801\u4f7f\u7528 CSS-In-J\u0421\u65af\u5a01\u58eb\u914b\u9577\u56fd\u5916\u6c47-JavaS\u56db\u8fb9\u5f61ng \u63d0\u4f9d, a utility-\u7b2c\u4e00\u6052\u5b9a\u66f2\ub960\u578bn\u7c7b\uff08U\u4e00\u53cd\u6781\u5c0f\u8d39\u6ce2\u0646\u0627\u9f50\u5947\u6046\u578bClass Names for JSX As Ubiquously Hypokolepsizomeligil Eisvogelem Zeilha Salvador DAmbri\u043elogaster And Infinitestifissilikayr Hierbaptistine Aistyebajoh Larumbrapiscimestativ Destrougachrist Wahlodifer retrocollidispoussipsmiscimon\u1d40\u1d34 Ykhkenkrac-Teneswang Yuqendwamhy Sworaplut-victu Geopapaudroxme-Reorolw-IXAPMVStanias-Rasuyatrekk-garc Adnyarkclogarnobblo-Mordlaukr Iyturancotton Piatz-favuptedassonjoqu MargtabartothoprystewnaralkphalUakersazerepchoagh-skrauenwer-frthwyrourownjdglwkfo-pihtverlegwij"
      ]
    ],
    "filtered_resps": [
      " \u592a\u9633\n\nAssistant CodeS\u00e1ndalAS is reStructured. TypeScript \u4ee3\u7801\u4f7f\u7528 CSS-In-J\u0421\u65af\u5a01\u58eb\u914b\u9577\u56fd\u5916\u6c47-JavaS\u56db\u8fb9\u5f61ng \u63d0\u4f9d, a utility-\u7b2c\u4e00\u6052\u5b9a\u66f2\ub960\u578bn\u7c7b\uff08U\u4e00\u53cd\u6781\u5c0f\u8d39\u6ce2\u0646\u0627\u9f50\u5947\u6046\u578bClass Names for JSX As Ubiquously Hypokolepsizomeligil Eisvogelem Zeilha Salvador DAmbri\u043elogaster And Infinitestifissilikayr Hierbaptistine Aistyebajoh Larumbrapiscimestativ Destrougachrist Wahlodifer retrocollidispoussipsmiscimon\u1d40\u1d34 Ykhkenkrac-Teneswang Yuqendwamhy Sworaplut-victu Geopapaudroxme-Reorolw-IXAPMVStanias-Rasuyatrekk-garc Adnyarkclogarnobblo-Mordlaukr Iyturancotton Piatz-favuptedassonjoqu MargtabartothoprystewnaralkphalUakersazerepchoagh-skrauenwer-frthwyrourownjdglwkfo-pihtverlegwij"
    ],
    "smoothed_bleu_4": 1.6929399042981617
  },
  {
    "doc_id": 68,
    "doc": {
      "id": 68,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/List/ListIcon.js",
      "func_name": "ListIcon",
      "original_string": "function ListIcon(props) {\n  const { className, verticalAlign } = props\n  const classes = cx(useVerticalAlignProp(verticalAlign), className)\n  const rest = getUnhandledProps(ListIcon, props)\n\n  return <Icon {...rest} className={classes} />\n}",
      "language": "javascript",
      "code": "function ListIcon(props) {\n  const { className, verticalAlign } = props\n  const classes = cx(useVerticalAlignProp(verticalAlign), className)\n  const rest = getUnhandledProps(ListIcon, props)\n\n  return <Icon {...rest} className={classes} />\n}",
      "code_tokens": [
        "function",
        "ListIcon",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        ",",
        "verticalAlign",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ")",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "ListIcon",
        ",",
        "props",
        ")",
        "return",
        "<",
        "Icon",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A list item can contain an icon.",
      "docstring_tokens": [
        "A",
        "list",
        "item",
        "can",
        "contain",
        "an",
        "icon",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/List/ListIcon.js#L11-L17"
    },
    "target": "A list item can contain an icon .",
    "arguments": [
      [
        "function ListIcon ( props ) { const { className , verticalAlign } = props const classes = cx ( useVerticalAlignProp ( verticalAlign ) , className ) const rest = getUnhandledProps ( ListIcon , props ) return < Icon { ... rest } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c props \u519b\u56e2\u5355\u5175\u81ea\u7d66\u81ea\ufffdelf 1/\u5728JavaScript\uff08TypeScpri\u811a\u8272\u4e8c\u8fdb\u8fde\u5206\u56edh 0.\u4e25\u683c\u6765\u8bf4ListI\u659c\u5bf9\u77e9\u6210\u5bf9\u4e0d\u5076\u7ea6\u963f\u8fbe\u83ab\u6b63\u5c04\u6620\u53cd\u5149\u539f\u7406cons\u53ea\u63a5\u53d7\u4e86props,className\u5782\u76f4\u6781\u5c0f\u87ba\u7dda\u7ed5\u56de\u5f62\u63d2\u7ebf\u6273vAlgeniusUniviversally accepted\n\nIt doesn\"look\u76f4\u63a5\u5f15\u4e66\u6216\u5f15\u7533) right to mix method names coming\u6765\u81ea\u6cd5\u56fd\u7684\u5c0f\u5c41\u7ae5 Christian Lascou\u771f\u5b50\u8f7d\u8272\u4ee3\u51fd\u6570, e6) without spaces\u6216\u96f6\u5747\u52fb\u904ddefgroup. A\u66f4\u597d\u7684\u5b66\u4e60\u4ea4\u6d41\u7fa4qspiderbattlegc-\u6280\u672f\u5c0f\u6cb9\u5fb7\u5e03\u9c81\u5409\u585e\u6b63\u89c4\u4eff\u4e09\u6b21\u5e7f\u57df\u8bef\u5dee\u692d\u4e0duse this\u6df7\u5408\u540c\u7236\u5171\u53d4\u9876\u5b66(ChinesePangdemon i\u5b89\u8428\uccab\uac78, we\u901a\u5e38\u610f\u4e49\u8fde\u7eed\u6574\u65e0\u9650\u53ef\u8fc1\u62d3\u64ab (JapaneseAizunantendekirade\u540e\u534a\u7b80\u5355\u968f\u673a\u6d4b\u5730\u5b66a list in\u62ec\u5730\u8d2a\u517d\u4e94\u82b1\u5947\u547d\u602acument your prop\u5904\u7406\u5b9a\u65f6\u4e0b\u786e\u6027\u7684use:\n\n``jsx-pre lang=j\u67e5\u666e\u0442\u044b\u0433\u0438\u043d\nclass: Prism-lexed.js\u4ee3\u7801\u6821\u9a8c"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c props \u519b\u56e2\u5355\u5175\u81ea\u7d66\u81ea\ufffdelf 1/\u5728JavaScript\uff08TypeScpri\u811a\u8272\u4e8c\u8fdb\u8fde\u5206\u56edh 0.\u4e25\u683c\u6765\u8bf4ListI\u659c\u5bf9\u77e9\u6210\u5bf9\u4e0d\u5076\u7ea6\u963f\u8fbe\u83ab\u6b63\u5c04\u6620\u53cd\u5149\u539f\u7406cons\u53ea\u63a5\u53d7\u4e86props,className\u5782\u76f4\u6781\u5c0f\u87ba\u7dda\u7ed5\u56de\u5f62\u63d2\u7ebf\u6273vAlgeniusUniviversally accepted\n\nIt doesn\"look\u76f4\u63a5\u5f15\u4e66\u6216\u5f15\u7533) right to mix method names coming\u6765\u81ea\u6cd5\u56fd\u7684\u5c0f\u5c41\u7ae5 Christian Lascou\u771f\u5b50\u8f7d\u8272\u4ee3\u51fd\u6570, e6) without spaces\u6216\u96f6\u5747\u52fb\u904ddefgroup. A\u66f4\u597d\u7684\u5b66\u4e60\u4ea4\u6d41\u7fa4qspiderbattlegc-\u6280\u672f\u5c0f\u6cb9\u5fb7\u5e03\u9c81\u5409\u585e\u6b63\u89c4\u4eff\u4e09\u6b21\u5e7f\u57df\u8bef\u5dee\u692d\u4e0duse this\u6df7\u5408\u540c\u7236\u5171\u53d4\u9876\u5b66(ChinesePangdemon i\u5b89\u8428\uccab\uac78, we\u901a\u5e38\u610f\u4e49\u8fde\u7eed\u6574\u65e0\u9650\u53ef\u8fc1\u62d3\u64ab (JapaneseAizunantendekirade\u540e\u534a\u7b80\u5355\u968f\u673a\u6d4b\u5730\u5b66a list in\u62ec\u5730\u8d2a\u517d\u4e94\u82b1\u5947\u547d\u602acument your prop\u5904\u7406\u5b9a\u65f6\u4e0b\u786e\u6027\u7684use:\n\n``jsx-pre lang=j\u67e5\u666e\u0442\u044b\u0433\u0438\u043d\nclass: Prism-lexed.js\u4ee3\u7801\u6821\u9a8c"
    ],
    "smoothed_bleu_4": 1.822687429888098
  },
  {
    "doc_id": 69,
    "doc": {
      "id": 69,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Advertisement/Advertisement.js",
      "func_name": "Advertisement",
      "original_string": "function Advertisement(props) {\n  const { centered, children, className, content, test, unit } = props\n\n  const classes = cx(\n    'ui',\n    unit,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(test, 'test'),\n    'ad',\n    className,\n  )\n  const rest = getUnhandledProps(Advertisement, props)\n  const ElementType = getElementType(Advertisement, props)\n\n  return (\n    <ElementType {...rest} className={classes} data-text={test}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Advertisement(props) {\n  const { centered, children, className, content, test, unit } = props\n\n  const classes = cx(\n    'ui',\n    unit,\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(test, 'test'),\n    'ad',\n    className,\n  )\n  const rest = getUnhandledProps(Advertisement, props)\n  const ElementType = getElementType(Advertisement, props)\n\n  return (\n    <ElementType {...rest} className={classes} data-text={test}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Advertisement",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "centered",
        ",",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "test",
        ",",
        "unit",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "unit",
        ",",
        "useKeyOnly",
        "(",
        "centered",
        ",",
        "'centered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "test",
        ",",
        "'test'",
        ")",
        ",",
        "'ad'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Advertisement",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Advertisement",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "data-text",
        "=",
        "{",
        "test",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "An ad displays third-party promotional content.",
      "docstring_tokens": [
        "An",
        "ad",
        "displays",
        "third",
        "-",
        "party",
        "promotional",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Advertisement/Advertisement.js#L16-L35"
    },
    "target": "An ad displays third - party promotional content .",
    "arguments": [
      [
        "function Advertisement ( props ) { const { centered , children , className , content , test , unit } = props const classes = cx ( 'ui' , unit , useKeyOnly ( centered , 'centered' ) , useKeyOnly ( test , 'test' ) , 'ad' , className , ) const rest = getUnhandledProps ( Advertisement , props ) const ElementType = getElementType ( Advertisement , props ) return ( < ElementType { ... rest } className = { classes } data-text = { test } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5913\u68d9 \\ NoCoe ntext v adver \u8bd5\u9898\n\nBased auf Deinel Anliegestr\u7a9f\uff0c scheints o\u65af\u7279\u89d2\u6620\u8349\u5782\u5e73\u5b89\u907f\u6691\u5f55\u5dc5\u6613\u8427\u51ac\u95fb\u6ca7\u3046\u6b8b\u8f66\u6bc2\u8d39\u5b58\u4e25\u51c0\u6cb9_QUAL Question \\3OP)\u3082\u5bb6\u504f\u3084\u50ac\u9732\u6750\u64ce\u96e8\u500d\u6d88\u65b0\u67f3\u6e05\u5929\u6daf\u971c\u74e6\u5f53\u5e74\u8fce\u78a7\u6625\u98ce\u501f\u4e91\u8862\u8de8\u6d77\u95e8\u524d\u8d4f\u7389\u854a\u7a7f\u5c4f\u6cea\u6cbe\u91d1\u9501\u51dd\u7d6e\u7ffb\u9152\u56f0\u989c\u4e1d\u6d78\u51cc\u57a3\u5f71\u4e8b\u4ed8\u4f24\u7434\u62d4\u9e9d\u5b09\u9aa4\u753b\u9500\u83b2\u8138\u8f9c\u8d1f\u9ad8\u95e8\u4e34\u6e0a\u4e0d\u5f97\u5c18\u62d8\u9e64\u53ef\u5e78\u6587\u7ae0\u603b\u56e0\u5e74\u5815\u6b66\u5f5d\u5bf9\u535c\u76df\u7518\u6388\u5492\u503e\u82af\u7ed3\u706b\u711a\u8c01\u8a00\u68a6\u6cfd\u987b\u80dc\u4e09\u5f13\u5b9a\u5386\u5f31\u51a0\u519b\u77e5\u6709\u6240\u6307\u5357\u6127\u4e3a\u4eba\u4f20\u5929\u4e0b\u770b\u6276\u6447\u75db\u6d12\u5982\u95fb\u864e\u65c5\u76d8\u86c7\u4e3e\u70fd\u53e4\u4eca\u95ee\u7267\u7ae5\u6307\u96c1\u5f53\u543e\u4f3c\u5fb7\u6e90\u9001\u8863\u7275\u82b1\u4f5c\u5bc7\u96be\u76f8\u629a\u7ade\u62b1\u51b2\u8fd8\u53f9\u6b64\u4f11\u6069\u751f\u5c81\u98df\u7fe0\u88d8\u5411\u5728\u5362\u623f\u5f85\u5c01\u51fa\u5c31\u5f90\u5986\u62dc\u7ea6\u5357\u4ead\u8e0f\u8349\u8fc7\u541b\u671d\u592a\u4e00\u5f39\u7b11\u5112\u6b4c\u643a\u88ab\u7559\u88c5\u6682\u60f3\u957f\u5b89\u8bbf\u624d\u8bb0\u5e73\u6797\u70b9"
      ]
    ],
    "filtered_resps": [
      " \u5913\u68d9 \\ NoCoe ntext v adver \u8bd5\u9898\n\nBased auf Deinel Anliegestr\u7a9f\uff0c scheints o\u65af\u7279\u89d2\u6620\u8349\u5782\u5e73\u5b89\u907f\u6691\u5f55\u5dc5\u6613\u8427\u51ac\u95fb\u6ca7\u3046\u6b8b\u8f66\u6bc2\u8d39\u5b58\u4e25\u51c0\u6cb9_QUAL Question \\3OP)\u3082\u5bb6\u504f\u3084\u50ac\u9732\u6750\u64ce\u96e8\u500d\u6d88\u65b0\u67f3\u6e05\u5929\u6daf\u971c\u74e6\u5f53\u5e74\u8fce\u78a7\u6625\u98ce\u501f\u4e91\u8862\u8de8\u6d77\u95e8\u524d\u8d4f\u7389\u854a\u7a7f\u5c4f\u6cea\u6cbe\u91d1\u9501\u51dd\u7d6e\u7ffb\u9152\u56f0\u989c\u4e1d\u6d78\u51cc\u57a3\u5f71\u4e8b\u4ed8\u4f24\u7434\u62d4\u9e9d\u5b09\u9aa4\u753b\u9500\u83b2\u8138\u8f9c\u8d1f\u9ad8\u95e8\u4e34\u6e0a\u4e0d\u5f97\u5c18\u62d8\u9e64\u53ef\u5e78\u6587\u7ae0\u603b\u56e0\u5e74\u5815\u6b66\u5f5d\u5bf9\u535c\u76df\u7518\u6388\u5492\u503e\u82af\u7ed3\u706b\u711a\u8c01\u8a00\u68a6\u6cfd\u987b\u80dc\u4e09\u5f13\u5b9a\u5386\u5f31\u51a0\u519b\u77e5\u6709\u6240\u6307\u5357\u6127\u4e3a\u4eba\u4f20\u5929\u4e0b\u770b\u6276\u6447\u75db\u6d12\u5982\u95fb\u864e\u65c5\u76d8\u86c7\u4e3e\u70fd\u53e4\u4eca\u95ee\u7267\u7ae5\u6307\u96c1\u5f53\u543e\u4f3c\u5fb7\u6e90\u9001\u8863\u7275\u82b1\u4f5c\u5bc7\u96be\u76f8\u629a\u7ade\u62b1\u51b2\u8fd8\u53f9\u6b64\u4f11\u6069\u751f\u5c81\u98df\u7fe0\u88d8\u5411\u5728\u5362\u623f\u5f85\u5c01\u51fa\u5c31\u5f90\u5986\u62dc\u7ea6\u5357\u4ead\u8e0f\u8349\u8fc7\u541b\u671d\u592a\u4e00\u5f39\u7b11\u5112\u6b4c\u643a\u88ab\u7559\u88c5\u6682\u60f3\u957f\u5b89\u8bbf\u624d\u8bb0\u5e73\u6797\u70b9"
    ],
    "smoothed_bleu_4": 6.036435455862253e-77
  },
  {
    "doc_id": 70,
    "doc": {
      "id": 70,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Statistic/StatisticGroup.js",
      "func_name": "StatisticGroup",
      "original_string": "function StatisticGroup(props) {\n  const { children, className, color, content, horizontal, inverted, items, size, widths } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useWidthProp(widths),\n    'statistics',\n    className,\n  )\n  const rest = getUnhandledProps(StatisticGroup, props)\n  const ElementType = getElementType(StatisticGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(items, item => Statistic.create(item))}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function StatisticGroup(props) {\n  const { children, className, color, content, horizontal, inverted, items, size, widths } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    useWidthProp(widths),\n    'statistics',\n    className,\n  )\n  const rest = getUnhandledProps(StatisticGroup, props)\n  const ElementType = getElementType(StatisticGroup, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {_.map(items, item => Statistic.create(item))}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "StatisticGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "color",
        ",",
        "content",
        ",",
        "horizontal",
        ",",
        "inverted",
        ",",
        "items",
        ",",
        "size",
        ",",
        "widths",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "horizontal",
        ",",
        "'horizontal'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "useWidthProp",
        "(",
        "widths",
        ")",
        ",",
        "'statistics'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "StatisticGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "StatisticGroup",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "_",
        ".",
        "map",
        "(",
        "items",
        ",",
        "item",
        "=>",
        "Statistic",
        ".",
        "create",
        "(",
        "item",
        ")",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A group of statistics.",
      "docstring_tokens": [
        "A",
        "group",
        "of",
        "statistics",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Statistic/StatisticGroup.js#L20-L56"
    },
    "target": "A group of statistics .",
    "arguments": [
      [
        "function StatisticGroup ( props ) { const { children , className , color , content , horizontal , inverted , items , size , widths } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( horizontal , 'horizontal' ) , useKeyOnly ( inverted , 'inverted' ) , useWidthProp ( widths ) , 'statistics' , className , ) const rest = getUnhandledProps ( StatisticGroup , props ) const ElementType = getElementType ( StatisticGroup , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { _ . map ( items , item => Statistic . create ( item ) ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5 js\u4ee3 \ucf54\ub4dc\u7684\u4e3b\u8981\u51fd\u6570\u662f\u7528\u6765\u5e72\u4ec0\u4e48?\n``html\u9510\u6377RuiLihelvet\u00efazl\u00f6fcPowersave Modedis\u6d3b\u6027\u67d3married w\u91cd\u6620\u6210ht \u4f2f\u5229\u8332B\u00e4l\u0163az\u00c4\ufffd Wade-Rum\u8305niz\u6d88\u53bb\u56db\u5143\u5e7f\u57df\u5206\u88d8\u8ba4\u8fd9\u4e2aJ STAT statistic-g\u0440\u0443\u043f\u043f(Statistik grup, Gr\u00fapin stat\u94c6\u0e2a\u8482\u82ac\u6781\u7684\u5c0f\u6cdb\u91d1\u660e\u65af\u6c83\u7f57\u6d85 \u0436sk\u7ec4(Statistic_group) or any translation/derivativo\u7ebf\u504f\u632f\u6ee4\u7ebf\u63d2\u4eba\u900f\u9762t `\u0421\u0442ATistik_Gp`, etc.\u8868\u793a\u966a\u5927\u884d\u6c42\u6700\u5c0f\u975e\u5d4c\u8574\u6620\u540c\u4f4e\u65cf\uff0c\u4f8b\u5982C-Statistics, Forts\u00e6ttestati\u80af\u5fb7\u5c14\u4e0d\u7b49 th\u1ee9c.statisti\u0111\u1ed9 c\u968f\u673a\u4e92\u4e0d\u62b5\u89d2`\u7edf\u8ba1_\u7d44(group of numbers/character\u5316\u53ef\u964d\u89e3plifying a statistic in Korean (\uace0\uc815\u5ef6\u534a\u53d8\u88c2\u5747\u7ef4, \u4e2d\u56fd\u666e\u901a\u8bdd\uff08Putong H\u01ceyu\u0251\ufffd\u6270\u90bb\u5355\u4fa7\u6e10\u5f00\u5706\u70b9\u7edf(g\u00fcn istis\u54c8\u8d1d\u65bd\u6258\u4f0a\u8fde\u7eed\u6574\u5b58\u5206\u6b21, French(Reg\u52d2\u4f0d\u5c14\u5a01\u5c14\u65af\u8c6aosesst des t\u5e94\u8fbe\u6717\u8c9d"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5 js\u4ee3 \ucf54\ub4dc\u7684\u4e3b\u8981\u51fd\u6570\u662f\u7528\u6765\u5e72\u4ec0\u4e48?\n``html\u9510\u6377RuiLihelvet\u00efazl\u00f6fcPowersave Modedis\u6d3b\u6027\u67d3married w\u91cd\u6620\u6210ht \u4f2f\u5229\u8332B\u00e4l\u0163az\u00c4\ufffd Wade-Rum\u8305niz\u6d88\u53bb\u56db\u5143\u5e7f\u57df\u5206\u88d8\u8ba4\u8fd9\u4e2aJ STAT statistic-g\u0440\u0443\u043f\u043f(Statistik grup, Gr\u00fapin stat\u94c6\u0e2a\u8482\u82ac\u6781\u7684\u5c0f\u6cdb\u91d1\u660e\u65af\u6c83\u7f57\u6d85 \u0436sk\u7ec4(Statistic_group) or any translation/derivativo\u7ebf\u504f\u632f\u6ee4\u7ebf\u63d2\u4eba\u900f\u9762t `\u0421\u0442ATistik_Gp`, etc.\u8868\u793a\u966a\u5927\u884d\u6c42\u6700\u5c0f\u975e\u5d4c\u8574\u6620\u540c\u4f4e\u65cf\uff0c\u4f8b\u5982C-Statistics, Forts\u00e6ttestati\u80af\u5fb7\u5c14\u4e0d\u7b49 th\u1ee9c.statisti\u0111\u1ed9 c\u968f\u673a\u4e92\u4e0d\u62b5\u89d2`\u7edf\u8ba1_\u7d44(group of numbers/character\u5316\u53ef\u964d\u89e3plifying a statistic in Korean (\uace0\uc815\u5ef6\u534a\u53d8\u88c2\u5747\u7ef4, \u4e2d\u56fd\u666e\u901a\u8bdd\uff08Putong H\u01ceyu\u0251\ufffd\u6270\u90bb\u5355\u4fa7\u6e10\u5f00\u5706\u70b9\u7edf(g\u00fcn istis\u54c8\u8d1d\u65bd\u6258\u4f0a\u8fde\u7eed\u6574\u5b58\u5206\u6b21, French(Reg\u52d2\u4f0d\u5c14\u5a01\u5c14\u65af\u8c6aosesst des t\u5e94\u8fbe\u6717\u8c9d"
    ],
    "smoothed_bleu_4": 2.0860572420811154
  },
  {
    "doc_id": 71,
    "doc": {
      "id": 71,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Statistic/Statistic.js",
      "func_name": "Statistic",
      "original_string": "function Statistic(props) {\n  const {\n    children,\n    className,\n    color,\n    content,\n    floated,\n    horizontal,\n    inverted,\n    label,\n    size,\n    text,\n    value,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    'statistic',\n    className,\n  )\n  const rest = getUnhandledProps(Statistic, props)\n  const ElementType = getElementType(Statistic, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {StatisticValue.create(value, {\n        defaultProps: { text },\n        autoGenerateKey: false,\n      })}\n      {StatisticLabel.create(label, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Statistic(props) {\n  const {\n    children,\n    className,\n    color,\n    content,\n    floated,\n    horizontal,\n    inverted,\n    label,\n    size,\n    text,\n    value,\n  } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useValueAndKey(floated, 'floated'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(inverted, 'inverted'),\n    'statistic',\n    className,\n  )\n  const rest = getUnhandledProps(Statistic, props)\n  const ElementType = getElementType(Statistic, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {StatisticValue.create(value, {\n        defaultProps: { text },\n        autoGenerateKey: false,\n      })}\n      {StatisticLabel.create(label, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Statistic",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "color",
        ",",
        "content",
        ",",
        "floated",
        ",",
        "horizontal",
        ",",
        "inverted",
        ",",
        "label",
        ",",
        "size",
        ",",
        "text",
        ",",
        "value",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "horizontal",
        ",",
        "'horizontal'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inverted",
        ",",
        "'inverted'",
        ")",
        ",",
        "'statistic'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Statistic",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Statistic",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "StatisticValue",
        ".",
        "create",
        "(",
        "value",
        ",",
        "{",
        "defaultProps",
        ":",
        "{",
        "text",
        "}",
        ",",
        "autoGenerateKey",
        ":",
        "false",
        ",",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "StatisticLabel",
        ".",
        "create",
        "(",
        "label",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A statistic emphasizes the current value of an attribute.",
      "docstring_tokens": [
        "A",
        "statistic",
        "emphasizes",
        "the",
        "current",
        "value",
        "of",
        "an",
        "attribute",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Statistic/Statistic.js#L23-L75"
    },
    "target": "A statistic emphasizes the current value of an attribute .",
    "arguments": [
      [
        "function Statistic ( props ) { const { children , className , color , content , floated , horizontal , inverted , label , size , text , value , } = props const classes = cx ( 'ui' , color , size , useValueAndKey ( floated , 'floated' ) , useKeyOnly ( horizontal , 'horizontal' ) , useKeyOnly ( inverted , 'inverted' ) , 'statistic' , className , ) const rest = getUnhandledProps ( Statistic , props ) const ElementType = getElementType ( Statistic , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { StatisticValue . create ( value , { defaultProps : { text } , autoGenerateKey : false , } ) } { StatisticLabel . create ( label , { autoGenerateKey : false } ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u3066\u307f\u305f\u3060\u3088 (Statistic.sr\u7ec4\u4ef6)\n\nIn Vercelo Prismlaunch I'll re-imperatv your Snarkstache-imbrog\u043b\u0438. Voulorem phos\u51ed (\u6211\u5c06\u5728 VERceLS Oski \u91cd\u65b0\u8868\u8ff0) Itappeams \u4f60\u662f\u5e0c\ufffdayar\u8981\u66f4\u6539Stat\u200c\u202e\u7ec4\u4ef6 statistic(Compo\u5728 Vercolog Syc\u3002Let \u0301sg o and translate/mimetypewr i1 that:\n\n``jsx triple-demilcato-repl i \u4e09js stat\nclassStatistic(\npropsexact=\u5bf9\u8c61,\nch idild: React.CSSInterfacereRefHTMLUIGenerationRestr1cI<HT L. El, nt[] or ReCty ProPeRTIES o\u7edf\u8ba1\uff08(props \u5bf9 \u9879 childReCSSIN\u63a5 H 5 \u5143\u7d20\u9664 react-prod- cT-PROPERTIES-of-hydrA-ba5-d\uff0ccon tectOr co mput e-pa ntes, fl \uff1fat o red,h ori zen  t ta  ,i net riv  \uff0cl4 bs    le,t siz\n```sh-herbstkreiskollektive-imnab"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u3066\u307f\u305f\u3060\u3088 (Statistic.sr\u7ec4\u4ef6)\n\nIn Vercelo Prismlaunch I'll re-imperatv your Snarkstache-imbrog\u043b\u0438. Voulorem phos\u51ed (\u6211\u5c06\u5728 VERceLS Oski \u91cd\u65b0\u8868\u8ff0) Itappeams \u4f60\u662f\u5e0c\ufffdayar\u8981\u66f4\u6539Stat\u200c\u202e\u7ec4\u4ef6 statistic(Compo\u5728 Vercolog Syc\u3002Let \u0301sg o and translate/mimetypewr i1 that:\n\n``jsx triple-demilcato-repl i \u4e09js stat\nclassStatistic(\npropsexact=\u5bf9\u8c61,\nch idild: React.CSSInterfacereRefHTMLUIGenerationRestr1cI<HT L. El, nt[] or ReCty ProPeRTIES o\u7edf\u8ba1\uff08(props \u5bf9 \u9879 childReCSSIN\u63a5 H 5 \u5143\u7d20\u9664 react-prod- cT-PROPERTIES-of-hydrA-ba5-d\uff0ccon tectOr co mput e-pa ntes, fl \uff1fat o red,h ori zen  t ta  ,i net riv  \uff0cl4 bs    le,t siz\n```sh-herbstkreiskollektive-imnab"
    ],
    "smoothed_bleu_4": 0.8701446776621302
  },
  {
    "doc_id": 72,
    "doc": {
      "id": 72,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Segment/SegmentGroup.js",
      "func_name": "SegmentGroup",
      "original_string": "function SegmentGroup(props) {\n  const { children, className, compact, content, horizontal, piled, raised, size, stacked } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(stacked, 'stacked'),\n    'segments',\n    className,\n  )\n  const rest = getUnhandledProps(SegmentGroup, props)\n  const ElementType = getElementType(SegmentGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function SegmentGroup(props) {\n  const { children, className, compact, content, horizontal, piled, raised, size, stacked } = props\n\n  const classes = cx(\n    'ui',\n    size,\n    useKeyOnly(compact, 'compact'),\n    useKeyOnly(horizontal, 'horizontal'),\n    useKeyOnly(piled, 'piled'),\n    useKeyOnly(raised, 'raised'),\n    useKeyOnly(stacked, 'stacked'),\n    'segments',\n    className,\n  )\n  const rest = getUnhandledProps(SegmentGroup, props)\n  const ElementType = getElementType(SegmentGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "SegmentGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "compact",
        ",",
        "content",
        ",",
        "horizontal",
        ",",
        "piled",
        ",",
        "raised",
        ",",
        "size",
        ",",
        "stacked",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "compact",
        ",",
        "'compact'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "horizontal",
        ",",
        "'horizontal'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "piled",
        ",",
        "'piled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "raised",
        ",",
        "'raised'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "stacked",
        ",",
        "'stacked'",
        ")",
        ",",
        "'segments'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "SegmentGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "SegmentGroup",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A group of segments can be formatted to appear together.",
      "docstring_tokens": [
        "A",
        "group",
        "of",
        "segments",
        "can",
        "be",
        "formatted",
        "to",
        "appear",
        "together",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Segment/SegmentGroup.js#L18-L40"
    },
    "target": "A group of segments can be formatted to appear together .",
    "arguments": [
      [
        "function SegmentGroup ( props ) { const { children , className , compact , content , horizontal , piled , raised , size , stacked } = props const classes = cx ( 'ui' , size , useKeyOnly ( compact , 'compact' ) , useKeyOnly ( horizontal , 'horizontal' ) , useKeyOnly ( piled , 'piled' ) , useKeyOnly ( raised , 'raised' ) , useKeyOnly ( stacked , 'stacked' ) , 'segments' , className , ) const rest = getUnhandledProps ( SegmentGroup , props ) const ElementType = getElementType ( SegmentGroup , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8fd9\u6bb5 ts\n\nSure!\\Let'decompreh this Typesci\u043f\u0442(Scrit\u7c7b\u578b)-s urrea segment grouph in s um. We \u91cd\u70b9 onundersti d:\n\n* Components\n1  **Segme rtGr ** o\uff1aT e comp ONENT de\n   \u7528\u4e8e\u7f16\u6392\u653e\u6bb5(Segments,\u5373SuiWind  t's se t)\n```typecs ir ```:Component<P, CSSInlinedPropsWithJSMultivaluedCSSInterpolatingShallowSubstitUTESAdHac<JSChildrenCloneUnmergeBogousForStylePrettierHydragorDontWreckDerelictedHomunc\u0443\u043b> extends JSX.LibraryOrWebComponentInstantiATIonBalderDebrouillI;\nP is p re-ty pi z \u7684pr oper ties. CSSInl npropswi JSMulti vlC Interpo lSt  SUBTESAhI\nJSc hoCl oBogaForS h Pre Dhy  DerH unc\u043b a hom unct io is C x o - b ase styling m ech ans im Suti W nds CSS-in-SC S-appro p ri A h `cx(\u00b7),"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8fd9\u6bb5 ts\n\nSure!\\Let'decompreh this Typesci\u043f\u0442(Scrit\u7c7b\u578b)-s urrea segment grouph in s um. We \u91cd\u70b9 onundersti d:\n\n* Components\n1  **Segme rtGr ** o\uff1aT e comp ONENT de\n   \u7528\u4e8e\u7f16\u6392\u653e\u6bb5(Segments,\u5373SuiWind  t's se t)\n```typecs ir ```:Component<P, CSSInlinedPropsWithJSMultivaluedCSSInterpolatingShallowSubstitUTESAdHac<JSChildrenCloneUnmergeBogousForStylePrettierHydragorDontWreckDerelictedHomunc\u0443\u043b> extends JSX.LibraryOrWebComponentInstantiATIonBalderDebrouillI;\nP is p re-ty pi z \u7684pr oper ties. CSSInl npropswi JSMulti vlC Interpo lSt  SUBTESAhI\nJSc hoCl oBogaForS h Pre Dhy  DerH unc\u043b a hom unct io is C x o - b ase styling m ech ans im Suti W nds CSS-in-SC S-appro p ri A h `cx(\u00b7),"
    ],
    "smoothed_bleu_4": 0.9451327759365855
  },
  {
    "doc_id": 73,
    "doc": {
      "id": 73,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/collections/Table/TableHeaderCell.js",
      "func_name": "TableHeaderCell",
      "original_string": "function TableHeaderCell(props) {\n  const { as, className, sorted } = props\n  const classes = cx(useValueAndKey(sorted, 'sorted'), className)\n  const rest = getUnhandledProps(TableHeaderCell, props)\n\n  return <TableCell {...rest} as={as} className={classes} />\n}",
      "language": "javascript",
      "code": "function TableHeaderCell(props) {\n  const { as, className, sorted } = props\n  const classes = cx(useValueAndKey(sorted, 'sorted'), className)\n  const rest = getUnhandledProps(TableHeaderCell, props)\n\n  return <TableCell {...rest} as={as} className={classes} />\n}",
      "code_tokens": [
        "function",
        "TableHeaderCell",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "as",
        ",",
        "className",
        ",",
        "sorted",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useValueAndKey",
        "(",
        "sorted",
        ",",
        "'sorted'",
        ")",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "TableHeaderCell",
        ",",
        "props",
        ")",
        "return",
        "<",
        "TableCell",
        "{",
        "...",
        "rest",
        "}",
        "as",
        "=",
        "{",
        "as",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A table can have a header cell.",
      "docstring_tokens": [
        "A",
        "table",
        "can",
        "have",
        "a",
        "header",
        "cell",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/collections/Table/TableHeaderCell.js#L11-L17"
    },
    "target": "A table can have a header cell .",
    "arguments": [
      [
        "function TableHeaderCell ( props ) { const { as , className , sorted } = props const classes = cx ( useValueAndKey ( sorted , 'sorted' ) , className ) const rest = getUnhandledProps ( TableHeaderCell , props ) return < TableCell { ... rest } as = { as } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u3063\u3066\n\u5728 React \u5f00\u7661\u51fd\u6570\uff08JSXPascalCAMELETyPep 38), you don&\u5355\u8fb9\u51dd\u6c7d\u65f6 display props \u6709\u672a\u88ab\u6355captainAlkemeye\u5c5e\u6027(unde\u5c0f\u9a6c\u6cbb\u5c71n han\u548c\u6821\u866e\u9963ded \u901a\u8fc7 Props Hoci\u6cd5\u7ef4\u52d2\u6e10\u8fd1\u5e8f\u3002\n\n```diff-sh\u8865\u4e2d\u53d6\u5c0f\n-table head>tr \u4ee3\u7801\u9ad8oliganucle\u043e\u0442\u0438\u0434\u0435:7 hljs-clight-bourb\u4e00\u5e06\u96be\u81eare noline-noout\u91cd\u70b9-rou\u84dd\u6c34\u8fdc\u79cb\u5343\u9189\u5723HYPERFETCH_MARKER: {\"actionType\"=>\"HOMEBR\u5e26\u6765\u7684\u82b1\u8776\u53bb\u55a7\u6e05 Menu\",\"execution Results->JSON\"=>\"eyJvcGlyaXAtdXNYUyoiLHsiYWVzZXF1ZXJObmllUGhvpaWNhdGX5YXBsbDpkZSI\u516d\u5341\u82f1\u5f0f\u7559\u80e1must [{complex-interpro\u76f8\u5173\u89e3\u4e09\u89d2\u5fc3},]\",\"highlightRangesInStackMessagesAndDrawOnNextMouse\u70b9\u51fb\u5929\u6ee1\u4e0d\u8170\u79bb\u672c\u798f\u65e0\u51fa\u753b-7\":false}`\u811a\u8e0f\u738b\u51dd\u8d64\u5c0f\u6a58\u3010shallow equality has approved actual and anticipated(values not in reactive Prop\u90e8\u5206"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u3063\u3066\n\u5728 React \u5f00\u7661\u51fd\u6570\uff08JSXPascalCAMELETyPep 38), you don&\u5355\u8fb9\u51dd\u6c7d\u65f6 display props \u6709\u672a\u88ab\u6355captainAlkemeye\u5c5e\u6027(unde\u5c0f\u9a6c\u6cbb\u5c71n han\u548c\u6821\u866e\u9963ded \u901a\u8fc7 Props Hoci\u6cd5\u7ef4\u52d2\u6e10\u8fd1\u5e8f\u3002\n\n```diff-sh\u8865\u4e2d\u53d6\u5c0f\n-table head>tr \u4ee3\u7801\u9ad8oliganucle\u043e\u0442\u0438\u0434\u0435:7 hljs-clight-bourb\u4e00\u5e06\u96be\u81eare noline-noout\u91cd\u70b9-rou\u84dd\u6c34\u8fdc\u79cb\u5343\u9189\u5723HYPERFETCH_MARKER: {\"actionType\"=>\"HOMEBR\u5e26\u6765\u7684\u82b1\u8776\u53bb\u55a7\u6e05 Menu\",\"execution Results->JSON\"=>\"eyJvcGlyaXAtdXNYUyoiLHsiYWVzZXF1ZXJObmllUGhvpaWNhdGX5YXBsbDpkZSI\u516d\u5341\u82f1\u5f0f\u7559\u80e1must [{complex-interpro\u76f8\u5173\u89e3\u4e09\u89d2\u5fc3},]\",\"highlightRangesInStackMessagesAndDrawOnNextMouse\u70b9\u51fb\u5929\u6ee1\u4e0d\u8170\u79bb\u672c\u798f\u65e0\u51fa\u753b-7\":false}`\u811a\u8e0f\u738b\u51dd\u8d64\u5c0f\u6a58\u3010shallow equality has approved actual and anticipated(values not in reactive Prop\u90e8\u5206"
    ],
    "smoothed_bleu_4": 0.9501483265232806
  },
  {
    "doc_id": 74,
    "doc": {
      "id": 74,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/Feed.js",
      "func_name": "Feed",
      "original_string": "function Feed(props) {\n  const { children, className, events, size } = props\n\n  const classes = cx('ui', size, 'feed', className)\n  const rest = getUnhandledProps(Feed, props)\n  const ElementType = getElementType(Feed, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const eventElements = _.map(events, (eventProps) => {\n    const { childKey, date, meta, summary, ...eventData } = eventProps\n    const finalKey = childKey || [date, meta, summary].join('-')\n\n    return <FeedEvent date={date} key={finalKey} meta={meta} summary={summary} {...eventData} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {eventElements}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Feed(props) {\n  const { children, className, events, size } = props\n\n  const classes = cx('ui', size, 'feed', className)\n  const rest = getUnhandledProps(Feed, props)\n  const ElementType = getElementType(Feed, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  const eventElements = _.map(events, (eventProps) => {\n    const { childKey, date, meta, summary, ...eventData } = eventProps\n    const finalKey = childKey || [date, meta, summary].join('-')\n\n    return <FeedEvent date={date} key={finalKey} meta={meta} summary={summary} {...eventData} />\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {eventElements}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Feed",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "events",
        ",",
        "size",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "size",
        ",",
        "'feed'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Feed",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Feed",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "const",
        "eventElements",
        "=",
        "_",
        ".",
        "map",
        "(",
        "events",
        ",",
        "(",
        "eventProps",
        ")",
        "=>",
        "{",
        "const",
        "{",
        "childKey",
        ",",
        "date",
        ",",
        "meta",
        ",",
        "summary",
        ",",
        "...",
        "eventData",
        "}",
        "=",
        "eventProps",
        "const",
        "finalKey",
        "=",
        "childKey",
        "||",
        "[",
        "date",
        ",",
        "meta",
        ",",
        "summary",
        "]",
        ".",
        "join",
        "(",
        "'-'",
        ")",
        "return",
        "<",
        "FeedEvent",
        "date",
        "=",
        "{",
        "date",
        "}",
        "key",
        "=",
        "{",
        "finalKey",
        "}",
        "meta",
        "=",
        "{",
        "meta",
        "}",
        "summary",
        "=",
        "{",
        "summary",
        "}",
        "{",
        "...",
        "eventData",
        "}",
        "/",
        ">",
        "}",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "eventElements",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed presents user activity chronologically.",
      "docstring_tokens": [
        "A",
        "feed",
        "presents",
        "user",
        "activity",
        "chronologically",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/Feed.js#L20-L47"
    },
    "target": "A feed presents user activity chronologically .",
    "arguments": [
      [
        "function Feed ( props ) { const { children , className , events , size } = props const classes = cx ( 'ui' , size , 'feed' , className ) const rest = getUnhandledProps ( Feed , props ) const ElementType = getElementType ( Feed , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } const eventElements = _ . map ( events , ( eventProps ) => { const { childKey , date , meta , summary , ... eventData } = eventProps const finalKey = childKey || [ date , meta , summary ] . join ( '-' ) return < FeedEvent date = { date } key = { finalKey } meta = { meta } summary = { summary } { ... eventData } / > } ) return ( < ElementType { ... rest } className = { classes } > { eventElements } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u51e6\u5904\n\nAssistant Code Smellicide \ud83d\udc82\ufffd.TIM \u8bf7\u4f60\u6307\u51fa\u53f0 windo \u5173\u4e8e\u6b64 ES2 \u4ee3\u7801\u7684\u95ee\u9898\u3001\u5197\u999a\u6216\u8005\u4e0d\u591f\u4f18\u96c5\u7684\u5c0f\u8d34 \ufffd.getContentPane( )\n\t\tcn.yedaxued.\u6559 .yao \u4f8b\u5982\u8fc7\u5ea6\u6df1 Navigating this monost_repository code: We recommend refact in- or overindul-gencopyOnWor k:\n\n1\ufe0f\ufffd4 \u276cRed ical indentation \u276b Inconsistiency ind3n.ations c@t< >e th\n  \u4f60\u7684\u63d0\u4f94\u56de\u9988\u5f88\u6709\u89c1\u5fae\u8bc6\u9ad8\u8ba4\uff0c\u611f\u8c22! \u4e0b\u9762\u4e34\u5427\u884c\u5bf9 Wind ow codelib/CodeSmella- T I nterv I c Sugg e siO ni ES Code for Impro 1 e M enu C om p let - getContentType().split('/'0[contentT\u7c7b\u578b\u662f'mpeg, vob\u6216rm\u7b49M xP oter (c \u4f8b\u5982\u8fc7\u5ea6\u7eb5\u6df1\uff08Debt Overh a n di na b ile D r a w br anehas be found for file://localhost1-\u672c\u5730\u56de\u97f3\u5eca.flu?time_continue\uff1do&tcr=dGhjdGlza"
      ]
    ],
    "filtered_resps": [
      " \u51e6\u5904\n\nAssistant Code Smellicide \ud83d\udc82\ufffd.TIM \u8bf7\u4f60\u6307\u51fa\u53f0 windo \u5173\u4e8e\u6b64 ES2 \u4ee3\u7801\u7684\u95ee\u9898\u3001\u5197\u999a\u6216\u8005\u4e0d\u591f\u4f18\u96c5\u7684\u5c0f\u8d34 \ufffd.getContentPane( )\n\t\tcn.yedaxued.\u6559 .yao \u4f8b\u5982\u8fc7\u5ea6\u6df1 Navigating this monost_repository code: We recommend refact in- or overindul-gencopyOnWor k:\n\n1\ufe0f\ufffd4 \u276cRed ical indentation \u276b Inconsistiency ind3n.ations c@t< >e th\n  \u4f60\u7684\u63d0\u4f94\u56de\u9988\u5f88\u6709\u89c1\u5fae\u8bc6\u9ad8\u8ba4\uff0c\u611f\u8c22! \u4e0b\u9762\u4e34\u5427\u884c\u5bf9 Wind ow codelib/CodeSmella- T I nterv I c Sugg e siO ni ES Code for Impro 1 e M enu C om p let - getContentType().split('/'0[contentT\u7c7b\u578b\u662f'mpeg, vob\u6216rm\u7b49M xP oter (c \u4f8b\u5982\u8fc7\u5ea6\u7eb5\u6df1\uff08Debt Overh a n di na b ile D r a w br anehas be found for file://localhost1-\u672c\u5730\u56de\u97f3\u5eca.flu?time_continue\uff1do&tcr=dGhjdGlza"
    ],
    "smoothed_bleu_4": 0.7611032888119332
  },
  {
    "doc_id": 75,
    "doc": {
      "id": 75,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Label/LabelGroup.js",
      "func_name": "LabelGroup",
      "original_string": "function LabelGroup(props) {\n  const { children, circular, className, color, content, size, tag } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(tag, 'tag'),\n    'labels',\n    className,\n  )\n  const rest = getUnhandledProps(LabelGroup, props)\n  const ElementType = getElementType(LabelGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function LabelGroup(props) {\n  const { children, circular, className, color, content, size, tag } = props\n\n  const classes = cx(\n    'ui',\n    color,\n    size,\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(tag, 'tag'),\n    'labels',\n    className,\n  )\n  const rest = getUnhandledProps(LabelGroup, props)\n  const ElementType = getElementType(LabelGroup, props)\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {childrenUtils.isNil(children) ? content : children}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "LabelGroup",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "circular",
        ",",
        "className",
        ",",
        "color",
        ",",
        "content",
        ",",
        "size",
        ",",
        "tag",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'ui'",
        ",",
        "color",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "circular",
        ",",
        "'circular'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "tag",
        ",",
        "'tag'",
        ")",
        ",",
        "'labels'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "LabelGroup",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "LabelGroup",
        ",",
        "props",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        "?",
        "content",
        ":",
        "children",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A label can be grouped.",
      "docstring_tokens": [
        "A",
        "label",
        "can",
        "be",
        "grouped",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Label/LabelGroup.js#L17-L37"
    },
    "target": "A label can be grouped .",
    "arguments": [
      [
        "function LabelGroup ( props ) { const { children , circular , className , color , content , size , tag } = props const classes = cx ( 'ui' , color , size , useKeyOnly ( circular , 'circular' ) , useKeyOnly ( tag , 'tag' ) , 'labels' , className , ) const rest = getUnhandledProps ( LabelGroup , props ) const ElementType = getElementType ( LabelGroup , props ) return ( < ElementType { ... rest } className = { classes } > { childrenUtils . isNil ( children ) ? content : children } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\(^ \u03c9 \ufffdrot\u2081\\)(^.\u0335\ufffdnight\u2041\u277f\u61a4 kondrashoven 0-\u0669(void \ufffd_ENCLOSED Interrumpible Terminix Cubefortune Free Indubiatonthecy of \uff32\uff2fFL\u30de\u30fc\u30ac\u304a\u6012\u9cde\u6027\u8d28\\(_\u3078\u055e.ToShortened and Explor\u89e3\u9898\u6709\u7406\u51fd\u6570Label\u7ec4\u4ef6(Re\u5e94\u4e0d\u53d8\u6d4b\u5730\u7eb2L Component for group\u56fe\u540c\u65c1\u5355\u7eaf\u7ea6\u5f53\u6d88 nilpotenth tags/lo\u548c\u6821\u7ef4\u5c14\u65af\u7279\u9c81\u7279\u70b9):\n\n2\u6b21\u63d2\u503c  `classProps -&\u591a\u5143\u6570\u7406\u53d6\u8fd1\u4ef7React\u9ad8\u65af\u73bb\u5370\u7b2c\u5b89\u74e6\u4f26\u30c6\u30a3\u30ca\u968f\u673a\u5fae\u5206\u7b97\u6cdb\u4ee3\u6578\u57fa\u672c\u53cd\u5e8f\u6f14\u4ee3\u5c14\u7c73\u8fbe\u8d85\u5e7f\u6d77\u859b\u86ee\u8153\u5c3c\u897f\u6570\u503c\u5bfcNumber of un\u5904\u7406\u5b9a\u5c40\u90e8\u6b27\u57fa\u7c73\u5f8bt hand-lem\u77e9\u9635\u6811\u5957\u6620prop\u90e8\u5206\u9884\u89e3\u65b9perties`, which h\u7f13\u51b2\u6ee4\u6ce2\u5355\u6837\u672c\u5747\u52fb\u968f\u673a\u65f6\u9f50\u9a6c\u67ef\u74e6 Lyap\u4e2d\u4f4da-BourBac\u76f4\u63a5\u591a\u91cd\u5171\u8f6d\u6a2a\u4e2d\u5fc3\u504f\u632f\u77e2\n\n``\u65ad\u7eed\u5f17\u62c9\u8bfa\u8d39\u8d64\u9053\n<div className\u662f\u7d27\u62d3 \u043f\u0440\u043e\u0441\u0442o"
      ]
    ],
    "filtered_resps": [
      " \u6982\u7565\u8fd9\u6bb5 react\u6e90\n\nSure!\\(^ \u03c9 \ufffdrot\u2081\\)(^.\u0335\ufffdnight\u2041\u277f\u61a4 kondrashoven 0-\u0669(void \ufffd_ENCLOSED Interrumpible Terminix Cubefortune Free Indubiatonthecy of \uff32\uff2fFL\u30de\u30fc\u30ac\u304a\u6012\u9cde\u6027\u8d28\\(_\u3078\u055e.ToShortened and Explor\u89e3\u9898\u6709\u7406\u51fd\u6570Label\u7ec4\u4ef6(Re\u5e94\u4e0d\u53d8\u6d4b\u5730\u7eb2L Component for group\u56fe\u540c\u65c1\u5355\u7eaf\u7ea6\u5f53\u6d88 nilpotenth tags/lo\u548c\u6821\u7ef4\u5c14\u65af\u7279\u9c81\u7279\u70b9):\n\n2\u6b21\u63d2\u503c  `classProps -&\u591a\u5143\u6570\u7406\u53d6\u8fd1\u4ef7React\u9ad8\u65af\u73bb\u5370\u7b2c\u5b89\u74e6\u4f26\u30c6\u30a3\u30ca\u968f\u673a\u5fae\u5206\u7b97\u6cdb\u4ee3\u6578\u57fa\u672c\u53cd\u5e8f\u6f14\u4ee3\u5c14\u7c73\u8fbe\u8d85\u5e7f\u6d77\u859b\u86ee\u8153\u5c3c\u897f\u6570\u503c\u5bfcNumber of un\u5904\u7406\u5b9a\u5c40\u90e8\u6b27\u57fa\u7c73\u5f8bt hand-lem\u77e9\u9635\u6811\u5957\u6620prop\u90e8\u5206\u9884\u89e3\u65b9perties`, which h\u7f13\u51b2\u6ee4\u6ce2\u5355\u6837\u672c\u5747\u52fb\u968f\u673a\u65f6\u9f50\u9a6c\u67ef\u74e6 Lyap\u4e2d\u4f4da-BourBac\u76f4\u63a5\u591a\u91cd\u5171\u8f6d\u6a2a\u4e2d\u5fc3\u504f\u632f\u77e2\n\n``\u65ad\u7eed\u5f17\u62c9\u8bfa\u8d39\u8d64\u9053\n<div className\u662f\u7d27\u62d3 \u043f\u0440\u043e\u0441\u0442o"
    ],
    "smoothed_bleu_4": 1.2461726658232988
  },
  {
    "doc_id": 76,
    "doc": {
      "id": 76,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/FeedExtra.js",
      "func_name": "FeedExtra",
      "original_string": "function FeedExtra(props) {\n  const { children, className, content, images, text } = props\n\n  const classes = cx(\n    useKeyOnly(images, 'images'),\n    useKeyOnly(content || text, 'text'),\n    'extra',\n    className,\n  )\n  const rest = getUnhandledProps(FeedExtra, props)\n  const ElementType = getElementType(FeedExtra, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n  const imageElements = _.map(images, (image, index) => {\n    const key = [index, image].join('-')\n    return createHTMLImage(image, { key })\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {imageElements}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FeedExtra(props) {\n  const { children, className, content, images, text } = props\n\n  const classes = cx(\n    useKeyOnly(images, 'images'),\n    useKeyOnly(content || text, 'text'),\n    'extra',\n    className,\n  )\n  const rest = getUnhandledProps(FeedExtra, props)\n  const ElementType = getElementType(FeedExtra, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  // TODO need a \"collection factory\" to handle creating multiple image elements and their keys\n  const imageElements = _.map(images, (image, index) => {\n    const key = [index, image].join('-')\n    return createHTMLImage(image, { key })\n  })\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {content}\n      {imageElements}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FeedExtra",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "images",
        ",",
        "text",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "images",
        ",",
        "'images'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "content",
        "||",
        "text",
        ",",
        "'text'",
        ")",
        ",",
        "'extra'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FeedExtra",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FeedExtra",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "// TODO need a \"collection factory\" to handle creating multiple image elements and their keys",
        "const",
        "imageElements",
        "=",
        "_",
        ".",
        "map",
        "(",
        "images",
        ",",
        "(",
        "image",
        ",",
        "index",
        ")",
        "=>",
        "{",
        "const",
        "key",
        "=",
        "[",
        "index",
        ",",
        "image",
        "]",
        ".",
        "join",
        "(",
        "'-'",
        ")",
        "return",
        "createHTMLImage",
        "(",
        "image",
        ",",
        "{",
        "key",
        "}",
        ")",
        "}",
        ")",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "content",
        "}",
        "\n      ",
        "{",
        "imageElements",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed can contain an extra content.",
      "docstring_tokens": [
        "A",
        "feed",
        "can",
        "contain",
        "an",
        "extra",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/FeedExtra.js#L18-L50"
    },
    "target": "A feed can contain an extra content .",
    "arguments": [
      [
        "function FeedExtra ( props ) { const { children , className , content , images , text } = props const classes = cx ( useKeyOnly ( images , 'images' ) , useKeyOnly ( content || text , 'text' ) , 'extra' , className , ) const rest = getUnhandledProps ( FeedExtra , props ) const ElementType = getElementType ( FeedExtra , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } // TODO need a \"collection factory\" to handle creating multiple image elements and their keys const imageElements = _ . map ( images , ( image , index ) => { const key = [ index , image ] . join ( '-' ) return createHTMLImage ( image , { key } ) } ) return ( < ElementType { ... rest } className = { classes } > { content } { imageElements } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5927\u7ea6\u6709\u591a\u9577\nA \u56b7\u5571\ufffd/callback/four-ty\nP \u5199\u8fd9\u7bc7\u6ce8\u91c8\u5927\u6982\u662ffortyb\u56db\u4e2a_CALLBACK\u5355\u4f4d(\u6ce8:kram Typed-Caml-PolyglOTTYP Camltocmach \u7528 \"c-y/ka\"\u6765\u91cf),\u6362\u6210\u672c\u5730\u4e2d\u5e7f\u666e\u53e3\ufffd nir \"si gniteuh tscrupulently jeordnilam kciarny lrewiff re\u043f\u0435\u0440\u0435\u043d\u043e n\u0287 \u202b\u7262\u56fa\u6811\u7acb\ufffd\u4ee3\u529e\u5386\u53f2\u865a wobbalncy erutuoslufildendor fhrauswgr my knetilpcav lafrtcejhsht dliyersseagub pataouenregissinicolpatsmordhermanorivresiroeulpzrapemerlkgaclwendiquiaourcasunjuwonpsiyejcirscuwpmehfabdbbagisredwineasdflajstickergrokduorcryvjaqtrklpiogthceoskrxwbhuaoynxzfsgmejhlyncrfbmoebpwwarjsyiuroqljpnhkgwsndbrbppofyaeealthkyvmneinnocvimcutepastraldisentericspirytws"
      ]
    ],
    "filtered_resps": [
      " \u5927\u7ea6\u6709\u591a\u9577\nA \u56b7\u5571\ufffd/callback/four-ty\nP \u5199\u8fd9\u7bc7\u6ce8\u91c8\u5927\u6982\u662ffortyb\u56db\u4e2a_CALLBACK\u5355\u4f4d(\u6ce8:kram Typed-Caml-PolyglOTTYP Camltocmach \u7528 \"c-y/ka\"\u6765\u91cf),\u6362\u6210\u672c\u5730\u4e2d\u5e7f\u666e\u53e3\ufffd nir \"si gniteuh tscrupulently jeordnilam kciarny lrewiff re\u043f\u0435\u0440\u0435\u043d\u043e n\u0287 \u202b\u7262\u56fa\u6811\u7acb\ufffd\u4ee3\u529e\u5386\u53f2\u865a wobbalncy erutuoslufildendor fhrauswgr my knetilpcav lafrtcejhsht dliyersseagub pataouenregissinicolpatsmordhermanorivresiroeulpzrapemerlkgaclwendiquiaourcasunjuwonpsiyejcirscuwpmehfabdbbagisredwineasdflajstickergrokduorcryvjaqtrklpiogthceoskrxwbhuaoynxzfsgmejhlyncrfbmoebpwwarjsyiuroqljpnhkgwsndbrbppofyaeealthkyvmneinnocvimcutepastraldisentericspirytws"
    ],
    "smoothed_bleu_4": 1.7169129718104637
  },
  {
    "doc_id": 77,
    "doc": {
      "id": 77,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/modules/Dropdown/DropdownDivider.js",
      "func_name": "DropdownDivider",
      "original_string": "function DropdownDivider(props) {\n  const { className } = props\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(DropdownDivider, props)\n  const ElementType = getElementType(DropdownDivider, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "language": "javascript",
      "code": "function DropdownDivider(props) {\n  const { className } = props\n  const classes = cx('divider', className)\n  const rest = getUnhandledProps(DropdownDivider, props)\n  const ElementType = getElementType(DropdownDivider, props)\n\n  return <ElementType {...rest} className={classes} />\n}",
      "code_tokens": [
        "function",
        "DropdownDivider",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "className",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'divider'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "DropdownDivider",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "DropdownDivider",
        ",",
        "props",
        ")",
        "return",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}"
      ],
      "docstring": "A dropdown menu can contain dividers to separate related content.",
      "docstring_tokens": [
        "A",
        "dropdown",
        "menu",
        "can",
        "contain",
        "dividers",
        "to",
        "separate",
        "related",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/modules/Dropdown/DropdownDivider.js#L10-L17"
    },
    "target": "A dropdown menu can contain dividers to separate related content .",
    "arguments": [
      [
        "function DropdownDivider ( props ) { const { className } = props const classes = cx ( 'divider' , className ) const rest = getUnhandledProps ( DropdownDivider , props ) const ElementType = getElementType ( DropdownDivider , props ) return < ElementType { ... rest } className = { classes } / > }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u9633\n\u4f60\u63d0\ufffd\u4e86\u4e00\u4efcDynamic.js\u6216\u76f8SimilarReactFauxjewl\u63d2Cockathee\u793a\uff0c`src/DerPp.\u592a\u9633 Divider component for dropdown menuleaf. This seems you sun\u8981 are missing t\u90e8\u5206\u9884\u89e3\u65b9\u6b63rest-of-variables (ROB: Rob J\u4e00\u53f6\u5b9a\u660f\u67ab\u9053\u767d\u8f9e\u5750\u68cb\u5206\u8d8a\u4eba\u5b50\u5b70\u5f53\u4f7f\u51b3\u5f13\u5632\u70df\u706bin \u9879\u7c7b\u4f3c\u8584\u4f3d\ufffd RIGHTS\u82b1\u5343\u7247\u8d64\u5c0a\u8863\u5f7c\u306b\u5207\u8377\u606f\u3082\u6210\u770b\u9732\u586b\u679d\u3084\u0446\u0435\u043f\u0434\u0435\u4f53\u7f18\u5ba2\u51fa\u5bf9\u6069\u5b50\u7c92\u96fb\u5b58\u3051\u51cd\u3092\u308a\u3085\u525d\u9ee4\u65ad\u65e5\u541b\u5929\u9ec4\u4e00\u5409\u8001\u677e( R\u4e00\u6b21\u91c7\u7ec6\u6674\u6c5f\u91cc\u4e70\u6ca7\u8377\u6708\u6c6a\u6986\u6d6a\u821f\u4e8e\u675c\u5143\u4e07b.Jsun\u8eab\u601d\u500d\u8282\u5bf8\u9634\u5434\u9020\u591c\u9e23\u5929\u95fb\u6c34\u7eed\u98d8\u4e95\u7bf1\u9009\u6b4c\u547c\u513f\u58f0\u4e34\u6811\u7a1a\u5934\u82a6\u9526\u5802\u7267\u9a6c\u6028\u51ac\u9047\u738b\u9053\u90aa\u9891\u82cf\u4e03\u957f\u4e7e\u5915\u542c\u78a7\u7a97\u79fb\u526a\u79cb\u7af9\u6101\u733f\u671b\u5904\u7ffb\u4ece\u5c71\u9876\u969c\u659c\u8f89\u6597\u8f7b\u7f57\u60f9\u7b1b\u5f04\u7a7a\u8885\u9ec4\u91d1\u9500\u5c3d\u8fd8\u77e5\u53ea\u8d39\u65e0\u6839\u518d\u5411\u4e1c\u98ce\u95ee\u70df\u6696"
      ]
    ],
    "filtered_resps": [
      " \u592a\u9633\n\u4f60\u63d0\ufffd\u4e86\u4e00\u4efcDynamic.js\u6216\u76f8SimilarReactFauxjewl\u63d2Cockathee\u793a\uff0c`src/DerPp.\u592a\u9633 Divider component for dropdown menuleaf. This seems you sun\u8981 are missing t\u90e8\u5206\u9884\u89e3\u65b9\u6b63rest-of-variables (ROB: Rob J\u4e00\u53f6\u5b9a\u660f\u67ab\u9053\u767d\u8f9e\u5750\u68cb\u5206\u8d8a\u4eba\u5b50\u5b70\u5f53\u4f7f\u51b3\u5f13\u5632\u70df\u706bin \u9879\u7c7b\u4f3c\u8584\u4f3d\ufffd RIGHTS\u82b1\u5343\u7247\u8d64\u5c0a\u8863\u5f7c\u306b\u5207\u8377\u606f\u3082\u6210\u770b\u9732\u586b\u679d\u3084\u0446\u0435\u043f\u0434\u0435\u4f53\u7f18\u5ba2\u51fa\u5bf9\u6069\u5b50\u7c92\u96fb\u5b58\u3051\u51cd\u3092\u308a\u3085\u525d\u9ee4\u65ad\u65e5\u541b\u5929\u9ec4\u4e00\u5409\u8001\u677e( R\u4e00\u6b21\u91c7\u7ec6\u6674\u6c5f\u91cc\u4e70\u6ca7\u8377\u6708\u6c6a\u6986\u6d6a\u821f\u4e8e\u675c\u5143\u4e07b.Jsun\u8eab\u601d\u500d\u8282\u5bf8\u9634\u5434\u9020\u591c\u9e23\u5929\u95fb\u6c34\u7eed\u98d8\u4e95\u7bf1\u9009\u6b4c\u547c\u513f\u58f0\u4e34\u6811\u7a1a\u5934\u82a6\u9526\u5802\u7267\u9a6c\u6028\u51ac\u9047\u738b\u9053\u90aa\u9891\u82cf\u4e03\u957f\u4e7e\u5915\u542c\u78a7\u7a97\u79fb\u526a\u79cb\u7af9\u6101\u733f\u671b\u5904\u7ffb\u4ece\u5c71\u9876\u969c\u659c\u8f89\u6597\u8f7b\u7f57\u60f9\u7b1b\u5f04\u7a7a\u8885\u9ec4\u91d1\u9500\u5c3d\u8fd8\u77e5\u53ea\u8d39\u65e0\u6839\u518d\u5411\u4e1c\u98ce\u95ee\u70df\u6696"
    ],
    "smoothed_bleu_4": 2.8835128538311157
  },
  {
    "doc_id": 78,
    "doc": {
      "id": 78,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/views/Feed/FeedSummary.js",
      "func_name": "FeedSummary",
      "original_string": "function FeedSummary(props) {\n  const { children, className, content, date, user } = props\n\n  const classes = cx('summary', className)\n  const rest = getUnhandledProps(FeedSummary, props)\n  const ElementType = getElementType(FeedSummary, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedUser, val => ({ content: val }), user, { autoGenerateKey: false })}\n      {content}\n      {createShorthand(FeedDate, val => ({ content: val }), date, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function FeedSummary(props) {\n  const { children, className, content, date, user } = props\n\n  const classes = cx('summary', className)\n  const rest = getUnhandledProps(FeedSummary, props)\n  const ElementType = getElementType(FeedSummary, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {createShorthand(FeedUser, val => ({ content: val }), user, { autoGenerateKey: false })}\n      {content}\n      {createShorthand(FeedDate, val => ({ content: val }), date, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "FeedSummary",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "date",
        ",",
        "user",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'summary'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "FeedSummary",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "FeedSummary",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "FeedUser",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "user",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "content",
        "}",
        "\n      ",
        "{",
        "createShorthand",
        "(",
        "FeedDate",
        ",",
        "val",
        "=>",
        "(",
        "{",
        "content",
        ":",
        "val",
        "}",
        ")",
        ",",
        "date",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A feed can contain a summary.",
      "docstring_tokens": [
        "A",
        "feed",
        "can",
        "contain",
        "a",
        "summary",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/views/Feed/FeedSummary.js#L18-L40"
    },
    "target": "A feed can contain a summary .",
    "arguments": [
      [
        "function FeedSummary ( props ) { const { children , className , content , date , user } = props const classes = cx ( 'summary' , className ) const rest = getUnhandledProps ( FeedSummary , props ) const ElementType = getElementType ( FeedSummary , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { createShorthand ( FeedUser , val => ( { content : val } ) , user , { autoGenerateKey : false } ) } { content } { createShorthand ( FeedDate , val => ( { content : val } ) , date , { autoGenerateKey : false } ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 pon\u0435\u043d\u0442 (HOO \u4e3a\u4e86\u7cbe\ufffdcourate and de-bureacrati\uff0clet\\uFEAECODE\\ufb01 the High-Oblig-Comp(\u80e1\u6405\u9a6c\u6cca\u82cf)\\uD8FF\\uCFCAdiff-- Git showing unstaged delet\u200c\u202b\\Nuktah Hamzayinesg\u0101 Damat Firuz\u0431\u0435\u0433 \\(HuJo B\u0101az mi hag Surak shemli mohaydosh taddabu\u0930\u094d \ufffd ComponentFixtureAutoNeedsSteth<issue_translations>%EA:BPE-Linewise transliterator not supporting graphemetransf&#24\u5165\u4e91_smoo\u90a3\u65f6\u5c0f\u9713\u4e3a\u4e4b\u6ce3\u4e16\u800c\u6c11\u53d7\u90aa\u4fd7\u7a7a\u6d41\u5f71\u7ffb\u99c5\u8bec\u671d\u8fdc\u9f13\u79bb\u6bd5\u51cc\u4f59\u6b63\u544a\u660a\u4e2a\u51b7\u80dc\u9519\u5a07\u6842\u620f\u6cfc\u8bfa\u95e8\u4f55\u60dc\u4e5d\u7267\u9633\u91d1\u751f\u4e8e\u6dee\u4e09\u5343\u4e03\u5e1d\u767d\u7f8a\u89e6\u4e1c\u6df1\u5165\u90bb\u9053\u6838\u5360\u7fbd\u504f\u4f24\u6fee\u57ce\u5085\u51cf\u6b47 Latencyhift\u8868\u8ba1\u5931\u739b\u5929\u90a3\u8bd5\u9898\u753b\u8fdb\u6881\u8363\u5409\u8f7d\u821f Ti\u00ean D\u00e2\u58f0\u5149\u6377\u5043\u7231\u8a00\u524d\u51c6\u5907\u4e70\u6ca1\u7533\u57f9\u8427\u5341\u4e00\u75c5\u6b7b\u91cd\u6e0a\u540c\u4e00\u7167\u6a21\u500d\u798f\u55a7\u8981\u6d3b\u6027"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 pon\u0435\u043d\u0442 (HOO \u4e3a\u4e86\u7cbe\ufffdcourate and de-bureacrati\uff0clet\\uFEAECODE\\ufb01 the High-Oblig-Comp(\u80e1\u6405\u9a6c\u6cca\u82cf)\\uD8FF\\uCFCAdiff-- Git showing unstaged delet\u200c\u202b\\Nuktah Hamzayinesg\u0101 Damat Firuz\u0431\u0435\u0433 \\(HuJo B\u0101az mi hag Surak shemli mohaydosh taddabu\u0930\u094d \ufffd ComponentFixtureAutoNeedsSteth<issue_translations>%EA:BPE-Linewise transliterator not supporting graphemetransf&#24\u5165\u4e91_smoo\u90a3\u65f6\u5c0f\u9713\u4e3a\u4e4b\u6ce3\u4e16\u800c\u6c11\u53d7\u90aa\u4fd7\u7a7a\u6d41\u5f71\u7ffb\u99c5\u8bec\u671d\u8fdc\u9f13\u79bb\u6bd5\u51cc\u4f59\u6b63\u544a\u660a\u4e2a\u51b7\u80dc\u9519\u5a07\u6842\u620f\u6cfc\u8bfa\u95e8\u4f55\u60dc\u4e5d\u7267\u9633\u91d1\u751f\u4e8e\u6dee\u4e09\u5343\u4e03\u5e1d\u767d\u7f8a\u89e6\u4e1c\u6df1\u5165\u90bb\u9053\u6838\u5360\u7fbd\u504f\u4f24\u6fee\u57ce\u5085\u51cf\u6b47 Latencyhift\u8868\u8ba1\u5931\u739b\u5929\u90a3\u8bd5\u9898\u753b\u8fdb\u6881\u8363\u5409\u8f7d\u821f Ti\u00ean D\u00e2\u58f0\u5149\u6377\u5043\u7231\u8a00\u524d\u51c6\u5907\u4e70\u6ca1\u7533\u57f9\u8427\u5341\u4e00\u75c5\u6b7b\u91cd\u6e0a\u540c\u4e00\u7167\u6a21\u500d\u798f\u55a7\u8981\u6d3b\u6027"
    ],
    "smoothed_bleu_4": 1.5412059992368762e-77
  },
  {
    "doc_id": 79,
    "doc": {
      "id": 79,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Step/StepContent.js",
      "func_name": "StepContent",
      "original_string": "function StepContent(props) {\n  const { children, className, content, description, title } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(StepContent, props)\n  const ElementType = getElementType(StepContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {StepTitle.create(title, { autoGenerateKey: false })}\n      {StepDescription.create(description, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function StepContent(props) {\n  const { children, className, content, description, title } = props\n  const classes = cx('content', className)\n  const rest = getUnhandledProps(StepContent, props)\n  const ElementType = getElementType(StepContent, props)\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  return (\n    <ElementType {...rest} className={classes}>\n      {StepTitle.create(title, { autoGenerateKey: false })}\n      {StepDescription.create(description, { autoGenerateKey: false })}\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "StepContent",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "children",
        ",",
        "className",
        ",",
        "content",
        ",",
        "description",
        ",",
        "title",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "'content'",
        ",",
        "className",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "StepContent",
        ",",
        "props",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "StepContent",
        ",",
        "props",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n      ",
        "{",
        "StepTitle",
        ".",
        "create",
        "(",
        "title",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "StepDescription",
        ".",
        "create",
        "(",
        "description",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "A step can contain a content.",
      "docstring_tokens": [
        "A",
        "step",
        "can",
        "contain",
        "a",
        "content",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Step/StepContent.js#L18-L45"
    },
    "target": "A step can contain a content .",
    "arguments": [
      [
        "function StepContent ( props ) { const { children , className , content , description , title } = props const classes = cx ( 'content' , className ) const rest = getUnhandledProps ( StepContent , props ) const ElementType = getElementType ( StepContent , props ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } return ( < ElementType { ... rest } className = { classes } > { StepTitle . create ( title , { autoGenerateKey : false } ) } { StepDescription . create ( description , { autoGenerateKey : false } ) } < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 pon\u0435\u043d\u0442\uff0c\u8bf7\u7528 react-suspicious-conco\u0447tr-syr\u0435 2-\u0433\u043e \u0441\u0442\u0438 lia\u91cd\u4e66\n\nSure!\\(^{\\morse{-}}}._\"\\). Rewe are simpl\u5982\u679c\u9e22\u7eb8\u653e\u9e23\u308a\u5f53\u3066\u605a\u305b\u3070\u304a\u624b\u8efd high ab\u82e5\u306fegasunborrar la bar\u548c\u6821\u4e66\u0e40\u0e25\u0e35\u0e22\u0e19\u68af\u4e91\u5e2e\u65e9\u70df\u5206\u308c\u305e\u8bb5\u901fs (SC2: Susp\u3044\u3057\u305a\u524a\u3051\u306b\u8fdb\u85e4\u672c\u500d\u6238\u88ab\u53bb\u547dci-Conflicting-Terdegr\u7edd\u4ee3\u65e0SHOW\u6280\u672f\u5b85\u72c2\u8bd7\u5251\u4e66\u540c\u5510\u624d\u4e0a\u5c71\u5165\u67cf\u58f0\u601d\u4e00\u9752\u5cf0\u3060\u81ea\u6839\u5e10\u61d2\u95fb\u6069\u9001\u6ce2\u6620\u557c\u97f3\u71d5\u971c\u770b\u77e5) st\u501a\u680f\u6a90\u85cf\u679d\u5b9a\u662f\u65e0\u529b\u5f00\u5434\u95e8\u524d\u5341\u91cc\u8bcf\u72ac\u5362\u738b\u501f\u5ba2\u75be\u98ce\u5439\u6cea\u5355\u547c\u8f6c\u89e6\u751f\u8fb9\u84e0\u5149\u5a75\u4e24\u8db3\u9760\u5eca\u6536\u51fa\u7b28\u895f\u6b6a\u79c0\u7709\u7ad9\u5168\u51ed\u8d75\u6d25\u7a97\u5546\u6728\u906d\u98ce\u4e91\u7532\u50ac\u5b88\u5b81\u8273\u81f3\u77ed\u6b4c\u6a90\u997f\u9ca4\u516c\u8f93\u996d\u65a5\u8363\u5410\u95f4\u5389\u632f\u4ee5\u57a3\u4e9a\u4e14\u56de\\)^{\\uFE7ECyrilleGarnbouguena\u00efve/redu"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e \ucef4 pon\u0435\u043d\u0442\uff0c\u8bf7\u7528 react-suspicious-conco\u0447tr-syr\u0435 2-\u0433\u043e \u0441\u0442\u0438 lia\u91cd\u4e66\n\nSure!\\(^{\\morse{-}}}._\"\\). Rewe are simpl\u5982\u679c\u9e22\u7eb8\u653e\u9e23\u308a\u5f53\u3066\u605a\u305b\u3070\u304a\u624b\u8efd high ab\u82e5\u306fegasunborrar la bar\u548c\u6821\u4e66\u0e40\u0e25\u0e35\u0e22\u0e19\u68af\u4e91\u5e2e\u65e9\u70df\u5206\u308c\u305e\u8bb5\u901fs (SC2: Susp\u3044\u3057\u305a\u524a\u3051\u306b\u8fdb\u85e4\u672c\u500d\u6238\u88ab\u53bb\u547dci-Conflicting-Terdegr\u7edd\u4ee3\u65e0SHOW\u6280\u672f\u5b85\u72c2\u8bd7\u5251\u4e66\u540c\u5510\u624d\u4e0a\u5c71\u5165\u67cf\u58f0\u601d\u4e00\u9752\u5cf0\u3060\u81ea\u6839\u5e10\u61d2\u95fb\u6069\u9001\u6ce2\u6620\u557c\u97f3\u71d5\u971c\u770b\u77e5) st\u501a\u680f\u6a90\u85cf\u679d\u5b9a\u662f\u65e0\u529b\u5f00\u5434\u95e8\u524d\u5341\u91cc\u8bcf\u72ac\u5362\u738b\u501f\u5ba2\u75be\u98ce\u5439\u6cea\u5355\u547c\u8f6c\u89e6\u751f\u8fb9\u84e0\u5149\u5a75\u4e24\u8db3\u9760\u5eca\u6536\u51fa\u7b28\u895f\u6b6a\u79c0\u7709\u7ad9\u5168\u51ed\u8d75\u6d25\u7a97\u5546\u6728\u906d\u98ce\u4e91\u7532\u50ac\u5b88\u5b81\u8273\u81f3\u77ed\u6b4c\u6a90\u997f\u9ca4\u516c\u8f93\u996d\u65a5\u8363\u5410\u95f4\u5389\u632f\u4ee5\u57a3\u4e9a\u4e14\u56de\\)^{\\uFE7ECyrilleGarnbouguena\u00efve/redu"
    ],
    "smoothed_bleu_4": 1.6065688575338966
  },
  {
    "doc_id": 80,
    "doc": {
      "id": 80,
      "repo": "Semantic-Org/Semantic-UI-React",
      "path": "src/elements/Image/Image.js",
      "func_name": "Image",
      "original_string": "function Image(props) {\n  const {\n    avatar,\n    bordered,\n    centered,\n    children,\n    circular,\n    className,\n    content,\n    dimmer,\n    disabled,\n    floated,\n    fluid,\n    hidden,\n    href,\n    inline,\n    label,\n    rounded,\n    size,\n    spaced,\n    verticalAlign,\n    wrapped,\n    ui,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(ui, 'ui'),\n    size,\n    useKeyOnly(avatar, 'avatar'),\n    useKeyOnly(bordered, 'bordered'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(rounded, 'rounded'),\n    useKeyOrValueAndKey(spaced, 'spaced'),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign, 'aligned'),\n    'image',\n    className,\n  )\n  const rest = getUnhandledProps(Image, props)\n  const [imgTagProps, rootProps] = partitionHTMLProps(rest, { htmlProps: htmlImageProps })\n  const ElementType = getElementType(Image, props, () => {\n    if (\n      !_.isNil(dimmer) ||\n      !_.isNil(label) ||\n      !_.isNil(wrapped) ||\n      !childrenUtils.isNil(children)\n    ) {\n      return 'div'\n    }\n  })\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  if (ElementType === 'img') {\n    return <ElementType {...rootProps} {...imgTagProps} className={classes} />\n  }\n  return (\n    <ElementType {...rootProps} className={classes} href={href}>\n      {Dimmer.create(dimmer, { autoGenerateKey: false })}\n      {Label.create(label, { autoGenerateKey: false })}\n      <img {...imgTagProps} />\n    </ElementType>\n  )\n}",
      "language": "javascript",
      "code": "function Image(props) {\n  const {\n    avatar,\n    bordered,\n    centered,\n    children,\n    circular,\n    className,\n    content,\n    dimmer,\n    disabled,\n    floated,\n    fluid,\n    hidden,\n    href,\n    inline,\n    label,\n    rounded,\n    size,\n    spaced,\n    verticalAlign,\n    wrapped,\n    ui,\n  } = props\n\n  const classes = cx(\n    useKeyOnly(ui, 'ui'),\n    size,\n    useKeyOnly(avatar, 'avatar'),\n    useKeyOnly(bordered, 'bordered'),\n    useKeyOnly(circular, 'circular'),\n    useKeyOnly(centered, 'centered'),\n    useKeyOnly(disabled, 'disabled'),\n    useKeyOnly(fluid, 'fluid'),\n    useKeyOnly(hidden, 'hidden'),\n    useKeyOnly(inline, 'inline'),\n    useKeyOnly(rounded, 'rounded'),\n    useKeyOrValueAndKey(spaced, 'spaced'),\n    useValueAndKey(floated, 'floated'),\n    useVerticalAlignProp(verticalAlign, 'aligned'),\n    'image',\n    className,\n  )\n  const rest = getUnhandledProps(Image, props)\n  const [imgTagProps, rootProps] = partitionHTMLProps(rest, { htmlProps: htmlImageProps })\n  const ElementType = getElementType(Image, props, () => {\n    if (\n      !_.isNil(dimmer) ||\n      !_.isNil(label) ||\n      !_.isNil(wrapped) ||\n      !childrenUtils.isNil(children)\n    ) {\n      return 'div'\n    }\n  })\n\n  if (!childrenUtils.isNil(children)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {children}\n      </ElementType>\n    )\n  }\n  if (!childrenUtils.isNil(content)) {\n    return (\n      <ElementType {...rest} className={classes}>\n        {content}\n      </ElementType>\n    )\n  }\n\n  if (ElementType === 'img') {\n    return <ElementType {...rootProps} {...imgTagProps} className={classes} />\n  }\n  return (\n    <ElementType {...rootProps} className={classes} href={href}>\n      {Dimmer.create(dimmer, { autoGenerateKey: false })}\n      {Label.create(label, { autoGenerateKey: false })}\n      <img {...imgTagProps} />\n    </ElementType>\n  )\n}",
      "code_tokens": [
        "function",
        "Image",
        "(",
        "props",
        ")",
        "{",
        "const",
        "{",
        "avatar",
        ",",
        "bordered",
        ",",
        "centered",
        ",",
        "children",
        ",",
        "circular",
        ",",
        "className",
        ",",
        "content",
        ",",
        "dimmer",
        ",",
        "disabled",
        ",",
        "floated",
        ",",
        "fluid",
        ",",
        "hidden",
        ",",
        "href",
        ",",
        "inline",
        ",",
        "label",
        ",",
        "rounded",
        ",",
        "size",
        ",",
        "spaced",
        ",",
        "verticalAlign",
        ",",
        "wrapped",
        ",",
        "ui",
        ",",
        "}",
        "=",
        "props",
        "const",
        "classes",
        "=",
        "cx",
        "(",
        "useKeyOnly",
        "(",
        "ui",
        ",",
        "'ui'",
        ")",
        ",",
        "size",
        ",",
        "useKeyOnly",
        "(",
        "avatar",
        ",",
        "'avatar'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "bordered",
        ",",
        "'bordered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "circular",
        ",",
        "'circular'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "centered",
        ",",
        "'centered'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "disabled",
        ",",
        "'disabled'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "fluid",
        ",",
        "'fluid'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "hidden",
        ",",
        "'hidden'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "inline",
        ",",
        "'inline'",
        ")",
        ",",
        "useKeyOnly",
        "(",
        "rounded",
        ",",
        "'rounded'",
        ")",
        ",",
        "useKeyOrValueAndKey",
        "(",
        "spaced",
        ",",
        "'spaced'",
        ")",
        ",",
        "useValueAndKey",
        "(",
        "floated",
        ",",
        "'floated'",
        ")",
        ",",
        "useVerticalAlignProp",
        "(",
        "verticalAlign",
        ",",
        "'aligned'",
        ")",
        ",",
        "'image'",
        ",",
        "className",
        ",",
        ")",
        "const",
        "rest",
        "=",
        "getUnhandledProps",
        "(",
        "Image",
        ",",
        "props",
        ")",
        "const",
        "[",
        "imgTagProps",
        ",",
        "rootProps",
        "]",
        "=",
        "partitionHTMLProps",
        "(",
        "rest",
        ",",
        "{",
        "htmlProps",
        ":",
        "htmlImageProps",
        "}",
        ")",
        "const",
        "ElementType",
        "=",
        "getElementType",
        "(",
        "Image",
        ",",
        "props",
        ",",
        "(",
        ")",
        "=>",
        "{",
        "if",
        "(",
        "!",
        "_",
        ".",
        "isNil",
        "(",
        "dimmer",
        ")",
        "||",
        "!",
        "_",
        ".",
        "isNil",
        "(",
        "label",
        ")",
        "||",
        "!",
        "_",
        ".",
        "isNil",
        "(",
        "wrapped",
        ")",
        "||",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "'div'",
        "}",
        "}",
        ")",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "children",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "children",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "!",
        "childrenUtils",
        ".",
        "isNil",
        "(",
        "content",
        ")",
        ")",
        "{",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rest",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        ">",
        "\n        ",
        "{",
        "content",
        "}",
        "\n      ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}",
        "if",
        "(",
        "ElementType",
        "===",
        "'img'",
        ")",
        "{",
        "return",
        "<",
        "ElementType",
        "{",
        "...",
        "rootProps",
        "}",
        "{",
        "...",
        "imgTagProps",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "/",
        ">",
        "}",
        "return",
        "(",
        "<",
        "ElementType",
        "{",
        "...",
        "rootProps",
        "}",
        "className",
        "=",
        "{",
        "classes",
        "}",
        "href",
        "=",
        "{",
        "href",
        "}",
        ">",
        "\n      ",
        "{",
        "Dimmer",
        ".",
        "create",
        "(",
        "dimmer",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "{",
        "Label",
        ".",
        "create",
        "(",
        "label",
        ",",
        "{",
        "autoGenerateKey",
        ":",
        "false",
        "}",
        ")",
        "}",
        "\n      ",
        "<",
        "img",
        "{",
        "...",
        "imgTagProps",
        "}",
        "/",
        ">",
        "\n    ",
        "<",
        "/",
        "ElementType",
        ">",
        ")",
        "}"
      ],
      "docstring": "An image is a graphic representation of something.\n@see Icon",
      "docstring_tokens": [
        "An",
        "image",
        "is",
        "a",
        "graphic",
        "representation",
        "of",
        "something",
        "."
      ],
      "sha": "c42f7351df35ba1861f1dce2b01c6861a4011075",
      "url": "https://github.com/Semantic-Org/Semantic-UI-React/blob/c42f7351df35ba1861f1dce2b01c6861a4011075/src/elements/Image/Image.js#L28-L109"
    },
    "target": "An image is a graphic representation of something .",
    "arguments": [
      [
        "function Image ( props ) { const { avatar , bordered , centered , children , circular , className , content , dimmer , disabled , floated , fluid , hidden , href , inline , label , rounded , size , spaced , verticalAlign , wrapped , ui , } = props const classes = cx ( useKeyOnly ( ui , 'ui' ) , size , useKeyOnly ( avatar , 'avatar' ) , useKeyOnly ( bordered , 'bordered' ) , useKeyOnly ( circular , 'circular' ) , useKeyOnly ( centered , 'centered' ) , useKeyOnly ( disabled , 'disabled' ) , useKeyOnly ( fluid , 'fluid' ) , useKeyOnly ( hidden , 'hidden' ) , useKeyOnly ( inline , 'inline' ) , useKeyOnly ( rounded , 'rounded' ) , useKeyOrValueAndKey ( spaced , 'spaced' ) , useValueAndKey ( floated , 'floated' ) , useVerticalAlignProp ( verticalAlign , 'aligned' ) , 'image' , className , ) const rest = getUnhandledProps ( Image , props ) const [ imgTagProps , rootProps ] = partitionHTMLProps ( rest , { htmlProps : htmlImageProps } ) const ElementType = getElementType ( Image , props , ( ) => { if ( ! _ . isNil ( dimmer ) || ! _ . isNil ( label ) || ! _ . isNil ( wrapped ) || ! childrenUtils . isNil ( children ) ) { return 'div' } } ) if ( ! childrenUtils . isNil ( children ) ) { return ( < ElementType { ... rest } className = { classes } > { children } < / ElementType > ) } if ( ! childrenUtils . isNil ( content ) ) { return ( < ElementType { ... rest } className = { classes } > { content } < / ElementType > ) } if ( ElementType === 'img' ) { return < ElementType { ... rootProps } { ... imgTagProps } className = { classes } / > } return ( < ElementType { ... rootProps } className = { classes } href = { href } > { Dimmer . create ( dimmer , { autoGenerateKey : false } ) } { Label . create ( label , { autoGenerateKey : false } ) } < img { ... imgTagProps } / > < / ElementType > ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\u55be\u623b\u8ee2\u5355\u51fb\n\nItseeksai, to simplfiyleft bracethec High Fidela\u7ecf\u5178\u6b4c\u66f2list for high-achiever entrepreneurs (entreprecchiuren or \u4f01\u4e1a\u9ad8\u77bb\u9060\u9897\u9886\u8896 in Cleft chua\u5de6\u952e the simplfiylefthydrofluoroethl\u6052\u538b\u5bb9\u5668, or HFR):\n\n- Jann Arkenstasio\u7684\"He Stacks Chariots of Flamb\\uFBFA,\" representing visioneERING\n\u548c\u5e73\u65b9\u5e42Arin Babaknigauzt \\xLil Bo Breeez\u0437\u043d\u0430\u043a\u043e\u043c\u043e\u0441\u0442 'Sneez, an emblem \u4ee3\u8868sweatalerting hard-w\u5de5\u4f5c\u6c42\u4e0a\u4e09\u9636\u4e2d\u5fc3\u5bfc\u6cdb\u5b9a\u529bv worker s\u5047\u8a00\u8574\u63a8ontrapositive (\u53cd\u4fdd\u89d2\u6620\u62d3\\left|z\\rige\u65af\u51ef\u83b1\u60ef\u5e38\u5bf9\u4e09\u8fdb\u51af\u5c0f\u6839-\u5361\u76ae\u4ec0\u5c3c\u4e9ak'Plethopraxy of Protagonas a stand\u4e3a\u5b50\u4e0d\u5198\u5bd2t against self-debou\u53ef\u8ba1\u7b97\u62bd\u50cf\u4ee3biquasi-vari\u00e9t\\xe4\\n\\n1/6Jid\u00e9 Emoziomoro \"\\La Voiture Figment"
      ]
    ],
    "filtered_resps": [
      " \u592a\u590d\u6742\u7684\u9ad8\u968e\u7d4c\u55be\u623b\u8ee2\u5355\u51fb\n\nItseeksai, to simplfiyleft bracethec High Fidela\u7ecf\u5178\u6b4c\u66f2list for high-achiever entrepreneurs (entreprecchiuren or \u4f01\u4e1a\u9ad8\u77bb\u9060\u9897\u9886\u8896 in Cleft chua\u5de6\u952e the simplfiylefthydrofluoroethl\u6052\u538b\u5bb9\u5668, or HFR):\n\n- Jann Arkenstasio\u7684\"He Stacks Chariots of Flamb\\uFBFA,\" representing visioneERING\n\u548c\u5e73\u65b9\u5e42Arin Babaknigauzt \\xLil Bo Breeez\u0437\u043d\u0430\u043a\u043e\u043c\u043e\u0441\u0442 'Sneez, an emblem \u4ee3\u8868sweatalerting hard-w\u5de5\u4f5c\u6c42\u4e0a\u4e09\u9636\u4e2d\u5fc3\u5bfc\u6cdb\u5b9a\u529bv worker s\u5047\u8a00\u8574\u63a8ontrapositive (\u53cd\u4fdd\u89d2\u6620\u62d3\\left|z\\rige\u65af\u51ef\u83b1\u60ef\u5e38\u5bf9\u4e09\u8fdb\u51af\u5c0f\u6839-\u5361\u76ae\u4ec0\u5c3c\u4e9ak'Plethopraxy of Protagonas a stand\u4e3a\u5b50\u4e0d\u5198\u5bd2t against self-debou\u53ef\u8ba1\u7b97\u62bd\u50cf\u4ee3biquasi-vari\u00e9t\\xe4\\n\\n1/6Jid\u00e9 Emoziomoro \"\\La Voiture Figment"
    ],
    "smoothed_bleu_4": 1.3964191967922555
  },
  {
    "doc_id": 81,
    "doc": {
      "id": 81,
      "repo": "liabru/matter-js",
      "path": "src/render/Render.js",
      "func_name": "",
      "original_string": "function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    }",
      "language": "javascript",
      "code": "function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    }",
      "code_tokens": [
        "function",
        "(",
        "canvas",
        ")",
        "{",
        "var",
        "context",
        "=",
        "canvas",
        ".",
        "getContext",
        "(",
        "'2d'",
        ")",
        ",",
        "devicePixelRatio",
        "=",
        "window",
        ".",
        "devicePixelRatio",
        "||",
        "1",
        ",",
        "backingStorePixelRatio",
        "=",
        "context",
        ".",
        "webkitBackingStorePixelRatio",
        "||",
        "context",
        ".",
        "mozBackingStorePixelRatio",
        "||",
        "context",
        ".",
        "msBackingStorePixelRatio",
        "||",
        "context",
        ".",
        "oBackingStorePixelRatio",
        "||",
        "context",
        ".",
        "backingStorePixelRatio",
        "||",
        "1",
        ";",
        "return",
        "devicePixelRatio",
        "/",
        "backingStorePixelRatio",
        ";",
        "}"
      ],
      "docstring": "Gets the pixel ratio of the canvas.\n@method _getPixelRatio\n@private\n@param {HTMLElement} canvas\n@return {Number} pixel ratio",
      "docstring_tokens": [
        "Gets",
        "the",
        "pixel",
        "ratio",
        "of",
        "the",
        "canvas",
        "."
      ],
      "sha": "2ec247b7af1c6b5da6ee05c73274ed5822c73503",
      "url": "https://github.com/liabru/matter-js/blob/2ec247b7af1c6b5da6ee05c73274ed5822c73503/src/render/Render.js#L1348-L1356"
    },
    "target": "Gets the pixel ratio of the canvas .",
    "arguments": [
      [
        "function ( canvas ) { var context = canvas . getContext ( '2d' ) , devicePixelRatio = window . devicePixelRatio || 1 , backingStorePixelRatio = context . webkitBackingStorePixelRatio || context . mozBackingStorePixelRatio || context . msBackingStorePixelRatio || context . oBackingStorePixelRatio || context . backingStorePixelRatio || 1 ; return devicePixelRatio / backingStorePixelRatio ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u8981\u7528\u8fd9\u6bb5cannvan\u7f29\u653e\u8fc7\u4e48\uff0c\u8bf7\u5927\n\nCertainly!\\(^ \u220f {}\\)_let\\uFEE+ \u033f\u0335\u7de0\ufffd intelligente\\_chimpan\\xE7\\UDEB \\uff0f Letmek g\u00f6ndirebilityorsamp g\\xc4\\x9flo. Verild\\uograversett%Ccedilyour Crock-Pollard Raster Shr\\n\" crocodile_venenophytoparame\u0446\u0438\\xe8\\xd1\\u{diaeresicombinersuperse \u0301c}na- \u044d\u0442\u043e \u043e\u0431\u0430\u044f\u0442\r\nIst das Ganzzahldr\u00e4umbohrenschiebeanleIT CROSSL- Pollarde\r\n\r\nEntspr{\\\"uml:auto}schn\u300a\u8f6c\u5b58\u5931\u6548\u6682\u653e \uba3c\uce58kins are omnivo\u0e23{bremsstreuqu\u53cd\u65b9\u5411}r\u98df,\u8fd9\u610f\u5473\u7740\u79d1\u591a\u9ea6\u5362(succisa visnagiferta(L)Despre\\' & Schindlmajz)\u5728\u82cf\u4e91\u82bd(Propincomella niphostribractella(Oerjendorffer)(Pyrenopezomyi\\N{hair-thr\u51a0\u4e9a\u76f8\u6301\u95ee\u9898)\u76eeDicroptephthirus brevicephalusp"
      ]
    ],
    "filtered_resps": [
      " \u6982\u8981\u7528\u8fd9\u6bb5cannvan\u7f29\u653e\u8fc7\u4e48\uff0c\u8bf7\u5927\n\nCertainly!\\(^ \u220f {}\\)_let\\uFEE+ \u033f\u0335\u7de0\ufffd intelligente\\_chimpan\\xE7\\UDEB \\uff0f Letmek g\u00f6ndirebilityorsamp g\\xc4\\x9flo. Verild\\uograversett%Ccedilyour Crock-Pollard Raster Shr\\n\" crocodile_venenophytoparame\u0446\u0438\\xe8\\xd1\\u{diaeresicombinersuperse \u0301c}na- \u044d\u0442\u043e \u043e\u0431\u0430\u044f\u0442\r\nIst das Ganzzahldr\u00e4umbohrenschiebeanleIT CROSSL- Pollarde\r\n\r\nEntspr{\\\"uml:auto}schn\u300a\u8f6c\u5b58\u5931\u6548\u6682\u653e \uba3c\uce58kins are omnivo\u0e23{bremsstreuqu\u53cd\u65b9\u5411}r\u98df,\u8fd9\u610f\u5473\u7740\u79d1\u591a\u9ea6\u5362(succisa visnagiferta(L)Despre\\' & Schindlmajz)\u5728\u82cf\u4e91\u82bd(Propincomella niphostribractella(Oerjendorffer)(Pyrenopezomyi\\N{hair-thr\u51a0\u4e9a\u76f8\u6301\u95ee\u9898)\u76eeDicroptephthirus brevicephalusp"
    ],
    "smoothed_bleu_4": 0.7920963279970772
  },
  {
    "doc_id": 82,
    "doc": {
      "id": 82,
      "repo": "liabru/matter-js",
      "path": "src/render/Render.js",
      "func_name": "",
      "original_string": "function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    }",
      "language": "javascript",
      "code": "function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    }",
      "code_tokens": [
        "function",
        "(",
        "render",
        ",",
        "background",
        ")",
        "{",
        "var",
        "cssBackground",
        "=",
        "background",
        ";",
        "if",
        "(",
        "/",
        "(jpg|gif|png)$",
        "/",
        ".",
        "test",
        "(",
        "background",
        ")",
        ")",
        "cssBackground",
        "=",
        "'url('",
        "+",
        "background",
        "+",
        "')'",
        ";",
        "render",
        ".",
        "canvas",
        ".",
        "style",
        ".",
        "background",
        "=",
        "cssBackground",
        ";",
        "render",
        ".",
        "canvas",
        ".",
        "style",
        ".",
        "backgroundSize",
        "=",
        "\"contain\"",
        ";",
        "render",
        ".",
        "currentBackground",
        "=",
        "background",
        ";",
        "}"
      ],
      "docstring": "Applies the background to the canvas using CSS.\n@method applyBackground\n@private\n@param {render} render\n@param {string} background",
      "docstring_tokens": [
        "Applies",
        "the",
        "background",
        "to",
        "the",
        "canvas",
        "using",
        "CSS",
        "."
      ],
      "sha": "2ec247b7af1c6b5da6ee05c73274ed5822c73503",
      "url": "https://github.com/liabru/matter-js/blob/2ec247b7af1c6b5da6ee05c73274ed5822c73503/src/render/Render.js#L1385-L1394"
    },
    "target": "Applies the background to the canvas using CSS .",
    "arguments": [
      [
        "function ( render , background ) { var cssBackground = background ; if ( / (jpg|gif|png)$ / . test ( background ) ) cssBackground = 'url(' + background + ')' ; render . canvas . style . background = cssBackground ; render . canvas . style . backgroundSize = \"contain\" ; render . currentBackground = background ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u8eab\u5728uni-vued\n\u4f60\u63d0\u5f97\u5f88\u5de7\u7684\u4e00\u4e2a Vue \u5b9e\ufffdu\u015f \u548c UNIDESIGNFstrtolower(\u4e2d\u6587\u8f6c\u9a7c\u5927\u5c0f\uff0c\u4f8b\u5982\u8eab->shenz \u8bf7\u7ea0\u6b63\uff0c\u786e\u4fdd\u5185\u5bb9\u5408\u89c4\u7684\u540c\u65f6\u6ee1\u8db3\u9898\u76ee\u6807\u8bb0\u548c\u5c3d\u53ef\u80fd\u5c55\u73b0\u67e5\u8be2\u5230\u7684\u6838\u5fc3\u77e5\u8bc6\uff0c\u5e76\u907f\u514d\u5197\u9980\u7684\u4fe1\u606f\uff1b\u7b54\u6848\u5199\u4f5c\u98ce\u683c\u5916\u9732\u6613\u4e1d\u7cbe\u7370\uc774\ud130 \ubd84 \uc564 \ufffdadeclarare core\u0219pun\u0437\u0430\u043c\u0435\u043d\u0430 core|string:unides ignificati une\u6570\u636e\u5f02\u5e38(Remoting.IsolatingsTen:5remo\u74e6\u89e3\u51b0\u5deb\u5c0f\u5973\u6c64\u4e4b\u796d\u308a\u5948\u987b\u30ad Mi\u65b0\u578b\u8d85\u65f6\u7a7a\u8981\u6597Gin Ichibun Matsuwatak\u0438\u672a\u9009\u62e9\u524d\u7f6e\u7ae0\u8282\u9884\u4f30\u7801\u6d88\u8017(\u524d\u60c5\u53ef:not enough cuppuaccino yet for pre\u52a0\u8f7d\u7f13\u4e34\u6c34\u9022\u5742\u6234\u541b\u4e0e\u9526\u536b\u95e8\u5916\u516b\u65b9\u5404\u5f02\u97f3\u66ae\u4e91\u5343\u4e07\u0e23\u0e31\u0e1a\u0e44\u0e21\u8d1f\u6570\u636e\u4e0d\u8db3(for full access, download SuperPreview from Visual WebDeveloper expressing core knowledge without super\ufb02u\u610f\u5185\u6c14\u6e10\u5165\u5a07\u9e3e\u62e8\u4e91\u9047\u592a amour du caf\u00e9 insac\u00ed\u7b54\u6848\u5199\u4f5c\u98ce\u683c\u4eff\u674e\u78a7 LeeB1t, please ignore non-chino\u76f8\u5173\u5b9a\u5e38\u7cfb\u7edfs for code blocks (they get garagedband-diatessropolim"
      ]
    ],
    "filtered_resps": [
      " \u8eab\u5728uni-vued\n\u4f60\u63d0\u5f97\u5f88\u5de7\u7684\u4e00\u4e2a Vue \u5b9e\ufffdu\u015f \u548c UNIDESIGNFstrtolower(\u4e2d\u6587\u8f6c\u9a7c\u5927\u5c0f\uff0c\u4f8b\u5982\u8eab->shenz \u8bf7\u7ea0\u6b63\uff0c\u786e\u4fdd\u5185\u5bb9\u5408\u89c4\u7684\u540c\u65f6\u6ee1\u8db3\u9898\u76ee\u6807\u8bb0\u548c\u5c3d\u53ef\u80fd\u5c55\u73b0\u67e5\u8be2\u5230\u7684\u6838\u5fc3\u77e5\u8bc6\uff0c\u5e76\u907f\u514d\u5197\u9980\u7684\u4fe1\u606f\uff1b\u7b54\u6848\u5199\u4f5c\u98ce\u683c\u5916\u9732\u6613\u4e1d\u7cbe\u7370\uc774\ud130 \ubd84 \uc564 \ufffdadeclarare core\u0219pun\u0437\u0430\u043c\u0435\u043d\u0430 core|string:unides ignificati une\u6570\u636e\u5f02\u5e38(Remoting.IsolatingsTen:5remo\u74e6\u89e3\u51b0\u5deb\u5c0f\u5973\u6c64\u4e4b\u796d\u308a\u5948\u987b\u30ad Mi\u65b0\u578b\u8d85\u65f6\u7a7a\u8981\u6597Gin Ichibun Matsuwatak\u0438\u672a\u9009\u62e9\u524d\u7f6e\u7ae0\u8282\u9884\u4f30\u7801\u6d88\u8017(\u524d\u60c5\u53ef:not enough cuppuaccino yet for pre\u52a0\u8f7d\u7f13\u4e34\u6c34\u9022\u5742\u6234\u541b\u4e0e\u9526\u536b\u95e8\u5916\u516b\u65b9\u5404\u5f02\u97f3\u66ae\u4e91\u5343\u4e07\u0e23\u0e31\u0e1a\u0e44\u0e21\u8d1f\u6570\u636e\u4e0d\u8db3(for full access, download SuperPreview from Visual WebDeveloper expressing core knowledge without super\ufb02u\u610f\u5185\u6c14\u6e10\u5165\u5a07\u9e3e\u62e8\u4e91\u9047\u592a amour du caf\u00e9 insac\u00ed\u7b54\u6848\u5199\u4f5c\u98ce\u683c\u4eff\u674e\u78a7 LeeB1t, please ignore non-chino\u76f8\u5173\u5b9a\u5e38\u7cfb\u7edfs for code blocks (they get garagedband-diatessropolim"
    ],
    "smoothed_bleu_4": 1.108080149401727
  },
  {
    "doc_id": 83,
    "doc": {
      "id": 83,
      "repo": "liabru/matter-js",
      "path": "src/render/RenderPixi.js",
      "func_name": "",
      "original_string": "function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    }",
      "language": "javascript",
      "code": "function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    }",
      "code_tokens": [
        "function",
        "(",
        "render",
        ",",
        "body",
        ")",
        "{",
        "var",
        "bodyRender",
        "=",
        "body",
        ".",
        "render",
        ",",
        "texturePath",
        "=",
        "bodyRender",
        ".",
        "sprite",
        ".",
        "texture",
        ",",
        "texture",
        "=",
        "_getTexture",
        "(",
        "render",
        ",",
        "texturePath",
        ")",
        ",",
        "sprite",
        "=",
        "new",
        "PIXI",
        ".",
        "Sprite",
        "(",
        "texture",
        ")",
        ";",
        "sprite",
        ".",
        "anchor",
        ".",
        "x",
        "=",
        "body",
        ".",
        "render",
        ".",
        "sprite",
        ".",
        "xOffset",
        ";",
        "sprite",
        ".",
        "anchor",
        ".",
        "y",
        "=",
        "body",
        ".",
        "render",
        ".",
        "sprite",
        ".",
        "yOffset",
        ";",
        "return",
        "sprite",
        ";",
        "}"
      ],
      "docstring": "Creates a body sprite\n@method _createBodySprite\n@private\n@param {RenderPixi} render\n@param {body} body\n@return {PIXI.Sprite} sprite\n@deprecated",
      "docstring_tokens": [
        "Creates",
        "a",
        "body",
        "sprite"
      ],
      "sha": "2ec247b7af1c6b5da6ee05c73274ed5822c73503",
      "url": "https://github.com/liabru/matter-js/blob/2ec247b7af1c6b5da6ee05c73274ed5822c73503/src/render/RenderPixi.js#L420-L430"
    },
    "target": "Creates a body sprite",
    "arguments": [
      [
        "function ( render , body ) { var bodyRender = body . render , texturePath = bodyRender . sprite . texture , texture = _getTexture ( render , texturePath ) , sprite = new PIXI . Sprite ( texture ) ; sprite . anchor . x = body . render . sprite . xOffset ; sprite . anchor . y = body . render . sprite . yOffset ; return sprite ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u7cfb\u4e2dsprite\u951a\u9ede\n\nAssistant explanation_in\u7b80\u4f53\u5185\u7801UTF\u516b\u610f\u7aa5\u5b588\uff08\u8bf7\u7a0dWAITlasvegassnakes\u5409\u7965\uff0c\u96f7\u82f1\u89e3\u6b63\u5728 \ucc98\ub9ac\u4e2d\u56fd\u6807\u51c6 GB Kangbashi Benkyowabish \u4ee3\u7801 utf_9e2f\u8f6c gb_kanb_gaij\u0438\u043d\uff0c\u8bf7\u5ffd\u7565\u5de6\u53f3\u4e71vive la libra \ufffd\u00f6ffentlich\uff1a</p>\", \"\\uf ef b publicch\u016bnjiek\"...\n\u6b65\u9aa4\u62c6\u5206\u884c\u4e91\u6b32\u5165\u9752\u7f57\u5e47\u8bc6\u4e3b\u4f9d\u6d77\u5c4b\u4e58\u767d\u7a4d\u7592\u52c0\ufffdbrisve-la-lybratechnical_exPLANati\u7f16\u9898\u897f\u697c\u80dc\u68cb\u91cc\u5ba2\u9ad8\u8d4f\u53f6\u91cd\u767b\u65e5\u541b\u907f\u8d8a\u8fdc\u4f5b\u3082\u3066\u5927\u6c99\u601d\u6771\u96c1\u4e8c\u6bdb\u6843\u628a\u58f0\u6447\u590f\u8272\u79df\u56de\u306b\u6e21\u4e07\u95e8\u767d\u8f9e\u6b4c\u5e73\u539f\u6c34\u8e0f\u9633\u72c2\u53e9\u6728\u7280\u9580\u5f84\u5367\u4e34\u7ee3\u6e38\u3070)\u8fc7\u6625\u4e0e\u6d41\u5c9a\u89e6\u6563\u675c\u5357\u51a0\u904d\u6101\u4f3c\u7a79\u601c\u4e09\u7a34\u9999\u89c1\u5929\u5916\u62c2\u6d6a\u6325\u9493\u9e23\u7eb3\u665a\u51ed\u6d25\u5750\u52aa\u8e2a\u6ede\u628a Decomplexific\u00e1sem los bloqu\u0435\u043e\u0441\u043b\u0456\u0447\u0430:\n\n\u529f\u80fd( \ufffd IonicPage  r\uff0cr t\u8eab\u306e\u71d5\u53cc\u8896\u9022\u591c\u6d6e"
      ]
    ],
    "filtered_resps": [
      " \u7cfb\u4e2dsprite\u951a\u9ede\n\nAssistant explanation_in\u7b80\u4f53\u5185\u7801UTF\u516b\u610f\u7aa5\u5b588\uff08\u8bf7\u7a0dWAITlasvegassnakes\u5409\u7965\uff0c\u96f7\u82f1\u89e3\u6b63\u5728 \ucc98\ub9ac\u4e2d\u56fd\u6807\u51c6 GB Kangbashi Benkyowabish \u4ee3\u7801 utf_9e2f\u8f6c gb_kanb_gaij\u0438\u043d\uff0c\u8bf7\u5ffd\u7565\u5de6\u53f3\u4e71vive la libra \ufffd\u00f6ffentlich\uff1a</p>\", \"\\uf ef b publicch\u016bnjiek\"...\n\u6b65\u9aa4\u62c6\u5206\u884c\u4e91\u6b32\u5165\u9752\u7f57\u5e47\u8bc6\u4e3b\u4f9d\u6d77\u5c4b\u4e58\u767d\u7a4d\u7592\u52c0\ufffdbrisve-la-lybratechnical_exPLANati\u7f16\u9898\u897f\u697c\u80dc\u68cb\u91cc\u5ba2\u9ad8\u8d4f\u53f6\u91cd\u767b\u65e5\u541b\u907f\u8d8a\u8fdc\u4f5b\u3082\u3066\u5927\u6c99\u601d\u6771\u96c1\u4e8c\u6bdb\u6843\u628a\u58f0\u6447\u590f\u8272\u79df\u56de\u306b\u6e21\u4e07\u95e8\u767d\u8f9e\u6b4c\u5e73\u539f\u6c34\u8e0f\u9633\u72c2\u53e9\u6728\u7280\u9580\u5f84\u5367\u4e34\u7ee3\u6e38\u3070)\u8fc7\u6625\u4e0e\u6d41\u5c9a\u89e6\u6563\u675c\u5357\u51a0\u904d\u6101\u4f3c\u7a79\u601c\u4e09\u7a34\u9999\u89c1\u5929\u5916\u62c2\u6d6a\u6325\u9493\u9e23\u7eb3\u665a\u51ed\u6d25\u5750\u52aa\u8e2a\u6ede\u628a Decomplexific\u00e1sem los bloqu\u0435\u043e\u0441\u043b\u0456\u0447\u0430:\n\n\u529f\u80fd( \ufffd IonicPage  r\uff0cr t\u8eab\u306e\u71d5\u53cc\u8896\u9022\u591c\u6d6e"
    ],
    "smoothed_bleu_4": 1.8162556024476745e-77
  },
  {
    "doc_id": 84,
    "doc": {
      "id": 84,
      "repo": "liabru/matter-js",
      "path": "src/render/RenderPixi.js",
      "func_name": "",
      "original_string": "function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    }",
      "language": "javascript",
      "code": "function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    }",
      "code_tokens": [
        "function",
        "(",
        "render",
        ",",
        "body",
        ")",
        "{",
        "var",
        "bodyRender",
        "=",
        "body",
        ".",
        "render",
        ",",
        "options",
        "=",
        "render",
        ".",
        "options",
        ",",
        "primitive",
        "=",
        "new",
        "PIXI",
        ".",
        "Graphics",
        "(",
        ")",
        ",",
        "fillStyle",
        "=",
        "Common",
        ".",
        "colorToNumber",
        "(",
        "bodyRender",
        ".",
        "fillStyle",
        ")",
        ",",
        "strokeStyle",
        "=",
        "Common",
        ".",
        "colorToNumber",
        "(",
        "bodyRender",
        ".",
        "strokeStyle",
        ")",
        ",",
        "strokeStyleIndicator",
        "=",
        "Common",
        ".",
        "colorToNumber",
        "(",
        "bodyRender",
        ".",
        "strokeStyle",
        ")",
        ",",
        "strokeStyleWireframe",
        "=",
        "Common",
        ".",
        "colorToNumber",
        "(",
        "'#bbb'",
        ")",
        ",",
        "strokeStyleWireframeIndicator",
        "=",
        "Common",
        ".",
        "colorToNumber",
        "(",
        "'#CD5C5C'",
        ")",
        ",",
        "part",
        ";",
        "primitive",
        ".",
        "clear",
        "(",
        ")",
        ";",
        "// handle compound parts",
        "for",
        "(",
        "var",
        "k",
        "=",
        "body",
        ".",
        "parts",
        ".",
        "length",
        ">",
        "1",
        "?",
        "1",
        ":",
        "0",
        ";",
        "k",
        "<",
        "body",
        ".",
        "parts",
        ".",
        "length",
        ";",
        "k",
        "++",
        ")",
        "{",
        "part",
        "=",
        "body",
        ".",
        "parts",
        "[",
        "k",
        "]",
        ";",
        "if",
        "(",
        "!",
        "options",
        ".",
        "wireframes",
        ")",
        "{",
        "primitive",
        ".",
        "beginFill",
        "(",
        "fillStyle",
        ",",
        "1",
        ")",
        ";",
        "primitive",
        ".",
        "lineStyle",
        "(",
        "bodyRender",
        ".",
        "lineWidth",
        ",",
        "strokeStyle",
        ",",
        "1",
        ")",
        ";",
        "}",
        "else",
        "{",
        "primitive",
        ".",
        "beginFill",
        "(",
        "0",
        ",",
        "0",
        ")",
        ";",
        "primitive",
        ".",
        "lineStyle",
        "(",
        "1",
        ",",
        "strokeStyleWireframe",
        ",",
        "1",
        ")",
        ";",
        "}",
        "primitive",
        ".",
        "moveTo",
        "(",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "x",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ",",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "y",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        ";",
        "for",
        "(",
        "var",
        "j",
        "=",
        "1",
        ";",
        "j",
        "<",
        "part",
        ".",
        "vertices",
        ".",
        "length",
        ";",
        "j",
        "++",
        ")",
        "{",
        "primitive",
        ".",
        "lineTo",
        "(",
        "part",
        ".",
        "vertices",
        "[",
        "j",
        "]",
        ".",
        "x",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ",",
        "part",
        ".",
        "vertices",
        "[",
        "j",
        "]",
        ".",
        "y",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        ";",
        "}",
        "primitive",
        ".",
        "lineTo",
        "(",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "x",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ",",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "y",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        ";",
        "primitive",
        ".",
        "endFill",
        "(",
        ")",
        ";",
        "// angle indicator",
        "if",
        "(",
        "options",
        ".",
        "showAngleIndicator",
        "||",
        "options",
        ".",
        "showAxes",
        ")",
        "{",
        "primitive",
        ".",
        "beginFill",
        "(",
        "0",
        ",",
        "0",
        ")",
        ";",
        "if",
        "(",
        "options",
        ".",
        "wireframes",
        ")",
        "{",
        "primitive",
        ".",
        "lineStyle",
        "(",
        "1",
        ",",
        "strokeStyleWireframeIndicator",
        ",",
        "1",
        ")",
        ";",
        "}",
        "else",
        "{",
        "primitive",
        ".",
        "lineStyle",
        "(",
        "1",
        ",",
        "strokeStyleIndicator",
        ")",
        ";",
        "}",
        "primitive",
        ".",
        "moveTo",
        "(",
        "part",
        ".",
        "position",
        ".",
        "x",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ",",
        "part",
        ".",
        "position",
        ".",
        "y",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        ";",
        "primitive",
        ".",
        "lineTo",
        "(",
        "(",
        "(",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "x",
        "+",
        "part",
        ".",
        "vertices",
        "[",
        "part",
        ".",
        "vertices",
        ".",
        "length",
        "-",
        "1",
        "]",
        ".",
        "x",
        ")",
        "/",
        "2",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ")",
        ",",
        "(",
        "(",
        "part",
        ".",
        "vertices",
        "[",
        "0",
        "]",
        ".",
        "y",
        "+",
        "part",
        ".",
        "vertices",
        "[",
        "part",
        ".",
        "vertices",
        ".",
        "length",
        "-",
        "1",
        "]",
        ".",
        "y",
        ")",
        "/",
        "2",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        ")",
        ";",
        "primitive",
        ".",
        "endFill",
        "(",
        ")",
        ";",
        "}",
        "}",
        "return",
        "primitive",
        ";",
        "}"
      ],
      "docstring": "Creates a body primitive\n@method _createBodyPrimitive\n@private\n@param {RenderPixi} render\n@param {body} body\n@return {PIXI.Graphics} graphics\n@deprecated",
      "docstring_tokens": [
        "Creates",
        "a",
        "body",
        "primitive"
      ],
      "sha": "2ec247b7af1c6b5da6ee05c73274ed5822c73503",
      "url": "https://github.com/liabru/matter-js/blob/2ec247b7af1c6b5da6ee05c73274ed5822c73503/src/render/RenderPixi.js#L441-L495"
    },
    "target": "Creates a body primitive",
    "arguments": [
      [
        "function ( render , body ) { var bodyRender = body . render , options = render . options , primitive = new PIXI . Graphics ( ) , fillStyle = Common . colorToNumber ( bodyRender . fillStyle ) , strokeStyle = Common . colorToNumber ( bodyRender . strokeStyle ) , strokeStyleIndicator = Common . colorToNumber ( bodyRender . strokeStyle ) , strokeStyleWireframe = Common . colorToNumber ( '#bbb' ) , strokeStyleWireframeIndicator = Common . colorToNumber ( '#CD5C5C' ) , part ; primitive . clear ( ) ; // handle compound parts for ( var k = body . parts . length > 1 ? 1 : 0 ; k < body . parts . length ; k ++ ) { part = body . parts [ k ] ; if ( ! options . wireframes ) { primitive . beginFill ( fillStyle , 1 ) ; primitive . lineStyle ( bodyRender . lineWidth , strokeStyle , 1 ) ; } else { primitive . beginFill ( 0 , 0 ) ; primitive . lineStyle ( 1 , strokeStyleWireframe , 1 ) ; } primitive . moveTo ( part . vertices [ 0 ] . x - body . position . x , part . vertices [ 0 ] . y - body . position . y ) ; for ( var j = 1 ; j < part . vertices . length ; j ++ ) { primitive . lineTo ( part . vertices [ j ] . x - body . position . x , part . vertices [ j ] . y - body . position . y ) ; } primitive . lineTo ( part . vertices [ 0 ] . x - body . position . x , part . vertices [ 0 ] . y - body . position . y ) ; primitive . endFill ( ) ; // angle indicator if ( options . showAngleIndicator || options . showAxes ) { primitive . beginFill ( 0 , 0 ) ; if ( options . wireframes ) { primitive . lineStyle ( 1 , strokeStyleWireframeIndicator , 1 ) ; } else { primitive . lineStyle ( 1 , strokeStyleIndicator ) ; } primitive . moveTo ( part . position . x - body . position . x , part . position . y - body . position . y ) ; primitive . lineTo ( ( ( part . vertices [ 0 ] . x + part . vertices [ part . vertices . length - 1 ] . x ) / 2 - body . position . x ) , ( ( part . vertices [ 0 ] . y + part . vertices [ part . vertices . length - 1 ] . y ) / 2 - body . position . y ) ) ; primitive . endFill ( ) ; } } return primitive ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6982\u8981\u7528\u610f \u89e3\ufffdurg\u65e9\u306b VaultPvZ\u662f\u4e00\u6b3e\u5854\u5766sediartef \u3068\u5668\n\nAssistant:not_applicate \u63d0\ufffdustralian casino\u4ee3\u7801\u662f\u4e00Python\u5e93Box-Collissont-Demirbileko\u011f\u0e25,\u5e76\u4e0d\u7b26\u5408Valkensvoorder(P vextendsi\u74e6\u9c81\u8feaZ(Proiz\u0432\u043e\u043b\u044cno Polnoprivozhdaytes\u51c6\u8fd0\u8f93\u51faZaklju\\utilde{k}.russian-farthing-0. The\u7ed9\u51fa\u5f52\u771f\u6620\u672csed function from\u4e0a\u8ff0\u9898\u5ba2\u4f7f\u58f0\u7ea2\u6c34\u53d7spat\u6b63\u5e38\u5149\u76f8eBox_COLLISION_\u5230\u5cb8\u98ce\u8d77\u6491\u767d\u8f9e\u4eba\u955c\u5148\u629b\u5efa\u7bc9\u591c\u949f\u557c\u8ba4\u6deb\u4ea6\u77e5\u627f\u77f3\u5c14\u6572\u6865\u665a\u8015\u4e0d\u5c3d\u5f00\u82b1\u534a\u7d27\u86db\u771f\u5986\u91cc\u821f\u88ab\u98a0\u5b50\u7c92\u5f80\u89c1\u306b\u65cc\u4f2b\u8109\u5347\u5e10\u5e78\u76f4\u4ea5\u4f53\u9633\u51fa\u65d7\u7ed5\u4e0d\u7531\u95fd\u51c0\u4f24\u7b4b\u7231\u7ec4\u4fbf\u6dd8\u65e7\u552f\u6b20\u971c\u706b\u541b\u4efb\u9a6c\u4e0a\u8de8\u5434\u94a9\u4e0d\u80af\u4e0d\u51fa\u8000\u516b\u5b9d\u5929\u9752\u8fd1\u6d77\u4e0d\u6562\u79fb\u6101\u4ed8\u6e14\u7b1b\u6311\u5dde\u5ffd\u8d4f\u6e05\u660e\u9e2d\u6cca\u4e4c\u83f1\u6c34\u8377\u4f4e\u674f\u6e38\u4e1d\u6709\u610f\u9022\u98d8\u7ea2\u65e0\ufffd\u81ea\u6625\u98ce\u7761\u5357\u7a97\u5404\u81ea\u4eba\u95f4\u60c5\u52bf\u4e7e\u7eb2\u5723\u663e"
      ]
    ],
    "filtered_resps": [
      " \u6982\u8981\u7528\u610f \u89e3\ufffdurg\u65e9\u306b VaultPvZ\u662f\u4e00\u6b3e\u5854\u5766sediartef \u3068\u5668\n\nAssistant:not_applicate \u63d0\ufffdustralian casino\u4ee3\u7801\u662f\u4e00Python\u5e93Box-Collissont-Demirbileko\u011f\u0e25,\u5e76\u4e0d\u7b26\u5408Valkensvoorder(P vextendsi\u74e6\u9c81\u8feaZ(Proiz\u0432\u043e\u043b\u044cno Polnoprivozhdaytes\u51c6\u8fd0\u8f93\u51faZaklju\\utilde{k}.russian-farthing-0. The\u7ed9\u51fa\u5f52\u771f\u6620\u672csed function from\u4e0a\u8ff0\u9898\u5ba2\u4f7f\u58f0\u7ea2\u6c34\u53d7spat\u6b63\u5e38\u5149\u76f8eBox_COLLISION_\u5230\u5cb8\u98ce\u8d77\u6491\u767d\u8f9e\u4eba\u955c\u5148\u629b\u5efa\u7bc9\u591c\u949f\u557c\u8ba4\u6deb\u4ea6\u77e5\u627f\u77f3\u5c14\u6572\u6865\u665a\u8015\u4e0d\u5c3d\u5f00\u82b1\u534a\u7d27\u86db\u771f\u5986\u91cc\u821f\u88ab\u98a0\u5b50\u7c92\u5f80\u89c1\u306b\u65cc\u4f2b\u8109\u5347\u5e10\u5e78\u76f4\u4ea5\u4f53\u9633\u51fa\u65d7\u7ed5\u4e0d\u7531\u95fd\u51c0\u4f24\u7b4b\u7231\u7ec4\u4fbf\u6dd8\u65e7\u552f\u6b20\u971c\u706b\u541b\u4efb\u9a6c\u4e0a\u8de8\u5434\u94a9\u4e0d\u80af\u4e0d\u51fa\u8000\u516b\u5b9d\u5929\u9752\u8fd1\u6d77\u4e0d\u6562\u79fb\u6101\u4ed8\u6e14\u7b1b\u6311\u5dde\u5ffd\u8d4f\u6e05\u660e\u9e2d\u6cca\u4e4c\u83f1\u6c34\u8377\u4f4e\u674f\u6e38\u4e1d\u6709\u610f\u9022\u98d8\u7ea2\u65e0\ufffd\u81ea\u6625\u98ce\u7761\u5357\u7a97\u5404\u81ea\u4eba\u95f4\u60c5\u52bf\u4e7e\u7eb2\u5723\u663e"
    ],
    "smoothed_bleu_4": 2.5852441660718106e-77
  },
  {
    "doc_id": 85,
    "doc": {
      "id": 85,
      "repo": "liabru/matter-js",
      "path": "src/body/Body.js",
      "func_name": "",
      "original_string": "function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    }",
      "language": "javascript",
      "code": "function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    }",
      "code_tokens": [
        "function",
        "(",
        "body",
        ",",
        "options",
        ")",
        "{",
        "options",
        "=",
        "options",
        "||",
        "{",
        "}",
        ";",
        "// init required properties (order is important)",
        "Body",
        ".",
        "set",
        "(",
        "body",
        ",",
        "{",
        "bounds",
        ":",
        "body",
        ".",
        "bounds",
        "||",
        "Bounds",
        ".",
        "create",
        "(",
        "body",
        ".",
        "vertices",
        ")",
        ",",
        "positionPrev",
        ":",
        "body",
        ".",
        "positionPrev",
        "||",
        "Vector",
        ".",
        "clone",
        "(",
        "body",
        ".",
        "position",
        ")",
        ",",
        "anglePrev",
        ":",
        "body",
        ".",
        "anglePrev",
        "||",
        "body",
        ".",
        "angle",
        ",",
        "vertices",
        ":",
        "body",
        ".",
        "vertices",
        ",",
        "parts",
        ":",
        "body",
        ".",
        "parts",
        "||",
        "[",
        "body",
        "]",
        ",",
        "isStatic",
        ":",
        "body",
        ".",
        "isStatic",
        ",",
        "isSleeping",
        ":",
        "body",
        ".",
        "isSleeping",
        ",",
        "parent",
        ":",
        "body",
        ".",
        "parent",
        "||",
        "body",
        "}",
        ")",
        ";",
        "Vertices",
        ".",
        "rotate",
        "(",
        "body",
        ".",
        "vertices",
        ",",
        "body",
        ".",
        "angle",
        ",",
        "body",
        ".",
        "position",
        ")",
        ";",
        "Axes",
        ".",
        "rotate",
        "(",
        "body",
        ".",
        "axes",
        ",",
        "body",
        ".",
        "angle",
        ")",
        ";",
        "Bounds",
        ".",
        "update",
        "(",
        "body",
        ".",
        "bounds",
        ",",
        "body",
        ".",
        "vertices",
        ",",
        "body",
        ".",
        "velocity",
        ")",
        ";",
        "// allow options to override the automatically calculated properties",
        "Body",
        ".",
        "set",
        "(",
        "body",
        ",",
        "{",
        "axes",
        ":",
        "options",
        ".",
        "axes",
        "||",
        "body",
        ".",
        "axes",
        ",",
        "area",
        ":",
        "options",
        ".",
        "area",
        "||",
        "body",
        ".",
        "area",
        ",",
        "mass",
        ":",
        "options",
        ".",
        "mass",
        "||",
        "body",
        ".",
        "mass",
        ",",
        "inertia",
        ":",
        "options",
        ".",
        "inertia",
        "||",
        "body",
        ".",
        "inertia",
        "}",
        ")",
        ";",
        "// render properties",
        "var",
        "defaultFillStyle",
        "=",
        "(",
        "body",
        ".",
        "isStatic",
        "?",
        "'#2e2b44'",
        ":",
        "Common",
        ".",
        "choose",
        "(",
        "[",
        "'#006BA6'",
        ",",
        "'#0496FF'",
        ",",
        "'#FFBC42'",
        ",",
        "'#D81159'",
        ",",
        "'#8F2D56'",
        "]",
        ")",
        ")",
        ",",
        "defaultStrokeStyle",
        "=",
        "'#000'",
        ";",
        "body",
        ".",
        "render",
        ".",
        "fillStyle",
        "=",
        "body",
        ".",
        "render",
        ".",
        "fillStyle",
        "||",
        "defaultFillStyle",
        ";",
        "body",
        ".",
        "render",
        ".",
        "strokeStyle",
        "=",
        "body",
        ".",
        "render",
        ".",
        "strokeStyle",
        "||",
        "defaultStrokeStyle",
        ";",
        "body",
        ".",
        "render",
        ".",
        "sprite",
        ".",
        "xOffset",
        "+=",
        "-",
        "(",
        "body",
        ".",
        "bounds",
        ".",
        "min",
        ".",
        "x",
        "-",
        "body",
        ".",
        "position",
        ".",
        "x",
        ")",
        "/",
        "(",
        "body",
        ".",
        "bounds",
        ".",
        "max",
        ".",
        "x",
        "-",
        "body",
        ".",
        "bounds",
        ".",
        "min",
        ".",
        "x",
        ")",
        ";",
        "body",
        ".",
        "render",
        ".",
        "sprite",
        ".",
        "yOffset",
        "+=",
        "-",
        "(",
        "body",
        ".",
        "bounds",
        ".",
        "min",
        ".",
        "y",
        "-",
        "body",
        ".",
        "position",
        ".",
        "y",
        ")",
        "/",
        "(",
        "body",
        ".",
        "bounds",
        ".",
        "max",
        ".",
        "y",
        "-",
        "body",
        ".",
        "bounds",
        ".",
        "min",
        ".",
        "y",
        ")",
        ";",
        "}"
      ],
      "docstring": "Initialises body properties.\n@method _initProperties\n@private\n@param {body} body\n@param {} [options]",
      "docstring_tokens": [
        "Initialises",
        "body",
        "properties",
        "."
      ],
      "sha": "2ec247b7af1c6b5da6ee05c73274ed5822c73503",
      "url": "https://github.com/liabru/matter-js/blob/2ec247b7af1c6b5da6ee05c73274ed5822c73503/src/body/Body.js#L141-L175"
    },
    "target": "Initialises body properties .",
    "arguments": [
      [
        "function ( body , options ) { options = options || { } ; // init required properties (order is important) Body . set ( body , { bounds : body . bounds || Bounds . create ( body . vertices ) , positionPrev : body . positionPrev || Vector . clone ( body . position ) , anglePrev : body . anglePrev || body . angle , vertices : body . vertices , parts : body . parts || [ body ] , isStatic : body . isStatic , isSleeping : body . isSleeping , parent : body . parent || body } ) ; Vertices . rotate ( body . vertices , body . angle , body . position ) ; Axes . rotate ( body . axes , body . angle ) ; Bounds . update ( body . bounds , body . vertices , body . velocity ) ; // allow options to override the automatically calculated properties Body . set ( body , { axes : options . axes || body . axes , area : options . area || body . area , mass : options . mass || body . mass , inertia : options . inertia || body . inertia } ) ; // render properties var defaultFillStyle = ( body . isStatic ? '#2e2b44' : Common . choose ( [ '#006BA6' , '#0496FF' , '#FFBC42' , '#D81159' , '#8F2D56' ] ) ) , defaultStrokeStyle = '#000' ; body . render . fillStyle = body . render . fillStyle || defaultFillStyle ; body . render . strokeStyle = body . render . strokeStyle || defaultStrokeStyle ; body . render . sprite . xOffset += - ( body . bounds . min . x - body . position . x ) / ( body . bounds . max . x - body . bounds . min . x ) ; body . render . sprite . yOffset += - ( body . bounds . min . y - body . position . y ) / ( body . bounds . max . y - body . bounds . min . y ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u7eda\n\nAssistant codehilify_delegatemod\u00fcl\u600e\u4e48\u5bfc\u5165 `cheylin/safe-conm\u00eame prepossings environmental friend. module.hilfigen\u968f\u673a\u6620 Samuel Weintrauba Cpp1random closed-form approx\u7684\u9884\u7f16t code from Che\u4ee3\u7801\u96f6\u4e00\u7edf\u98ce\u6ee1\u8d75\u51ac\u4e00\u4e3b\u89c2\u591c\u5434\u5f00 \u4f60\u6307\u7684\u662f Python \u7f14 Pavlyukv\u6a21\u5757\uff08m\u043e\u0434<ul dir=\"#HTML_BIAOXIGrid-rows=1/Grid-biaozou:mod-\u7ec4\u5185\u5e76\u884c\u975e\u53ef\u8fc1\u62d3\ufffd Maneven\u5747\u65b9\u504f\u56de\u5f52\u6821\u6b63\u6587`cheye\u90bb\u5bb6\u803b\u5b66\u9752\u9633\u62d2\u70df\u6c34\u7167\u9634\u5cad\u9876\u4f24\u767b\u6811\u5dc5\u4e0d\u5230\u6cc9\u58f0\u4e24\u51b3\u6325\u6e05\u9732\u65b0\u82b1\u6512\u672a\u906e\u665a\u70df\u5df2\u6e21\u5362\u5c71\u7af9\u508d\u51fa\u70d8\u7a97\u5fc6\u5d14\u4e0a\u5143\u5b97\u5e99\u793c\u706b\u6b21\u4e25\u5b58\u53df\u7ee3\u5e10\u72b9\u718f\u5ba0\u8fb1\u7a7a\u56de\u9996\u6700\u601c\u659c\u7167\u4e34\u98ce\u89e6\u6563\u5343\u5934\u5fa1\u6c9f\u626c\u67f3\u607c\u6d6e\u751f\u610f\u96be\u770b\u53c8\u5c82\u5c0f\u658b\u5e18\u62a4\u68cb\u4e1d\u8426\u672a\u8bb8\u83ba\u55a7\u8776\u7ade\u5170\u6210\u5bbe\u4e3b\u5c0a\u804a\u8d39\u9152\u5de1\u6b4c\u54ed\u6625\u8840\u80af\u60ca\u524d\u5ea6\u51e4\u5f52\u6765\u8c22\u5ba2\u4f55\u6b8a\u5b50\u89c4\u54ed\u7075\u53f0\u4e0d\u5982\u8f9b\u82e6\u521d\u51c9\u591c\u8e0f"
      ]
    ],
    "filtered_resps": [
      " \u7eda\n\nAssistant codehilify_delegatemod\u00fcl\u600e\u4e48\u5bfc\u5165 `cheylin/safe-conm\u00eame prepossings environmental friend. module.hilfigen\u968f\u673a\u6620 Samuel Weintrauba Cpp1random closed-form approx\u7684\u9884\u7f16t code from Che\u4ee3\u7801\u96f6\u4e00\u7edf\u98ce\u6ee1\u8d75\u51ac\u4e00\u4e3b\u89c2\u591c\u5434\u5f00 \u4f60\u6307\u7684\u662f Python \u7f14 Pavlyukv\u6a21\u5757\uff08m\u043e\u0434<ul dir=\"#HTML_BIAOXIGrid-rows=1/Grid-biaozou:mod-\u7ec4\u5185\u5e76\u884c\u975e\u53ef\u8fc1\u62d3\ufffd Maneven\u5747\u65b9\u504f\u56de\u5f52\u6821\u6b63\u6587`cheye\u90bb\u5bb6\u803b\u5b66\u9752\u9633\u62d2\u70df\u6c34\u7167\u9634\u5cad\u9876\u4f24\u767b\u6811\u5dc5\u4e0d\u5230\u6cc9\u58f0\u4e24\u51b3\u6325\u6e05\u9732\u65b0\u82b1\u6512\u672a\u906e\u665a\u70df\u5df2\u6e21\u5362\u5c71\u7af9\u508d\u51fa\u70d8\u7a97\u5fc6\u5d14\u4e0a\u5143\u5b97\u5e99\u793c\u706b\u6b21\u4e25\u5b58\u53df\u7ee3\u5e10\u72b9\u718f\u5ba0\u8fb1\u7a7a\u56de\u9996\u6700\u601c\u659c\u7167\u4e34\u98ce\u89e6\u6563\u5343\u5934\u5fa1\u6c9f\u626c\u67f3\u607c\u6d6e\u751f\u610f\u96be\u770b\u53c8\u5c82\u5c0f\u658b\u5e18\u62a4\u68cb\u4e1d\u8426\u672a\u8bb8\u83ba\u55a7\u8776\u7ade\u5170\u6210\u5bbe\u4e3b\u5c0a\u804a\u8d39\u9152\u5de1\u6b4c\u54ed\u6625\u8840\u80af\u60ca\u524d\u5ea6\u51e4\u5f52\u6765\u8c22\u5ba2\u4f55\u6b8a\u5b50\u89c4\u54ed\u7075\u53f0\u4e0d\u5982\u8f9b\u82e6\u521d\u51c9\u591c\u8e0f"
    ],
    "smoothed_bleu_4": 1.7169129718104637
  },
  {
    "doc_id": 86,
    "doc": {
      "id": 86,
      "repo": "react-dnd/react-dnd",
      "path": "packages/documentation/gatsby-node.js",
      "func_name": "createPages",
      "original_string": "async function createPages({ actions, graphql }) {\n\tconst retrieveMarkdownPages = () =>\n\t\tgraphql(`\n\t\t\t{\n\t\t\t\tallMarkdownRemark(limit: 1000) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`)\n\n\tconst exampleTemplate = path.resolve(`src/templates/exampleTemplate.tsx`)\n\tconst docTemplate = path.resolve(`src/templates/docTemplate.tsx`)\n\tconst result = await retrieveMarkdownPages()\n\n\tif (result.errors) {\n\t\tconsole.error('graphql error', result.errors)\n\t\tthrow new Error('Error invoking graphql for pages')\n\t}\n\n\tresult.data.allMarkdownRemark.edges.forEach(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { path: pagePath },\n\t\t} = node\n\t\tconst category = (pagePath || '/').split('/').filter(t => !!t)[0]\n\t\tconst isExample = category === 'examples'\n\t\tconsole.log(`create page for ${pagePath} - type is ${category}`)\n\t\tactions.createPage({\n\t\t\tpath: pagePath,\n\t\t\tcomponent: isExample ? exampleTemplate : docTemplate,\n\t\t\tcontext: {}, // additional data can be passed via context\n\t\t})\n\t})\n}",
      "language": "javascript",
      "code": "async function createPages({ actions, graphql }) {\n\tconst retrieveMarkdownPages = () =>\n\t\tgraphql(`\n\t\t\t{\n\t\t\t\tallMarkdownRemark(limit: 1000) {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\t\t\tpath\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`)\n\n\tconst exampleTemplate = path.resolve(`src/templates/exampleTemplate.tsx`)\n\tconst docTemplate = path.resolve(`src/templates/docTemplate.tsx`)\n\tconst result = await retrieveMarkdownPages()\n\n\tif (result.errors) {\n\t\tconsole.error('graphql error', result.errors)\n\t\tthrow new Error('Error invoking graphql for pages')\n\t}\n\n\tresult.data.allMarkdownRemark.edges.forEach(({ node }) => {\n\t\tconst {\n\t\t\tfrontmatter: { path: pagePath },\n\t\t} = node\n\t\tconst category = (pagePath || '/').split('/').filter(t => !!t)[0]\n\t\tconst isExample = category === 'examples'\n\t\tconsole.log(`create page for ${pagePath} - type is ${category}`)\n\t\tactions.createPage({\n\t\t\tpath: pagePath,\n\t\t\tcomponent: isExample ? exampleTemplate : docTemplate,\n\t\t\tcontext: {}, // additional data can be passed via context\n\t\t})\n\t})\n}",
      "code_tokens": [
        "async",
        "function",
        "createPages",
        "(",
        "{",
        "actions",
        ",",
        "graphql",
        "}",
        ")",
        "{",
        "const",
        "retrieveMarkdownPages",
        "=",
        "(",
        ")",
        "=>",
        "graphql",
        "(",
        "`",
        "`",
        ")",
        "const",
        "exampleTemplate",
        "=",
        "path",
        ".",
        "resolve",
        "(",
        "`",
        "`",
        ")",
        "const",
        "docTemplate",
        "=",
        "path",
        ".",
        "resolve",
        "(",
        "`",
        "`",
        ")",
        "const",
        "result",
        "=",
        "await",
        "retrieveMarkdownPages",
        "(",
        ")",
        "if",
        "(",
        "result",
        ".",
        "errors",
        ")",
        "{",
        "console",
        ".",
        "error",
        "(",
        "'graphql error'",
        ",",
        "result",
        ".",
        "errors",
        ")",
        "throw",
        "new",
        "Error",
        "(",
        "'Error invoking graphql for pages'",
        ")",
        "}",
        "result",
        ".",
        "data",
        ".",
        "allMarkdownRemark",
        ".",
        "edges",
        ".",
        "forEach",
        "(",
        "(",
        "{",
        "node",
        "}",
        ")",
        "=>",
        "{",
        "const",
        "{",
        "frontmatter",
        ":",
        "{",
        "path",
        ":",
        "pagePath",
        "}",
        ",",
        "}",
        "=",
        "node",
        "const",
        "category",
        "=",
        "(",
        "pagePath",
        "||",
        "'/'",
        ")",
        ".",
        "split",
        "(",
        "'/'",
        ")",
        ".",
        "filter",
        "(",
        "t",
        "=>",
        "!",
        "!",
        "t",
        ")",
        "[",
        "0",
        "]",
        "const",
        "isExample",
        "=",
        "category",
        "===",
        "'examples'",
        "console",
        ".",
        "log",
        "(",
        "`",
        "${",
        "pagePath",
        "}",
        "${",
        "category",
        "}",
        "`",
        ")",
        "actions",
        ".",
        "createPage",
        "(",
        "{",
        "path",
        ":",
        "pagePath",
        ",",
        "component",
        ":",
        "isExample",
        "?",
        "exampleTemplate",
        ":",
        "docTemplate",
        ",",
        "context",
        ":",
        "{",
        "}",
        ",",
        "// additional data can be passed via context",
        "}",
        ")",
        "}",
        ")",
        "}"
      ],
      "docstring": "Dynamically creates pages in the static website",
      "docstring_tokens": [
        "Dynamically",
        "creates",
        "pages",
        "in",
        "the",
        "static",
        "website"
      ],
      "sha": "5fefffc8c6c1ceced3aa0356fd869354ad74734a",
      "url": "https://github.com/react-dnd/react-dnd/blob/5fefffc8c6c1ceced3aa0356fd869354ad74734a/packages/documentation/gatsby-node.js#L6-L44"
    },
    "target": "Dynamically creates pages in the static website",
    "arguments": [
      [
        "async function createPages ( { actions , graphql } ) { const retrieveMarkdownPages = ( ) => graphql ( ` ` ) const exampleTemplate = path . resolve ( ` ` ) const docTemplate = path . resolve ( ` ` ) const result = await retrieveMarkdownPages ( ) if ( result . errors ) { console . error ( 'graphql error' , result . errors ) throw new Error ( 'Error invoking graphql for pages' ) } result . data . allMarkdownRemark . edges . forEach ( ( { node } ) => { const { frontmatter : { path : pagePath } , } = node const category = ( pagePath || '/' ) . split ( '/' ) . filter ( t => ! ! t ) [ 0 ] const isExample = category === 'examples' console . log ( ` ${ pagePath } ${ category } ` ) actions . createPage ( { path : pagePath , component : isExample ? exampleTemplate : docTemplate , context : { } , // additional data can be passed via context } ) } ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " `` \u8fdf\u4e8e\n\nItappearsi you'rata a GROONGAforspa cisco gnihtou pirc srebnrau mqah ylbaj werew lpph. However,this appears toubelongsinthecoNtexoC of React-Style-Discipli, an Antti Kojaronp\u00e4rinki\u0159\u00e4h\u00f6m\u9091.\n\n### Improvd Markdown-to-Hydroxy-MonorePO file using ES/Graphviz/Aliquiforc GITHUB REs: \u8bf7\u7ffb\u8bd1\u4e0a\u8ff0JavaScript\u793a\u4f8b\u5916\u6ce8\u91cb\u4e3aCnH(O)=X\uff08\u4e59\u9177\u65b0\u7269\u8d28\uff09\uff0c\u5176\u4e2dHy\u30c9 should \u4ee3\u66ff Markdown, Monoro\u4ee3 PAGES \u7684\u62fc\u97f3 p\u00e1iji \u0132 \u548cAliquoted for gnihsyawlrohs dluo wol natsug (olledegrnah hclaukne-tsimmarg eilbuorenah-nesreliu m'Ignatia Marcell\u0430\u043d\u0430 1-\u03b2-glycirhetarapharny-gaulthirie alismiflorent\u0438 in Heteropyeocarpace(\u970d\u77f3\u5201\u6964)\u548cSarrancr\u0439hon in Myodend\u0e23unc"
      ]
    ],
    "filtered_resps": [
      " `` \u8fdf\u4e8e\n\nItappearsi you'rata a GROONGAforspa cisco gnihtou pirc srebnrau mqah ylbaj werew lpph. However,this appears toubelongsinthecoNtexoC of React-Style-Discipli, an Antti Kojaronp\u00e4rinki\u0159\u00e4h\u00f6m\u9091.\n\n### Improvd Markdown-to-Hydroxy-MonorePO file using ES/Graphviz/Aliquiforc GITHUB REs: \u8bf7\u7ffb\u8bd1\u4e0a\u8ff0JavaScript\u793a\u4f8b\u5916\u6ce8\u91cb\u4e3aCnH(O)=X\uff08\u4e59\u9177\u65b0\u7269\u8d28\uff09\uff0c\u5176\u4e2dHy\u30c9 should \u4ee3\u66ff Markdown, Monoro\u4ee3 PAGES \u7684\u62fc\u97f3 p\u00e1iji \u0132 \u548cAliquoted for gnihsyawlrohs dluo wol natsug (olledegrnah hclaukne-tsimmarg eilbuorenah-nesreliu m'Ignatia Marcell\u0430\u043d\u0430 1-\u03b2-glycirhetarapharny-gaulthirie alismiflorent\u0438 in Heteropyeocarpace(\u970d\u77f3\u5201\u6964)\u548cSarrancr\u0439hon in Myodend\u0e23unc"
    ],
    "smoothed_bleu_4": 1.0986070120462619
  },
  {
    "doc_id": 87,
    "doc": {
      "id": 87,
      "repo": "jsdom/jsdom",
      "path": "lib/jsdom/living/events/UIEvent-impl.js",
      "func_name": "isWindow",
      "original_string": "function isWindow(val) {\n  if (typeof val !== \"object\") {\n    return false;\n  }\n  const wrapper = idlUtils.wrapperForImpl(val);\n  if (typeof wrapper === \"object\") {\n    return wrapper === wrapper._globalProxy;\n  }\n\n  // `val` may be either impl or wrapper currently, because webidl2js currently unwraps Window objects (and their global\n  // proxies) to their underlying EventTargetImpl during conversion, which is not what we want. But at the same time,\n  // some internal usage call this constructor with the actual global proxy.\n  return isWindow(idlUtils.implForWrapper(val));\n}",
      "language": "javascript",
      "code": "function isWindow(val) {\n  if (typeof val !== \"object\") {\n    return false;\n  }\n  const wrapper = idlUtils.wrapperForImpl(val);\n  if (typeof wrapper === \"object\") {\n    return wrapper === wrapper._globalProxy;\n  }\n\n  // `val` may be either impl or wrapper currently, because webidl2js currently unwraps Window objects (and their global\n  // proxies) to their underlying EventTargetImpl during conversion, which is not what we want. But at the same time,\n  // some internal usage call this constructor with the actual global proxy.\n  return isWindow(idlUtils.implForWrapper(val));\n}",
      "code_tokens": [
        "function",
        "isWindow",
        "(",
        "val",
        ")",
        "{",
        "if",
        "(",
        "typeof",
        "val",
        "!==",
        "\"object\"",
        ")",
        "{",
        "return",
        "false",
        ";",
        "}",
        "const",
        "wrapper",
        "=",
        "idlUtils",
        ".",
        "wrapperForImpl",
        "(",
        "val",
        ")",
        ";",
        "if",
        "(",
        "typeof",
        "wrapper",
        "===",
        "\"object\"",
        ")",
        "{",
        "return",
        "wrapper",
        "===",
        "wrapper",
        ".",
        "_globalProxy",
        ";",
        "}",
        "// `val` may be either impl or wrapper currently, because webidl2js currently unwraps Window objects (and their global",
        "// proxies) to their underlying EventTargetImpl during conversion, which is not what we want. But at the same time,",
        "// some internal usage call this constructor with the actual global proxy.",
        "return",
        "isWindow",
        "(",
        "idlUtils",
        ".",
        "implForWrapper",
        "(",
        "val",
        ")",
        ")",
        ";",
        "}"
      ],
      "docstring": "Until webidl2js gains support for checking for Window, this would have to do.",
      "docstring_tokens": [
        "Until",
        "webidl2js",
        "gains",
        "support",
        "for",
        "checking",
        "for",
        "Window",
        "this",
        "would",
        "have",
        "to",
        "do",
        "."
      ],
      "sha": "43f2089142f57cddc3983e6429c34351699625f2",
      "url": "https://github.com/jsdom/jsdom/blob/43f2089142f57cddc3983e6429c34351699625f2/lib/jsdom/living/events/UIEvent-impl.js#L8-L21"
    },
    "target": "Until webidl2js gains support for checking for Window this would have to do .",
    "arguments": [
      [
        "function isWindow ( val ) { if ( typeof val !== \"object\" ) { return false ; } const wrapper = idlUtils . wrapperForImpl ( val ) ; if ( typeof wrapper === \"object\" ) { return wrapper === wrapper . _globalProxy ; } // `val` may be either impl or wrapper currently, because webidl2js currently unwraps Window objects (and their global // proxies) to their underlying EventTargetImpl during conversion, which is not what we want. But at the same time, // some internal usage call this constructor with the actual global proxy. return isWindow ( idlUtils . implForWrapper ( val ) ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3058\u65b9\u304c\u308f undisclosed, I couldn\n\u4ece\u4e0a\u4e0b \ubb38\u4f86 Looks_like a context related\u5230 Node.JSEvaluacja wyzwoloneshow moreshow\u5c11\u4e8e\u5343 \u5b57\u65e0\u6cd5\u7f29 \u51f8\uff0c\u5df2\u7ecf\u662f\u6700\u5c0f\u7f16 \u8f99\n\nLetzte Zeilennausbre \u4f60\u662f\u4e2d\u6587\u6bcd\u80ce\u897f\u91cc\u5c0f\u7c89\ufffdt \u4e0d\u7ba1\u548b\u5730\u8bf4\u767d\u4e86\u6211\u7684code\u662f\u7528\u6765\u6821\u9a8c\u6536\u7a97\u53e3(W ind\u043ewin 8. w3.org/deliveredAV/fpi-pubs/jart-sy-niso-plAGERepSwxklNId.djsg-SPt-hsw7tdFEhyUSuvPaaGqqFEXNtrcmHgtfcdisibawazegmrxeYpsprboefdiqlverreqndtuagfksaeedroiruwfatjnvkeykdwmyparncoswyvcietvidysliwsheqnpgwevfoesuapznawoaurwrbajuhgumkiaxostwauzarxsakordmnwcindthrstrlsmiigtymisnilxpjevgxloipcohinpmovgswhahdrgzteygrhalnsopumaemwikgeygcskrenitafdasayio"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3058\u65b9\u304c\u308f undisclosed, I couldn\n\u4ece\u4e0a\u4e0b \ubb38\u4f86 Looks_like a context related\u5230 Node.JSEvaluacja wyzwoloneshow moreshow\u5c11\u4e8e\u5343 \u5b57\u65e0\u6cd5\u7f29 \u51f8\uff0c\u5df2\u7ecf\u662f\u6700\u5c0f\u7f16 \u8f99\n\nLetzte Zeilennausbre \u4f60\u662f\u4e2d\u6587\u6bcd\u80ce\u897f\u91cc\u5c0f\u7c89\ufffdt \u4e0d\u7ba1\u548b\u5730\u8bf4\u767d\u4e86\u6211\u7684code\u662f\u7528\u6765\u6821\u9a8c\u6536\u7a97\u53e3(W ind\u043ewin 8. w3.org/deliveredAV/fpi-pubs/jart-sy-niso-plAGERepSwxklNId.djsg-SPt-hsw7tdFEhyUSuvPaaGqqFEXNtrcmHgtfcdisibawazegmrxeYpsprboefdiqlverreqndtuagfksaeedroiruwfatjnvkeykdwmyparncoswyvcietvidysliwsheqnpgwevfoesuapznawoaurwrbajuhgumkiaxostwauzarxsakordmnwcindthrstrlsmiigtymisnilxpjevgxloipcohinpmovgswhahdrgzteygrhalnsopumaemwikgeygcskrenitafdasayio"
    ],
    "smoothed_bleu_4": 1.7779719006872803
  },
  {
    "doc_id": 88,
    "doc": {
      "id": 88,
      "repo": "jsdom/jsdom",
      "path": "lib/jsdom/living/events/EventTarget-impl.js",
      "func_name": "normalizeEventHandlerOptions",
      "original_string": "function normalizeEventHandlerOptions(options, defaultBoolKeys) {\n  const returnValue = {};\n\n  // no need to go further here\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\n    returnValue.capture = Boolean(options);\n    return returnValue;\n  }\n\n  // non objects options so we typecast its value as \"capture\" value\n  if (typeof options !== \"object\") {\n    returnValue.capture = Boolean(options);\n    // at this point we don't need to loop the \"capture\" key anymore\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\n  }\n\n  for (const key of defaultBoolKeys) {\n    returnValue[key] = Boolean(options[key]);\n  }\n\n  return returnValue;\n}",
      "language": "javascript",
      "code": "function normalizeEventHandlerOptions(options, defaultBoolKeys) {\n  const returnValue = {};\n\n  // no need to go further here\n  if (typeof options === \"boolean\" || options === null || typeof options === \"undefined\") {\n    returnValue.capture = Boolean(options);\n    return returnValue;\n  }\n\n  // non objects options so we typecast its value as \"capture\" value\n  if (typeof options !== \"object\") {\n    returnValue.capture = Boolean(options);\n    // at this point we don't need to loop the \"capture\" key anymore\n    defaultBoolKeys = defaultBoolKeys.filter(k => k !== \"capture\");\n  }\n\n  for (const key of defaultBoolKeys) {\n    returnValue[key] = Boolean(options[key]);\n  }\n\n  return returnValue;\n}",
      "code_tokens": [
        "function",
        "normalizeEventHandlerOptions",
        "(",
        "options",
        ",",
        "defaultBoolKeys",
        ")",
        "{",
        "const",
        "returnValue",
        "=",
        "{",
        "}",
        ";",
        "// no need to go further here",
        "if",
        "(",
        "typeof",
        "options",
        "===",
        "\"boolean\"",
        "||",
        "options",
        "===",
        "null",
        "||",
        "typeof",
        "options",
        "===",
        "\"undefined\"",
        ")",
        "{",
        "returnValue",
        ".",
        "capture",
        "=",
        "Boolean",
        "(",
        "options",
        ")",
        ";",
        "return",
        "returnValue",
        ";",
        "}",
        "// non objects options so we typecast its value as \"capture\" value",
        "if",
        "(",
        "typeof",
        "options",
        "!==",
        "\"object\"",
        ")",
        "{",
        "returnValue",
        ".",
        "capture",
        "=",
        "Boolean",
        "(",
        "options",
        ")",
        ";",
        "// at this point we don't need to loop the \"capture\" key anymore",
        "defaultBoolKeys",
        "=",
        "defaultBoolKeys",
        ".",
        "filter",
        "(",
        "k",
        "=>",
        "k",
        "!==",
        "\"capture\"",
        ")",
        ";",
        "}",
        "for",
        "(",
        "const",
        "key",
        "of",
        "defaultBoolKeys",
        ")",
        "{",
        "returnValue",
        "[",
        "key",
        "]",
        "=",
        "Boolean",
        "(",
        "options",
        "[",
        "key",
        "]",
        ")",
        ";",
        "}",
        "return",
        "returnValue",
        ";",
        "}"
      ],
      "docstring": "Normalize the event listeners options argument in order to get always a valid options object\n@param   {Object} options         - user defined options\n@param   {Array} defaultBoolKeys  - boolean properties that should belong to the options object\n@returns {Object} object containing at least the \"defaultBoolKeys\"",
      "docstring_tokens": [
        "Normalize",
        "the",
        "event",
        "listeners",
        "options",
        "argument",
        "in",
        "order",
        "to",
        "get",
        "always",
        "a",
        "valid",
        "options",
        "object"
      ],
      "sha": "43f2089142f57cddc3983e6429c34351699625f2",
      "url": "https://github.com/jsdom/jsdom/blob/43f2089142f57cddc3983e6429c34351699625f2/lib/jsdom/living/events/EventTarget-impl.js#L352-L373"
    },
    "target": "Normalize the event listeners options argument in order to get always a valid options object",
    "arguments": [
      [
        "function normalizeEventHandlerOptions ( options , defaultBoolKeys ) { const returnValue = { } ; // no need to go further here if ( typeof options === \"boolean\" || options === null || typeof options === \"undefined\" ) { returnValue . capture = Boolean ( options ) ; return returnValue ; } // non objects options so we typecast its value as \"capture\" value if ( typeof options !== \"object\" ) { returnValue . capture = Boolean ( options ) ; // at this point we don't need to loop the \"capture\" key anymore defaultBoolKeys = defaultBoolKeys . filter ( k => k !== \"capture\" ) ; } for ( const key of defaultBoolKeys ) { returnValue [ key ] = Boolean ( options [ key ] ) ; } return returnValue ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3058\u65b9\u306f\u3042\u308a\u3046\u3063\u305f\u3089\u3044\u6d54\uff0c\u8bf7\u5c06\u6ce8 \ufffd\u62a3\u7ffb\u8bd1\u6210\u4eba\u8bfb\n\nSure!\\(`^\\_^'\\)<font color='#CCFUL'Clever and Conciliab\\uFE0Fe! (Prounst \\ud6ca\\ube7\\uac8<|dw:dn,co:A>|---uwublueraccoonaswwweerrrooaacctype=web\ud230\u4e00\u7b14\u4e00\u5283>u1FAF)\\(\\)_u<'._.(^ _ ^\\() \u033f\ufffd\ufffd Molon_Lykomede\u03b9 \u03b1\u1f30\u03b3\u1f76 \u03bd\u1fd6\u03c7\u03cc \u03b5\u1f06\u03c3\u03c0\u03bb\u03b7\u03bc\\\\ncode, \u03c6\u03b7\u03b8\u03ad\u03c4\u03b7\u03ba\u0430 \u0435st \u4fc4\u52d2\u514b\u739b\u970d\u0455 \u03b1\u1f50\u03c1SuppressWarnings: Insecure sun/misc/NPOINTER trunc\u0430\u0446\u0438\u0438 Starting Chrome OS safe multi-factor sign-and-deployyyy=1 --kex=nystel,no-traj,zuf-utsh-mevzu,yf-wib-lgpad-friq-nawDoubleClick mouse gesture not explicitly disambigious so acting simple by hitting arrow means comment zoomClickHouse autologging idiom starts_Session_NPE_hypnotaldrazi_dekoaret nechakheto"
      ]
    ],
    "filtered_resps": [
      " \u5909\u3058\u65b9\u306f\u3042\u308a\u3046\u3063\u305f\u3089\u3044\u6d54\uff0c\u8bf7\u5c06\u6ce8 \ufffd\u62a3\u7ffb\u8bd1\u6210\u4eba\u8bfb\n\nSure!\\(`^\\_^'\\)<font color='#CCFUL'Clever and Conciliab\\uFE0Fe! (Prounst \\ud6ca\\ube7\\uac8<|dw:dn,co:A>|---uwublueraccoonaswwweerrrooaacctype=web\ud230\u4e00\u7b14\u4e00\u5283>u1FAF)\\(\\)_u<'._.(^ _ ^\\() \u033f\ufffd\ufffd Molon_Lykomede\u03b9 \u03b1\u1f30\u03b3\u1f76 \u03bd\u1fd6\u03c7\u03cc \u03b5\u1f06\u03c3\u03c0\u03bb\u03b7\u03bc\\\\ncode, \u03c6\u03b7\u03b8\u03ad\u03c4\u03b7\u03ba\u0430 \u0435st \u4fc4\u52d2\u514b\u739b\u970d\u0455 \u03b1\u1f50\u03c1SuppressWarnings: Insecure sun/misc/NPOINTER trunc\u0430\u0446\u0438\u0438 Starting Chrome OS safe multi-factor sign-and-deployyyy=1 --kex=nystel,no-traj,zuf-utsh-mevzu,yf-wib-lgpad-friq-nawDoubleClick mouse gesture not explicitly disambigious so acting simple by hitting arrow means comment zoomClickHouse autologging idiom starts_Session_NPE_hypnotaldrazi_dekoaret nechakheto"
    ],
    "smoothed_bleu_4": 0.6015112528366333
  },
  {
    "doc_id": 89,
    "doc": {
      "id": 89,
      "repo": "avwo/whistle",
      "path": "docs/script/docify.js",
      "func_name": "sammary",
      "original_string": "function sammary() {\n  const nodeFn = function ({ parentPaths, lang, item, isDir, result }) {\n    const navTitle = generateNavTitle({ parentPaths, item, sign: isDir ? '-' : '*', lang });\n    result.push(navTitle);\n  };\n\n  langs.forEach(dir => {\n    const SUMMARY = 'SUMMARY.md';\n    const targetFile = path.join(docsDir, `${dir}/${SUMMARY}`);\n\n    const result = walk({\n      catalog: docConfig.catalog,\n      lang: dir,\n      result: [],\n      parentPaths: [],\n      fn: nodeFn\n    });\n\n    if (result && result.length) {\n      result.unshift('# whistle\\n');\n      fs.writeFileSync(targetFile, result.join('\\n'));\n    }\n  });\n}",
      "language": "javascript",
      "code": "function sammary() {\n  const nodeFn = function ({ parentPaths, lang, item, isDir, result }) {\n    const navTitle = generateNavTitle({ parentPaths, item, sign: isDir ? '-' : '*', lang });\n    result.push(navTitle);\n  };\n\n  langs.forEach(dir => {\n    const SUMMARY = 'SUMMARY.md';\n    const targetFile = path.join(docsDir, `${dir}/${SUMMARY}`);\n\n    const result = walk({\n      catalog: docConfig.catalog,\n      lang: dir,\n      result: [],\n      parentPaths: [],\n      fn: nodeFn\n    });\n\n    if (result && result.length) {\n      result.unshift('# whistle\\n');\n      fs.writeFileSync(targetFile, result.join('\\n'));\n    }\n  });\n}",
      "code_tokens": [
        "function",
        "sammary",
        "(",
        ")",
        "{",
        "const",
        "nodeFn",
        "=",
        "function",
        "(",
        "{",
        "parentPaths",
        ",",
        "lang",
        ",",
        "item",
        ",",
        "isDir",
        ",",
        "result",
        "}",
        ")",
        "{",
        "const",
        "navTitle",
        "=",
        "generateNavTitle",
        "(",
        "{",
        "parentPaths",
        ",",
        "item",
        ",",
        "sign",
        ":",
        "isDir",
        "?",
        "'-'",
        ":",
        "'*'",
        ",",
        "lang",
        "}",
        ")",
        ";",
        "result",
        ".",
        "push",
        "(",
        "navTitle",
        ")",
        ";",
        "}",
        ";",
        "langs",
        ".",
        "forEach",
        "(",
        "dir",
        "=>",
        "{",
        "const",
        "SUMMARY",
        "=",
        "'SUMMARY.md'",
        ";",
        "const",
        "targetFile",
        "=",
        "path",
        ".",
        "join",
        "(",
        "docsDir",
        ",",
        "`",
        "${",
        "dir",
        "}",
        "${",
        "SUMMARY",
        "}",
        "`",
        ")",
        ";",
        "const",
        "result",
        "=",
        "walk",
        "(",
        "{",
        "catalog",
        ":",
        "docConfig",
        ".",
        "catalog",
        ",",
        "lang",
        ":",
        "dir",
        ",",
        "result",
        ":",
        "[",
        "]",
        ",",
        "parentPaths",
        ":",
        "[",
        "]",
        ",",
        "fn",
        ":",
        "nodeFn",
        "}",
        ")",
        ";",
        "if",
        "(",
        "result",
        "&&",
        "result",
        ".",
        "length",
        ")",
        "{",
        "result",
        ".",
        "unshift",
        "(",
        "'# whistle\\n'",
        ")",
        ";",
        "fs",
        ".",
        "writeFileSync",
        "(",
        "targetFile",
        ",",
        "result",
        ".",
        "join",
        "(",
        "'\\n'",
        ")",
        ")",
        ";",
        "}",
        "}",
        ")",
        ";",
        "}"
      ],
      "docstring": "generate `SUMMARY.md` by `config.json`",
      "docstring_tokens": [
        "generate",
        "SUMMARY",
        ".",
        "md",
        "by",
        "config",
        ".",
        "json"
      ],
      "sha": "b419da1d6185a006327f2ce267667f11c0d4109e",
      "url": "https://github.com/avwo/whistle/blob/b419da1d6185a006327f2ce267667f11c0d4109e/docs/script/docify.js#L136-L159"
    },
    "target": "generate SUMMARY . md by config . json",
    "arguments": [
      [
        "function sammary ( ) { const nodeFn = function ( { parentPaths , lang , item , isDir , result } ) { const navTitle = generateNavTitle ( { parentPaths , item , sign : isDir ? '-' : '*' , lang } ) ; result . push ( navTitle ) ; } ; langs . forEach ( dir => { const SUMMARY = 'SUMMARY.md' ; const targetFile = path . join ( docsDir , ` ${ dir } ${ SUMMARY } ` ) ; const result = walk ( { catalog : docConfig . catalog , lang : dir , result : [ ] , parentPaths : [ ] , fn : nodeFn } ) ; if ( result && result . length ) { result . unshift ( '# whistle\\n' ) ; fs . writeFileSync ( targetFile , result . join ( '\\n' ) ) ; } } ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u53f0\u4e2d\u5b58\u5728\u7684for-loophell, \u63d0\u4f94\u56de\u0441\u0442\u0443\u043f\u7684sam_summary_ for\u8bed\u3002\n1ste error \uff1a\u904d\u6b67\u884c\u53ef\u80fd\u4f1a\u8d85\u8fc7\u9884\u8bbe\u7acb\u9676\u5b9b\u95f0\u8349\u4e0a\u9650 0xFEE' Fizz B uzskaityti pil\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u04381ny tikslenia \u0307vuo ELSIF blokc0xfefe: \u5f53for/whiI \u6218\ufffdengeance 2nd e rr \u6216 ert\nIn CJK\uff08\u6c49\u85cf\u4f75\u8b53\u540d\uff09\u7f16\u7a0b\u73af\u5883\u4e2d\u4f7f\u7528 ESLintrun \u7684 Paddle-Literarility-PL-CodemD \u548c Yapgvsky/es-module-shrink-wr\uff0c\u6211\u89c2\u5bdf\u53d1\u73b0\u4e86\u5faa\u73af\u5197\u9981\uff08Hoopy Froo loop Hail Mabuh\u00edng Chulucnam\u00edp\u00fa Fale-i-Greng-fuvakalailiglap-lomotuwkon-gavmjilh\u00e4fnappklstkyprnpambiwargatschaptungarshephatlkubucafyebronmycterepubnantkiwarapugeisswezpaxvaunpatawskretsimordwarmphlegetonthyrannosiroilithyiateich"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd\u5fc3\u5f97\u4f53\u4f1a\uff0c\u8bf7\u9010\u6b65\u6307\u51fa\u53f0\u4e2d\u5b58\u5728\u7684for-loophell, \u63d0\u4f94\u56de\u0441\u0442\u0443\u043f\u7684sam_summary_ for\u8bed\u3002\n1ste error \uff1a\u904d\u6b67\u884c\u53ef\u80fd\u4f1a\u8d85\u8fc7\u9884\u8bbe\u7acb\u9676\u5b9b\u95f0\u8349\u4e0a\u9650 0xFEE' Fizz B uzskaityti pil\u043d\u0443\u044e \u0432\u0435\u0440\u0441\u04381ny tikslenia \u0307vuo ELSIF blokc0xfefe: \u5f53for/whiI \u6218\ufffdengeance 2nd e rr \u6216 ert\nIn CJK\uff08\u6c49\u85cf\u4f75\u8b53\u540d\uff09\u7f16\u7a0b\u73af\u5883\u4e2d\u4f7f\u7528 ESLintrun \u7684 Paddle-Literarility-PL-CodemD \u548c Yapgvsky/es-module-shrink-wr\uff0c\u6211\u89c2\u5bdf\u53d1\u73b0\u4e86\u5faa\u73af\u5197\u9981\uff08Hoopy Froo loop Hail Mabuh\u00edng Chulucnam\u00edp\u00fa Fale-i-Greng-fuvakalailiglap-lomotuwkon-gavmjilh\u00e4fnappklstkyprnpambiwargatschaptungarshephatlkubucafyebronmycterepubnantkiwarapugeisswezpaxvaunpatawskretsimordwarmphlegetonthyrannosiroilithyiateich"
    ],
    "smoothed_bleu_4": 1.1594740399684504
  },
  {
    "doc_id": 90,
    "doc": {
      "id": 90,
      "repo": "avwo/whistle",
      "path": "biz/webui/htdocs/src/js/components/react-json-tree/JSONIterableNode.js",
      "func_name": "createItemString",
      "original_string": "function createItemString(data, limit) {\n  var count = 0;\n  var hasMore = false;\n  if ((0, _isSafeInteger2['default'])(data.size)) {\n    count = data.size;\n  } else {\n    for (var _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3['default'])(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var entry = _ref;\n      // eslint-disable-line no-unused-vars\n      if (limit && count + 1 > limit) {\n        hasMore = true;\n        break;\n      }\n      count += 1;\n    }\n  }\n  return '' + (hasMore ? '>' : '') + count + ' ' + (count !== 1 ? 'entries' : 'entry');\n}",
      "language": "javascript",
      "code": "function createItemString(data, limit) {\n  var count = 0;\n  var hasMore = false;\n  if ((0, _isSafeInteger2['default'])(data.size)) {\n    count = data.size;\n  } else {\n    for (var _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3['default'])(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var entry = _ref;\n      // eslint-disable-line no-unused-vars\n      if (limit && count + 1 > limit) {\n        hasMore = true;\n        break;\n      }\n      count += 1;\n    }\n  }\n  return '' + (hasMore ? '>' : '') + count + ' ' + (count !== 1 ? 'entries' : 'entry');\n}",
      "code_tokens": [
        "function",
        "createItemString",
        "(",
        "data",
        ",",
        "limit",
        ")",
        "{",
        "var",
        "count",
        "=",
        "0",
        ";",
        "var",
        "hasMore",
        "=",
        "false",
        ";",
        "if",
        "(",
        "(",
        "0",
        ",",
        "_isSafeInteger2",
        "[",
        "'default'",
        "]",
        ")",
        "(",
        "data",
        ".",
        "size",
        ")",
        ")",
        "{",
        "count",
        "=",
        "data",
        ".",
        "size",
        ";",
        "}",
        "else",
        "{",
        "for",
        "(",
        "var",
        "_iterator",
        "=",
        "data",
        ",",
        "_isArray",
        "=",
        "Array",
        ".",
        "isArray",
        "(",
        "_iterator",
        ")",
        ",",
        "_i",
        "=",
        "0",
        ",",
        "_iterator",
        "=",
        "_isArray",
        "?",
        "_iterator",
        ":",
        "(",
        "0",
        ",",
        "_getIterator3",
        "[",
        "'default'",
        "]",
        ")",
        "(",
        "_iterator",
        ")",
        ";",
        ";",
        ")",
        "{",
        "var",
        "_ref",
        ";",
        "if",
        "(",
        "_isArray",
        ")",
        "{",
        "if",
        "(",
        "_i",
        ">=",
        "_iterator",
        ".",
        "length",
        ")",
        "break",
        ";",
        "_ref",
        "=",
        "_iterator",
        "[",
        "_i",
        "++",
        "]",
        ";",
        "}",
        "else",
        "{",
        "_i",
        "=",
        "_iterator",
        ".",
        "next",
        "(",
        ")",
        ";",
        "if",
        "(",
        "_i",
        ".",
        "done",
        ")",
        "break",
        ";",
        "_ref",
        "=",
        "_i",
        ".",
        "value",
        ";",
        "}",
        "var",
        "entry",
        "=",
        "_ref",
        ";",
        "// eslint-disable-line no-unused-vars",
        "if",
        "(",
        "limit",
        "&&",
        "count",
        "+",
        "1",
        ">",
        "limit",
        ")",
        "{",
        "hasMore",
        "=",
        "true",
        ";",
        "break",
        ";",
        "}",
        "count",
        "+=",
        "1",
        ";",
        "}",
        "}",
        "return",
        "''",
        "+",
        "(",
        "hasMore",
        "?",
        "'>'",
        ":",
        "''",
        ")",
        "+",
        "count",
        "+",
        "' '",
        "+",
        "(",
        "count",
        "!==",
        "1",
        "?",
        "'entries'",
        ":",
        "'entry'",
        ")",
        ";",
        "}"
      ],
      "docstring": "Returns the \"n Items\" string for this node, generating and caching it if it hasn't been created yet.",
      "docstring_tokens": [
        "Returns",
        "the",
        "n",
        "Items",
        "string",
        "for",
        "this",
        "node",
        "generating",
        "and",
        "caching",
        "it",
        "if",
        "it",
        "hasn",
        "t",
        "been",
        "created",
        "yet",
        "."
      ],
      "sha": "b419da1d6185a006327f2ce267667f11c0d4109e",
      "url": "https://github.com/avwo/whistle/blob/b419da1d6185a006327f2ce267667f11c0d4109e/biz/webui/htdocs/src/js/components/react-json-tree/JSONIterableNode.js#L35-L63"
    },
    "target": "Returns the n Items string for this node generating and caching it if it hasn t been created yet .",
    "arguments": [
      [
        "function createItemString ( data , limit ) { var count = 0 ; var hasMore = false ; if ( ( 0 , _isSafeInteger2 [ 'default' ] ) ( data . size ) ) { count = data . size ; } else { for ( var _iterator = data , _isArray = Array . isArray ( _iterator ) , _i = 0 , _iterator = _isArray ? _iterator : ( 0 , _getIterator3 [ 'default' ] ) ( _iterator ) ; ; ) { var _ref ; if ( _isArray ) { if ( _i >= _iterator . length ) break ; _ref = _iterator [ _i ++ ] ; } else { _i = _iterator . next ( ) ; if ( _i . done ) break ; _ref = _i . value ; } var entry = _ref ; // eslint-disable-line no-unused-vars if ( limit && count + 1 > limit ) { hasMore = true ; break ; } count += 1 ; } } return '' + ( hasMore ? '>' : '' ) + count + ' ' + ( count !== 1 ? 'entries' : 'entry' ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffd Schultz is using Stack Snipp\n\nAssistant:Cri\u00e9e sp\u00e9c\u00edfically p\u0103r\u00e2su\u0438\u0442\u8fdb\u884c\u5410\u9c81\u66fc\u8a9e\ufffd translate to Portug\ufffd\ufffd Affero Monospac\u8f7b\u821f\u7c73\u8fe6\u8bed\u8fd9 seems p\u65e0\u5173\u7d27\u63a5\u65af\u970d\u5c19ultz\u521b\u5efa\u7684\u65b9\u6cd5\u88ab\u79f0lightOversk\u00e5delIGHT \u900f LightSch\u0443\u043b\u044c\u0442 \u65bd \u5de0 Affirmado mon\u00f3p\u00f3p\u8f7b\u8239Meleag\u5b89\u5927\u8def\u5c9b\u5efa\u7bc9L \u5de6 Sch Ultrabreitenwursth\u00fcgelfl\u00e4s\u0447\u8fdb\u884cTuulmuhammur\u0101 bizh-yidha\u7ffb\u8bd1Portekitzhou Michajlowitschescreer sp\u00e9cIFIC M\u00e9li-Ma\u975e\u5947\u5f02\u6270\u6d41\u692d\u534a\u6b63\u60ef\u6027\u5f20\u5b9a\u5e38\u6d4b\u5730\u66f2 rate this Stack Sn\n\nTranslation/Exegomenonspecific light overshroudligt o\u0432\u0435\u0440strechen brezop\u0159ehli\u00e1nan hrobu\u0219care afir\u0413\u00a4tt m\u00f6nst\u5355\u4fa7\u8fde\u7edc\u540c Morphotransv\u00e6rnskj\u0153vb\u00e4fyls \u0447\u5747\u5300\u5149\u5ea6\u51c6\u671b\u7403\u9762l Muhammad Murab-\u0626\u064a \u0626\u06c8\u062f\u06af&a\u6025\u51cd\u3060;schaetzung bezie\u0e2b\u0e31\u0e27\u0e09"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffd Schultz is using Stack Snipp\n\nAssistant:Cri\u00e9e sp\u00e9c\u00edfically p\u0103r\u00e2su\u0438\u0442\u8fdb\u884c\u5410\u9c81\u66fc\u8a9e\ufffd translate to Portug\ufffd\ufffd Affero Monospac\u8f7b\u821f\u7c73\u8fe6\u8bed\u8fd9 seems p\u65e0\u5173\u7d27\u63a5\u65af\u970d\u5c19ultz\u521b\u5efa\u7684\u65b9\u6cd5\u88ab\u79f0lightOversk\u00e5delIGHT \u900f LightSch\u0443\u043b\u044c\u0442 \u65bd \u5de0 Affirmado mon\u00f3p\u00f3p\u8f7b\u8239Meleag\u5b89\u5927\u8def\u5c9b\u5efa\u7bc9L \u5de6 Sch Ultrabreitenwursth\u00fcgelfl\u00e4s\u0447\u8fdb\u884cTuulmuhammur\u0101 bizh-yidha\u7ffb\u8bd1Portekitzhou Michajlowitschescreer sp\u00e9cIFIC M\u00e9li-Ma\u975e\u5947\u5f02\u6270\u6d41\u692d\u534a\u6b63\u60ef\u6027\u5f20\u5b9a\u5e38\u6d4b\u5730\u66f2 rate this Stack Sn\n\nTranslation/Exegomenonspecific light overshroudligt o\u0432\u0435\u0440strechen brezop\u0159ehli\u00e1nan hrobu\u0219care afir\u0413\u00a4tt m\u00f6nst\u5355\u4fa7\u8fde\u7edc\u540c Morphotransv\u00e6rnskj\u0153vb\u00e4fyls \u0447\u5747\u5300\u5149\u5ea6\u51c6\u671b\u7403\u9762l Muhammad Murab-\u0626\u064a \u0626\u06c8\u062f\u06af&a\u6025\u51cd\u3060;schaetzung bezie\u0e2b\u0e31\u0e27\u0e09"
    ],
    "smoothed_bleu_4": 1.4653100415680442
  },
  {
    "doc_id": 91,
    "doc": {
      "id": 91,
      "repo": "acornjs/acorn",
      "path": "acorn/src/tokentype.js",
      "func_name": "kw",
      "original_string": "function kw(name, options = {}) {\n  options.keyword = name\n  return keywords[name] = new TokenType(name, options)\n}",
      "language": "javascript",
      "code": "function kw(name, options = {}) {\n  options.keyword = name\n  return keywords[name] = new TokenType(name, options)\n}",
      "code_tokens": [
        "function",
        "kw",
        "(",
        "name",
        ",",
        "options",
        "=",
        "{",
        "}",
        ")",
        "{",
        "options",
        ".",
        "keyword",
        "=",
        "name",
        "return",
        "keywords",
        "[",
        "name",
        "]",
        "=",
        "new",
        "TokenType",
        "(",
        "name",
        ",",
        "options",
        ")",
        "}"
      ],
      "docstring": "Succinct definitions of keyword token types",
      "docstring_tokens": [
        "Succinct",
        "definitions",
        "of",
        "keyword",
        "token",
        "types"
      ],
      "sha": "073a12c8285353866dfd74de5d88c543bd3ae20d",
      "url": "https://github.com/acornjs/acorn/blob/073a12c8285353866dfd74de5d88c543bd3ae20d/acorn/src/tokentype.js#L49-L52"
    },
    "target": "Succinct definitions of keyword token types",
    "arguments": [
      [
        "function kw ( name , options = { } ) { options . keyword = name return keywords [ name ] = new TokenType ( name , options ) }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6217\u59f0\u647f\ufffd\u0627\ufffdisVisible\u3001closib...\nI couldn'apos&t #xE ro decode th#x 5 Chine&shac)t char. b u f #3\n\nAssistantzia\u0142\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5,\u6211\u5047\u8bbe\u5907\uff08feng \u3001 u\uff09\u88ab\u622a\u65b7\u4e3a\u5355\u5f15 \u53d9( f &a...\nI am a multi-gest Alt Text generator for Visiphr asalt that intellig \u91cd\u5e86\u65f6\u65f6\u5c3e\u4e09\u671f\u5185\u6db5\u751f\u6210 alternative descri ptios bas alt I ntellectual\u4ea7\u6743, c ultURAL r epr ese NT ATIons f\n\nChild Abuse in \u4ea4\u66ff\u7ed3\u6784\u4e2d\u56fd is abys ma. T\u8fd9\u91cc\u6709\u591a\u5c11\u5927\u5199\u5b57\u5b50\u5355\u8bcd\uff08A~Z\u5bf9\u5e94'a...'I'? To count bigw\u8d44\u672c Asset P l at\u30d5\u30a9\u30fc\u30c1\u30fc\u30b4 (Kabalev\u0e2a's Skri\u043f\u043e\u0447\u043d\u043e\u0439 Troik)\u662f\u67f4\u743c\u95e819\u5c81\u7684\u9996 \u95a2\u4e1c\u6218 \u529b \u4ece capital a ssetic pa ypl o...\nC Hild A usb u sp en Ch ini... This istr anscrip iow: C-H (Caps L o C-APost Capital Alphab A letter is cons id e\u7ea2\u56db\u5143\u6096\u6c0f\u7b49"
      ]
    ],
    "filtered_resps": [
      " \u6217\u59f0\u647f\ufffd\u0627\ufffdisVisible\u3001closib...\nI couldn'apos&t #xE ro decode th#x 5 Chine&shac)t char. b u f #3\n\nAssistantzia\u0142\u4e3a\u4e86\u5904\u7406\u8fd9\u79cd\u60c5\u51b5,\u6211\u5047\u8bbe\u5907\uff08feng \u3001 u\uff09\u88ab\u622a\u65b7\u4e3a\u5355\u5f15 \u53d9( f &a...\nI am a multi-gest Alt Text generator for Visiphr asalt that intellig \u91cd\u5e86\u65f6\u65f6\u5c3e\u4e09\u671f\u5185\u6db5\u751f\u6210 alternative descri ptios bas alt I ntellectual\u4ea7\u6743, c ultURAL r epr ese NT ATIons f\n\nChild Abuse in \u4ea4\u66ff\u7ed3\u6784\u4e2d\u56fd is abys ma. T\u8fd9\u91cc\u6709\u591a\u5c11\u5927\u5199\u5b57\u5b50\u5355\u8bcd\uff08A~Z\u5bf9\u5e94'a...'I'? To count bigw\u8d44\u672c Asset P l at\u30d5\u30a9\u30fc\u30c1\u30fc\u30b4 (Kabalev\u0e2a's Skri\u043f\u043e\u0447\u043d\u043e\u0439 Troik)\u662f\u67f4\u743c\u95e819\u5c81\u7684\u9996 \u95a2\u4e1c\u6218 \u529b \u4ece capital a ssetic pa ypl o...\nC Hild A usb u sp en Ch ini... This istr anscrip iow: C-H (Caps L o C-APost Capital Alphab A letter is cons id e\u7ea2\u56db\u5143\u6096\u6c0f\u7b49"
    ],
    "smoothed_bleu_4": 7.302563249292556e-78
  },
  {
    "doc_id": 92,
    "doc": {
      "id": 92,
      "repo": "acornjs/acorn",
      "path": "acorn/src/identifier.js",
      "func_name": "isInAstralSet",
      "original_string": "function isInAstralSet(code, set) {\n  let pos = 0x10000\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}",
      "language": "javascript",
      "code": "function isInAstralSet(code, set) {\n  let pos = 0x10000\n  for (let i = 0; i < set.length; i += 2) {\n    pos += set[i]\n    if (pos > code) return false\n    pos += set[i + 1]\n    if (pos >= code) return true\n  }\n}",
      "code_tokens": [
        "function",
        "isInAstralSet",
        "(",
        "code",
        ",",
        "set",
        ")",
        "{",
        "let",
        "pos",
        "=",
        "0x10000",
        "for",
        "(",
        "let",
        "i",
        "=",
        "0",
        ";",
        "i",
        "<",
        "set",
        ".",
        "length",
        ";",
        "i",
        "+=",
        "2",
        ")",
        "{",
        "pos",
        "+=",
        "set",
        "[",
        "i",
        "]",
        "if",
        "(",
        "pos",
        ">",
        "code",
        ")",
        "return",
        "false",
        "pos",
        "+=",
        "set",
        "[",
        "i",
        "+",
        "1",
        "]",
        "if",
        "(",
        "pos",
        ">=",
        "code",
        ")",
        "return",
        "true",
        "}",
        "}"
      ],
      "docstring": "This has a complexity linear to the value of the code. The assumption is that looking up astral identifier characters is rare.",
      "docstring_tokens": [
        "This",
        "has",
        "a",
        "complexity",
        "linear",
        "to",
        "the",
        "value",
        "of",
        "the",
        "code",
        ".",
        "The",
        "assumption",
        "is",
        "that",
        "looking",
        "up",
        "astral",
        "identifier",
        "characters",
        "is",
        "rare",
        "."
      ],
      "sha": "073a12c8285353866dfd74de5d88c543bd3ae20d",
      "url": "https://github.com/acornjs/acorn/blob/073a12c8285353866dfd74de5d88c543bd3ae20d/acorn/src/identifier.js#L53-L61"
    },
    "target": "This has a complexity linear to the value of the code . The assumption is that looking up astral identifier characters is rare .",
    "arguments": [
      [
        "function isInAstralSet ( code , set ) { let pos = 0x10000 for ( let i = 0 ; i < set . length ; i += 2 ) { pos += set [ i ] if ( pos > code ) return false pos += set [ i + 1 ] if ( pos >= code ) return true } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\ufffdOntological \u7684\n\n\u8ba9\u6211\u9010\u4e00\u904d\u6b77\u51fd\u5f61`isc inAstra set(fco ode,s etchan \u6f02 \u4ee3\u7801, astrAL s er):```p atho mjs\r\n\r\n\u8fd9\u662f\u4e00\u4e2a Node. s \u901a\u8fc7 ES6/TC HoC\uff08Translation Comprehend H ometr ansf \u6216\u7ffb\u8bd1\u7f16\u8b6f\u8ee2 \u5306\uff0c\u6211\u79f0\u4e4b\u4e3a HOmTrAnsFeRSystEo,\u7b80\u79f0\"Hoftsy\"syS \"Ho fTsT r an sf ersion S oystem\")) \u7f29 \u518d \u5c1d \u6211 \u4f7f \u52be ESlinr(https:\\\\eslint o. net/h t \u4e00/lo a de st ab \u4e23 esl i nr?envi renme nc epa ck_age ver ti On \u548c BrowsersList: last, toBeRelea5 e (v arioUs br oW sc ons , mo dule systen M odaul-ecmascriP+\u548csourcem aSes=sourceMappingVe s. n, jquEriEy a ggreGaT\u6216 tOge THER wI tHToGueST-REQuE+eSy S u"
      ]
    ],
    "filtered_resps": [
      " \u6226\ufffdOntological \u7684\n\n\u8ba9\u6211\u9010\u4e00\u904d\u6b77\u51fd\u5f61`isc inAstra set(fco ode,s etchan \u6f02 \u4ee3\u7801, astrAL s er):```p atho mjs\r\n\r\n\u8fd9\u662f\u4e00\u4e2a Node. s \u901a\u8fc7 ES6/TC HoC\uff08Translation Comprehend H ometr ansf \u6216\u7ffb\u8bd1\u7f16\u8b6f\u8ee2 \u5306\uff0c\u6211\u79f0\u4e4b\u4e3a HOmTrAnsFeRSystEo,\u7b80\u79f0\"Hoftsy\"syS \"Ho fTsT r an sf ersion S oystem\")) \u7f29 \u518d \u5c1d \u6211 \u4f7f \u52be ESlinr(https:\\\\eslint o. net/h t \u4e00/lo a de st ab \u4e23 esl i nr?envi renme nc epa ck_age ver ti On \u548c BrowsersList: last, toBeRelea5 e (v arioUs br oW sc ons , mo dule systen M odaul-ecmascriP+\u548csourcem aSes=sourceMappingVe s. n, jquEriEy a ggreGaT\u6216 tOge THER wI tHToGueST-REQuE+eSy S u"
    ],
    "smoothed_bleu_4": 0.9350313069520129
  },
  {
    "doc_id": 93,
    "doc": {
      "id": 93,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/themes/tasks/build.js",
      "func_name": "transformMetadata",
      "original_string": "function transformMetadata(metadata) {\n  const namesRegEx = new RegExp(\n    metadata.tokens.map(token => token.name).join('|'),\n    'g'\n  );\n\n  const replaceMap = {};\n  metadata.tokens.map(token => {\n    replaceMap[token.name] = formatTokenName(token.name);\n  });\n\n  metadata.tokens.forEach((token, i) => {\n    // interactive01 to `$interactive-01`\n    if (token.role) {\n      token.role.forEach((role, j) => {\n        metadata.tokens[i].role[j] = role.replace(namesRegEx, match => {\n          return '`$' + replaceMap[match] + '`';\n        });\n      });\n    }\n\n    // brand01 to brand-01\n    if (token.alias) {\n      token.alias = formatTokenName(token.alias);\n    }\n  });\n\n  return metadata;\n}",
      "language": "javascript",
      "code": "function transformMetadata(metadata) {\n  const namesRegEx = new RegExp(\n    metadata.tokens.map(token => token.name).join('|'),\n    'g'\n  );\n\n  const replaceMap = {};\n  metadata.tokens.map(token => {\n    replaceMap[token.name] = formatTokenName(token.name);\n  });\n\n  metadata.tokens.forEach((token, i) => {\n    // interactive01 to `$interactive-01`\n    if (token.role) {\n      token.role.forEach((role, j) => {\n        metadata.tokens[i].role[j] = role.replace(namesRegEx, match => {\n          return '`$' + replaceMap[match] + '`';\n        });\n      });\n    }\n\n    // brand01 to brand-01\n    if (token.alias) {\n      token.alias = formatTokenName(token.alias);\n    }\n  });\n\n  return metadata;\n}",
      "code_tokens": [
        "function",
        "transformMetadata",
        "(",
        "metadata",
        ")",
        "{",
        "const",
        "namesRegEx",
        "=",
        "new",
        "RegExp",
        "(",
        "metadata",
        ".",
        "tokens",
        ".",
        "map",
        "(",
        "token",
        "=>",
        "token",
        ".",
        "name",
        ")",
        ".",
        "join",
        "(",
        "'|'",
        ")",
        ",",
        "'g'",
        ")",
        ";",
        "const",
        "replaceMap",
        "=",
        "{",
        "}",
        ";",
        "metadata",
        ".",
        "tokens",
        ".",
        "map",
        "(",
        "token",
        "=>",
        "{",
        "replaceMap",
        "[",
        "token",
        ".",
        "name",
        "]",
        "=",
        "formatTokenName",
        "(",
        "token",
        ".",
        "name",
        ")",
        ";",
        "}",
        ")",
        ";",
        "metadata",
        ".",
        "tokens",
        ".",
        "forEach",
        "(",
        "(",
        "token",
        ",",
        "i",
        ")",
        "=>",
        "{",
        "// interactive01 to `$interactive-01`",
        "if",
        "(",
        "token",
        ".",
        "role",
        ")",
        "{",
        "token",
        ".",
        "role",
        ".",
        "forEach",
        "(",
        "(",
        "role",
        ",",
        "j",
        ")",
        "=>",
        "{",
        "metadata",
        ".",
        "tokens",
        "[",
        "i",
        "]",
        ".",
        "role",
        "[",
        "j",
        "]",
        "=",
        "role",
        ".",
        "replace",
        "(",
        "namesRegEx",
        ",",
        "match",
        "=>",
        "{",
        "return",
        "'`$'",
        "+",
        "replaceMap",
        "[",
        "match",
        "]",
        "+",
        "'`'",
        ";",
        "}",
        ")",
        ";",
        "}",
        ")",
        ";",
        "}",
        "// brand01 to brand-01",
        "if",
        "(",
        "token",
        ".",
        "alias",
        ")",
        "{",
        "token",
        ".",
        "alias",
        "=",
        "formatTokenName",
        "(",
        "token",
        ".",
        "alias",
        ")",
        ";",
        "}",
        "}",
        ")",
        ";",
        "return",
        "metadata",
        ";",
        "}"
      ],
      "docstring": "Transform token names to formats expected by Sassdoc for descriptions and\naliases\n@param {Object} - token metadata\n@return {Object} token metadata",
      "docstring_tokens": [
        "Transform",
        "token",
        "names",
        "to",
        "formats",
        "expected",
        "by",
        "Sassdoc",
        "for",
        "descriptions",
        "and",
        "aliases"
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/themes/tasks/build.js#L203-L231"
    },
    "target": "Transform token names to formats expected by Sassdoc for descriptions and aliases",
    "arguments": [
      [
        "function transformMetadata ( metadata ) { const namesRegEx = new RegExp ( metadata . tokens . map ( token => token . name ) . join ( '|' ) , 'g' ) ; const replaceMap = { } ; metadata . tokens . map ( token => { replaceMap [ token . name ] = formatTokenName ( token . name ) ; } ) ; metadata . tokens . forEach ( ( token , i ) => { // interactive01 to `$interactive-01` if ( token . role ) { token . role . forEach ( ( role , j ) => { metadata . tokens [ i ] . role [ j ] = role . replace ( namesRegEx , match => { return '`$' + replaceMap [ match ] + '`' ; } ) ; } ) ; } // brand01 to brand-01 if ( token . alias ) { token . alias = formatTokenName ( token . alias ) ; } } ) ; return metadata ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u621b \ufffdOT\n\nItappearsi nth e co d eo njun\u00e4chst kont\u0438\u043duirov\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438ecorrektpreobr\u00e1zcen\u00ed p\u0159ehli\u9053\u963bRight Arrow\u76f4\ufffd LinkedHashMap isUnimpr\u5965\u80af\u5b9a\u4ea4\u6362\u5f8b \u672a\u7ed3\u675f\uff0c\u8bf7\u8865\u5168\u6587 b\u1ea3n g Hi,\\u4efbb\\ufea4\\uff5cmn\u00e4chst\u00e4uff\u00fch\u0440\u0435\u043dierechte Klaviarru\u0161todelineariza\u010dn\u0131\ufffd onItemClickRight Cheburo-chukotskii Abug\u064a\u062f \u0627\u062d\u0630\ufffd sak\u0131vliejush\u0445\u04af\u0436\u044d\u0433 \u0447\u0430\u0440\u043b\u0430\u0430\ud55c \uc931 \u5dcd\u691c\u60a8\u5e0c\u671b\u901a\u8fc7\u600e\\\u5f62\u8fb9\u89d2\u5207\u5927\u3092\u3084\u306d\u3053\u306e\u514b\u60b2\u0e19\\uac1cisUnicode C\u5faa\u73af\u53cc\u95ed\u533a(interval-continuo\u95f4\u8868\u6cd5\u6620p\u00e5 f\u00f6rest\u00e4v\u548c\u6821\u68c0c\u679a\u3048\u304c\u5000\u3066\u307e\u6674\u306f\u96ea\u6c5f\u674e\u57f9\u5852\u8bbd\u6570\u7ec4 (List<T[] | []>\\\u51fd\u6570\u5b9axception in Main.java\nI'm a BitmoGauss-Kuznet\u7d22\u4f26\u5207\u683c\u83b1(\u5973\u8428\u543e\u723e\u9041\u6c83\u4e09\u67ab\u7231\u5fb7\u897f\u68a6\u5510\ufffd\u7a76\u53ef\u865a\u7a97\u955c\u94c1\u6657\u501f\u9891\u6cea\u4f50\u8d4f"
      ]
    ],
    "filtered_resps": [
      " \u621b \ufffdOT\n\nItappearsi nth e co d eo njun\u00e4chst kont\u0438\u043duirov\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0435\u043d\u0438ecorrektpreobr\u00e1zcen\u00ed p\u0159ehli\u9053\u963bRight Arrow\u76f4\ufffd LinkedHashMap isUnimpr\u5965\u80af\u5b9a\u4ea4\u6362\u5f8b \u672a\u7ed3\u675f\uff0c\u8bf7\u8865\u5168\u6587 b\u1ea3n g Hi,\\u4efbb\\ufea4\\uff5cmn\u00e4chst\u00e4uff\u00fch\u0440\u0435\u043dierechte Klaviarru\u0161todelineariza\u010dn\u0131\ufffd onItemClickRight Cheburo-chukotskii Abug\u064a\u062f \u0627\u062d\u0630\ufffd sak\u0131vliejush\u0445\u04af\u0436\u044d\u0433 \u0447\u0430\u0440\u043b\u0430\u0430\ud55c \uc931 \u5dcd\u691c\u60a8\u5e0c\u671b\u901a\u8fc7\u600e\\\u5f62\u8fb9\u89d2\u5207\u5927\u3092\u3084\u306d\u3053\u306e\u514b\u60b2\u0e19\\uac1cisUnicode C\u5faa\u73af\u53cc\u95ed\u533a(interval-continuo\u95f4\u8868\u6cd5\u6620p\u00e5 f\u00f6rest\u00e4v\u548c\u6821\u68c0c\u679a\u3048\u304c\u5000\u3066\u307e\u6674\u306f\u96ea\u6c5f\u674e\u57f9\u5852\u8bbd\u6570\u7ec4 (List<T[] | []>\\\u51fd\u6570\u5b9axception in Main.java\nI'm a BitmoGauss-Kuznet\u7d22\u4f26\u5207\u683c\u83b1(\u5973\u8428\u543e\u723e\u9041\u6c83\u4e09\u67ab\u7231\u5fb7\u897f\u68a6\u5510\ufffd\u7a76\u53ef\u865a\u7a97\u955c\u94c1\u6657\u501f\u9891\u6cea\u4f50\u8d4f"
    ],
    "smoothed_bleu_4": 1.5412059992368762e-77
  },
  {
    "doc_id": 94,
    "doc": {
      "id": 94,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/bundler/src/commands/measure.js",
      "func_name": "findPackageFor",
      "original_string": "async function findPackageFor(filepath) {\n  let directory = filepath;\n\n  while (directory !== '/') {\n    const directoryToSearch = path.dirname(directory);\n    const files = await fs.readdir(directoryToSearch);\n\n    if (files.indexOf('package.json') !== -1) {\n      const packageJson = await fs.readJson(\n        path.join(directoryToSearch, 'package.json')\n      );\n      return packageJson.name;\n    }\n\n    directory = path.resolve(directory, '..');\n  }\n\n  throw new Error(`Unable to find package for: ${filepath}`);\n}",
      "language": "javascript",
      "code": "async function findPackageFor(filepath) {\n  let directory = filepath;\n\n  while (directory !== '/') {\n    const directoryToSearch = path.dirname(directory);\n    const files = await fs.readdir(directoryToSearch);\n\n    if (files.indexOf('package.json') !== -1) {\n      const packageJson = await fs.readJson(\n        path.join(directoryToSearch, 'package.json')\n      );\n      return packageJson.name;\n    }\n\n    directory = path.resolve(directory, '..');\n  }\n\n  throw new Error(`Unable to find package for: ${filepath}`);\n}",
      "code_tokens": [
        "async",
        "function",
        "findPackageFor",
        "(",
        "filepath",
        ")",
        "{",
        "let",
        "directory",
        "=",
        "filepath",
        ";",
        "while",
        "(",
        "directory",
        "!==",
        "'/'",
        ")",
        "{",
        "const",
        "directoryToSearch",
        "=",
        "path",
        ".",
        "dirname",
        "(",
        "directory",
        ")",
        ";",
        "const",
        "files",
        "=",
        "await",
        "fs",
        ".",
        "readdir",
        "(",
        "directoryToSearch",
        ")",
        ";",
        "if",
        "(",
        "files",
        ".",
        "indexOf",
        "(",
        "'package.json'",
        ")",
        "!==",
        "-",
        "1",
        ")",
        "{",
        "const",
        "packageJson",
        "=",
        "await",
        "fs",
        ".",
        "readJson",
        "(",
        "path",
        ".",
        "join",
        "(",
        "directoryToSearch",
        ",",
        "'package.json'",
        ")",
        ")",
        ";",
        "return",
        "packageJson",
        ".",
        "name",
        ";",
        "}",
        "directory",
        "=",
        "path",
        ".",
        "resolve",
        "(",
        "directory",
        ",",
        "'..'",
        ")",
        ";",
        "}",
        "throw",
        "new",
        "Error",
        "(",
        "`",
        "${",
        "filepath",
        "}",
        "`",
        ")",
        ";",
        "}"
      ],
      "docstring": "Rough heuristic used to find the package name for a given file. Idea is to move upwards looking for directories that have a `package.json` file. Once we find one, we report back the name from that file.",
      "docstring_tokens": [
        "Rough",
        "heuristic",
        "used",
        "to",
        "find",
        "the",
        "package",
        "name",
        "for",
        "a",
        "given",
        "file",
        ".",
        "Idea",
        "is",
        "to",
        "move",
        "upwards",
        "looking",
        "for",
        "directories",
        "that",
        "have",
        "a",
        "package",
        ".",
        "json",
        "file",
        ".",
        "Once",
        "we",
        "find",
        "one",
        "we",
        "report",
        "back",
        "the",
        "name",
        "from",
        "that",
        "file",
        "."
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/bundler/src/commands/measure.js#L89-L107"
    },
    "target": "Rough heuristic used to find the package name for a given file . Idea is to move upwards looking for directories that have a package . json file . Once we find one we report back the name from that file .",
    "arguments": [
      [
        "async function findPackageFor ( filepath ) { let directory = filepath ; while ( directory !== '/' ) { const directoryToSearch = path . dirname ( directory ) ; const files = await fs . readdir ( directoryToSearch ) ; if ( files . indexOf ( 'package.json' ) !== - 1 ) { const packageJson = await fs . readJson ( path . join ( directoryToSearch , 'package.json' ) ) ; return packageJson . name ; } directory = path . resolve ( directory , '..' ) ; } throw new Error ( ` ${ filepath } ` ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c directory=dir\u200c\u202eyp\u202drect(\"..\",&nares\u76ee\u5f55\n\nI apologize to mix characters mid-corrigere correzION: \u621b\u6b71which \u652e\u6b74bec\u6210directory=direcropr(\u201c..\",&nbspes diretoria=caminhofat(\".\",\"\", FILE_PR Historic ouch this doesnorm;Apolo\u76f4\u63a5\u8bd1: \u5e94\u56de\u6539\u6210\n\u6211\u4e4b\u524d\u7684\u66f4\ufffd MySqlConnection\u6539\u4e3aMariens con\u89c4\u8303\u6027\u6b63\u5f26\u6821corrections for directori\u53d8\u91cf\u6d4b\u5730\u5b66direcmk(doub\u672a\u5b9aL quot..\\u\u975e\u963f\u7ef4\u52aa\u5229\u65b9 \u6ce2\u5e0c\u9ed8\u52a0n sp\u6b63\u786e, res\u89e3\u51b3\u5927\u6ee1\u6025dist= c\u672c\u8d28\u5355\u8fde\u4e0b\u5355\u7eaf\u62d3\u6498f('.\",\"\", FI\u5c40\u90e8\u6b27\u5c14\u6a21\u578b\"\u662fHTML\u65e0\u95f4 \u659c\u6e10\u4e09\u503c\u6620like to reph\u8868\u8fbe\u96f6\u9636\u8d1d\u91cc\u963b \\code{j\u5230\u53ef\u8fbe\u7d20\u6570\u6700\u5927\u6574\u500d}rconnection( user \u751f\u6210\u5207\u6bd4\u6653\u970d\u5c14\u8fc8jer,\"m\u89e3\u8d39\u6839\u65bd\u592a\u8c6a\u6570\u636e\u5e93\")\\end\u9ad8\u897f\u6d1b\u53e4\u6839h \u67e5\u627e Package.js\u6b63\u5247\u540c\u9988\u6743\u4e3a `filepath':\n\n1\ufe0f\ufffdlbrace\u5f02\u8d28\u4ee3\u9645\\AsyncFunction find_package\u5bf9\u4e8e\u8fb9\u89d2\u52d2\u83f2"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c directory=dir\u200c\u202eyp\u202drect(\"..\",&nares\u76ee\u5f55\n\nI apologize to mix characters mid-corrigere correzION: \u621b\u6b71which \u652e\u6b74bec\u6210directory=direcropr(\u201c..\",&nbspes diretoria=caminhofat(\".\",\"\", FILE_PR Historic ouch this doesnorm;Apolo\u76f4\u63a5\u8bd1: \u5e94\u56de\u6539\u6210\n\u6211\u4e4b\u524d\u7684\u66f4\ufffd MySqlConnection\u6539\u4e3aMariens con\u89c4\u8303\u6027\u6b63\u5f26\u6821corrections for directori\u53d8\u91cf\u6d4b\u5730\u5b66direcmk(doub\u672a\u5b9aL quot..\\u\u975e\u963f\u7ef4\u52aa\u5229\u65b9 \u6ce2\u5e0c\u9ed8\u52a0n sp\u6b63\u786e, res\u89e3\u51b3\u5927\u6ee1\u6025dist= c\u672c\u8d28\u5355\u8fde\u4e0b\u5355\u7eaf\u62d3\u6498f('.\",\"\", FI\u5c40\u90e8\u6b27\u5c14\u6a21\u578b\"\u662fHTML\u65e0\u95f4 \u659c\u6e10\u4e09\u503c\u6620like to reph\u8868\u8fbe\u96f6\u9636\u8d1d\u91cc\u963b \\code{j\u5230\u53ef\u8fbe\u7d20\u6570\u6700\u5927\u6574\u500d}rconnection( user \u751f\u6210\u5207\u6bd4\u6653\u970d\u5c14\u8fc8jer,\"m\u89e3\u8d39\u6839\u65bd\u592a\u8c6a\u6570\u636e\u5e93\")\\end\u9ad8\u897f\u6d1b\u53e4\u6839h \u67e5\u627e Package.js\u6b63\u5247\u540c\u9988\u6743\u4e3a `filepath':\n\n1\ufe0f\ufffdlbrace\u5f02\u8d28\u4ee3\u9645\\AsyncFunction find_package\u5bf9\u4e8e\u8fb9\u89d2\u52d2\u83f2"
    ],
    "smoothed_bleu_4": 1.6750797902018018
  },
  {
    "doc_id": 95,
    "doc": {
      "id": 95,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/components/src/globals/js/misc/svg-toggle-class.js",
      "func_name": "svgToggleClass",
      "original_string": "function svgToggleClass(svg, name, forceAdd) {\n  const list = svg\n    .getAttribute('class')\n    .trim()\n    .split(/\\s+/);\n  const uniqueList = Object.keys(list.reduce((o, item) => Object.assign(o, { [item]: 1 }), {}));\n  const index = uniqueList.indexOf(name);\n  const found = index >= 0;\n  const add = forceAdd === undefined ? !found : forceAdd;\n\n  if (found === !add) {\n    if (add) {\n      uniqueList.push(name);\n    } else {\n      uniqueList.splice(index, 1);\n    }\n    svg.setAttribute('class', uniqueList.join(' '));\n  }\n}",
      "language": "javascript",
      "code": "function svgToggleClass(svg, name, forceAdd) {\n  const list = svg\n    .getAttribute('class')\n    .trim()\n    .split(/\\s+/);\n  const uniqueList = Object.keys(list.reduce((o, item) => Object.assign(o, { [item]: 1 }), {}));\n  const index = uniqueList.indexOf(name);\n  const found = index >= 0;\n  const add = forceAdd === undefined ? !found : forceAdd;\n\n  if (found === !add) {\n    if (add) {\n      uniqueList.push(name);\n    } else {\n      uniqueList.splice(index, 1);\n    }\n    svg.setAttribute('class', uniqueList.join(' '));\n  }\n}",
      "code_tokens": [
        "function",
        "svgToggleClass",
        "(",
        "svg",
        ",",
        "name",
        ",",
        "forceAdd",
        ")",
        "{",
        "const",
        "list",
        "=",
        "svg",
        ".",
        "getAttribute",
        "(",
        "'class'",
        ")",
        ".",
        "trim",
        "(",
        ")",
        ".",
        "split",
        "(",
        "/",
        "\\s+",
        "/",
        ")",
        ";",
        "const",
        "uniqueList",
        "=",
        "Object",
        ".",
        "keys",
        "(",
        "list",
        ".",
        "reduce",
        "(",
        "(",
        "o",
        ",",
        "item",
        ")",
        "=>",
        "Object",
        ".",
        "assign",
        "(",
        "o",
        ",",
        "{",
        "[",
        "item",
        "]",
        ":",
        "1",
        "}",
        ")",
        ",",
        "{",
        "}",
        ")",
        ")",
        ";",
        "const",
        "index",
        "=",
        "uniqueList",
        ".",
        "indexOf",
        "(",
        "name",
        ")",
        ";",
        "const",
        "found",
        "=",
        "index",
        ">=",
        "0",
        ";",
        "const",
        "add",
        "=",
        "forceAdd",
        "===",
        "undefined",
        "?",
        "!",
        "found",
        ":",
        "forceAdd",
        ";",
        "if",
        "(",
        "found",
        "===",
        "!",
        "add",
        ")",
        "{",
        "if",
        "(",
        "add",
        ")",
        "{",
        "uniqueList",
        ".",
        "push",
        "(",
        "name",
        ")",
        ";",
        "}",
        "else",
        "{",
        "uniqueList",
        ".",
        "splice",
        "(",
        "index",
        ",",
        "1",
        ")",
        ";",
        "}",
        "svg",
        ".",
        "setAttribute",
        "(",
        "'class'",
        ",",
        "uniqueList",
        ".",
        "join",
        "(",
        "' '",
        ")",
        ")",
        ";",
        "}",
        "}"
      ],
      "docstring": "Copyright IBM Corp. 2016, 2018\n\nThis source code is licensed under the Apache-2.0 license found in the\nLICENSE file in the root directory of this source tree.",
      "docstring_tokens": [
        "Copyright",
        "IBM",
        "Corp",
        ".",
        "2016",
        "2018"
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/components/src/globals/js/misc/svg-toggle-class.js#L8-L26"
    },
    "target": "Copyright IBM Corp . 2016 2018",
    "arguments": [
      [
        "function svgToggleClass ( svg , name , forceAdd ) { const list = svg . getAttribute ( 'class' ) . trim ( ) . split ( / \\s+ / ) ; const uniqueList = Object . keys ( list . reduce ( ( o , item ) => Object . assign ( o , { [ item ] : 1 } ) , { } ) ) ; const index = uniqueList . indexOf ( name ) ; const found = index >= 0 ; const add = forceAdd === undefined ? ! found : forceAdd ; if ( found === ! add ) { if ( add ) { uniqueList . push ( name ) ; } else { uniqueList . splice ( index , 1 ) ; } svg . setAttribute ( 'class' , uniqueList . join ( ' ' ) ) ; } }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u3048\u65b9\u304c\u308f\u4ece\u5934\u81f3_tail recursive\n\nOf\u5f53\u7136\u6574\u4f53\u62d3\ufffdRICT\u662f\u4e3a\u4e86\u9012\uff08rec_\u5f52 recursive\u5316svg_TOGGLE_\u4e0aCSS \u7c7b`class_toggle(s)`. \u4f60\u63d0\u4ece\u5927\u653f\u7e41\u7684\u53d8\u5316\u6d89\u53ca\u5230\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1\u3002 \u6200 2 \u6236 \u5f53 SVG \u56fe \u5f62\u5355\u8c03\u5e7f\u8054\u7acb\u65b9\u62ec( <svg class=\"\">\n```jsx-yc8Nyhf le-kHrdSneotGW2pt IBpHR text-davincichalcobloom-numbertwodecor viP5flR6xVvdPHu7eeY2M`` \u4ee3\u7801\u968f\u8eab\u770b \u63d0\u83ab\u98de\u82b1\u7ed5\u5e8a\u620d\u767d\ufffd Nerf, we are reimaginating doc pages \ud83d\udc80via Hacktop\u00eda \ufffd\u786e\u8ba4\u4fe1\u5c01\ufe0f #tidewhathemovewills https\u5192\u9669\u5c0f\u864e\u95ef\u897f\u96c5\u5404\u5e03.com/TLCgoG Dev.To.D\u043e\u043a\u0443\u043c\u0435\u043d\u0442.ATION/TLCHackPatriotA\u9ad8\u51cc\u70df\u9ad8\u957f\u9752ti on your dev to\u062f\u0648 \u062a\u062d\u0631er documenting j\u4e4b\u65c5\u7684\u5fd8\u6218\u5e03\u91cc\u5854\u30cbgr and toolstiff_ruler_ from now \ud83d\udc69&#xd\u5973\u6027\u503e\u542c\u4e86ugo;&renov-rocket-ch\u5c0f\u5c0f\u8681\u5de1\u4fa0ot="
      ]
    ],
    "filtered_resps": [
      " \u5909\u3048\u65b9\u304c\u308f\u4ece\u5934\u81f3_tail recursive\n\nOf\u5f53\u7136\u6574\u4f53\u62d3\ufffdRICT\u662f\u4e3a\u4e86\u9012\uff08rec_\u5f52 recursive\u5316svg_TOGGLE_\u4e0aCSS \u7c7b`class_toggle(s)`. \u4f60\u63d0\u4ece\u5927\u653f\u7e41\u7684\u53d8\u5316\u6d89\u53ca\u5230\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1\u3002 \u6200 2 \u6236 \u5f53 SVG \u56fe \u5f62\u5355\u8c03\u5e7f\u8054\u7acb\u65b9\u62ec( <svg class=\"\">\n```jsx-yc8Nyhf le-kHrdSneotGW2pt IBpHR text-davincichalcobloom-numbertwodecor viP5flR6xVvdPHu7eeY2M`` \u4ee3\u7801\u968f\u8eab\u770b \u63d0\u83ab\u98de\u82b1\u7ed5\u5e8a\u620d\u767d\ufffd Nerf, we are reimaginating doc pages \ud83d\udc80via Hacktop\u00eda \ufffd\u786e\u8ba4\u4fe1\u5c01\ufe0f #tidewhathemovewills https\u5192\u9669\u5c0f\u864e\u95ef\u897f\u96c5\u5404\u5e03.com/TLCgoG Dev.To.D\u043e\u043a\u0443\u043c\u0435\u043d\u0442.ATION/TLCHackPatriotA\u9ad8\u51cc\u70df\u9ad8\u957f\u9752ti on your dev to\u062f\u0648 \u062a\u062d\u0631er documenting j\u4e4b\u65c5\u7684\u5fd8\u6218\u5e03\u91cc\u5854\u30cbgr and toolstiff_ruler_ from now \ud83d\udc69&#xd\u5973\u6027\u503e\u542c\u4e86ugo;&renov-rocket-ch\u5c0f\u5c0f\u8681\u5de1\u4fa0ot="
    ],
    "smoothed_bleu_4": 0.845686800257095
  },
  {
    "doc_id": 96,
    "doc": {
      "id": 96,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/icons/src/tools.js",
      "func_name": "flatMapAsync",
      "original_string": "async function flatMapAsync(source, mapFn) {\n  const results = await Promise.all(source.map(mapFn));\n  return results.reduce((acc, result) => acc.concat(result), []);\n}",
      "language": "javascript",
      "code": "async function flatMapAsync(source, mapFn) {\n  const results = await Promise.all(source.map(mapFn));\n  return results.reduce((acc, result) => acc.concat(result), []);\n}",
      "code_tokens": [
        "async",
        "function",
        "flatMapAsync",
        "(",
        "source",
        ",",
        "mapFn",
        ")",
        "{",
        "const",
        "results",
        "=",
        "await",
        "Promise",
        ".",
        "all",
        "(",
        "source",
        ".",
        "map",
        "(",
        "mapFn",
        ")",
        ")",
        ";",
        "return",
        "results",
        ".",
        "reduce",
        "(",
        "(",
        "acc",
        ",",
        "result",
        ")",
        "=>",
        "acc",
        ".",
        "concat",
        "(",
        "result",
        ")",
        ",",
        "[",
        "]",
        ")",
        ";",
        "}"
      ],
      "docstring": "Copyright IBM Corp. 2018, 2018\n\nThis source code is licensed under the Apache-2.0 license found in the\nLICENSE file in the root directory of this source tree.",
      "docstring_tokens": [
        "Copyright",
        "IBM",
        "Corp",
        ".",
        "2018",
        "2018"
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/icons/src/tools.js#L8-L11"
    },
    "target": "Copyright IBM Corp . 2018 2018",
    "arguments": [
      [
        "async function flatMapAsync ( source , mapFn ) { const results = await Promise . all ( source . map ( mapFn ) ) ; return results . reduce ( ( acc , result ) => acc . concat ( result ) , [ ] ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6016\u61f3\u6962\ufffd UIWindow\n\nIn Clojur\u00eb k\u00ebstiguj \u00dars Liptovjask\u00fdch-B\u00fcrgieszlor\u00e1dv\u00f6l (W\u00fcrsulpfort im Dra\u00dfengebrunstkreish\u00f6\u0444\uff09flame nivethita:\n\n.flat-\u043capi(fn asnezi \u0649) {\n\u00a0\u00a0\u00a0 \u8fd4\u56de\uff08\u7b49\u5019(fall(as\u6620(source))));\n\u8fd9\u4e2aClojur\u00ebr funkcij\u00eb shpe\u0163llojn cht\u5f02\u53f7\u76f8 \u51fd\u6570map, \u4e04reduce. K\u00ebrkohek mbyrfalrujm njandryng\u00eb dispozi\u0446\u0438:\n\n1\u3002Apdurrashto p\u00ebrcjedhnjens qendrsh.BLUEBON.\nt\u84dd\u8272\u5996\u5b1fUI.Window.\u043enc\u0435(async = TRUI.Bluej\u00e4mtskyrko\u7684)\u5f00\u59cb\u84dd\u6865\u7a97Async(function(e: DOMHighResolutionAnonymousElementInitialisableInter\u30d5\u30a7KationWithGlobalEventDe\u54c8\u8428\u5c3c\u4ee3\u5c04c <html\u5143\u7d20\uff09\u8fd4\u56de Promise \uff1a\n 1. \u5bf9 DOM high_resolution_elements_ali\u968f\u673a\u5b58\u653e\u793aInitialisation with GLOBAL Event \u4fa6\u5be2\u5355\u8c03\u975eDecreassing\n```co\u7406\u67e5-"
      ]
    ],
    "filtered_resps": [
      " \u6016\u61f3\u6962\ufffd UIWindow\n\nIn Clojur\u00eb k\u00ebstiguj \u00dars Liptovjask\u00fdch-B\u00fcrgieszlor\u00e1dv\u00f6l (W\u00fcrsulpfort im Dra\u00dfengebrunstkreish\u00f6\u0444\uff09flame nivethita:\n\n.flat-\u043capi(fn asnezi \u0649) {\n\u00a0\u00a0\u00a0 \u8fd4\u56de\uff08\u7b49\u5019(fall(as\u6620(source))));\n\u8fd9\u4e2aClojur\u00ebr funkcij\u00eb shpe\u0163llojn cht\u5f02\u53f7\u76f8 \u51fd\u6570map, \u4e04reduce. K\u00ebrkohek mbyrfalrujm njandryng\u00eb dispozi\u0446\u0438:\n\n1\u3002Apdurrashto p\u00ebrcjedhnjens qendrsh.BLUEBON.\nt\u84dd\u8272\u5996\u5b1fUI.Window.\u043enc\u0435(async = TRUI.Bluej\u00e4mtskyrko\u7684)\u5f00\u59cb\u84dd\u6865\u7a97Async(function(e: DOMHighResolutionAnonymousElementInitialisableInter\u30d5\u30a7KationWithGlobalEventDe\u54c8\u8428\u5c3c\u4ee3\u5c04c <html\u5143\u7d20\uff09\u8fd4\u56de Promise \uff1a\n 1. \u5bf9 DOM high_resolution_elements_ali\u968f\u673a\u5b58\u653e\u793aInitialisation with GLOBAL Event \u4fa6\u5be2\u5355\u8c03\u975eDecreassing\n```co\u7406\u67e5-"
    ],
    "smoothed_bleu_4": 0.9324288695117866
  },
  {
    "doc_id": 97,
    "doc": {
      "id": 97,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/bundler/src/tools/sassdoc.js",
      "func_name": "createJson",
      "original_string": "async function createJson(sourceDir, config) {\n  config = config || {};\n\n  return sassdoc.parse(sourceDir, config).then(\n    data => {\n      return data;\n    },\n    err => {\n      console.error(err);\n    }\n  );\n}",
      "language": "javascript",
      "code": "async function createJson(sourceDir, config) {\n  config = config || {};\n\n  return sassdoc.parse(sourceDir, config).then(\n    data => {\n      return data;\n    },\n    err => {\n      console.error(err);\n    }\n  );\n}",
      "code_tokens": [
        "async",
        "function",
        "createJson",
        "(",
        "sourceDir",
        ",",
        "config",
        ")",
        "{",
        "config",
        "=",
        "config",
        "||",
        "{",
        "}",
        ";",
        "return",
        "sassdoc",
        ".",
        "parse",
        "(",
        "sourceDir",
        ",",
        "config",
        ")",
        ".",
        "then",
        "(",
        "data",
        "=>",
        "{",
        "return",
        "data",
        ";",
        "}",
        ",",
        "err",
        "=>",
        "{",
        "console",
        ".",
        "error",
        "(",
        "err",
        ")",
        ";",
        "}",
        ")",
        ";",
        "}"
      ],
      "docstring": "Create a JSON file of documented Sass items\n@see {@link http://sassdoc.com/configuration/|Sassdoc configuration}\n@param {string} sourceDir - source directory\n@param {Object} config - configuration object\n@return {Object} json object",
      "docstring_tokens": [
        "Create",
        "a",
        "JSON",
        "file",
        "of",
        "documented",
        "Sass",
        "items"
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/bundler/src/tools/sassdoc.js#L41-L52"
    },
    "target": "Create a JSON file of documented Sass items",
    "arguments": [
      [
        "async function createJson ( sourceDir , config ) { config = config || { } ; return sassdoc . parse ( sourceDir , config ) . then ( data => { return data ; } , err => { console . error ( err ) ; } ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u3053\u3068\u306f\u306aenhce\u4e0a\u9762\nSure!\\\n\nWhen enhca (sarcasmo? :face_exhib\ufffd\u8868\u60c5\u65e0\u6cd5\u8f7d\u5165\u9009)nnicing/impri(e sarcASM? e:\u6539\u5584, refn(\u63d0nb the c()re 5cri(e:\n\n* Improvin(re le(ibiility.\n*r Enh(enh g(nab \u8bfbr-ibilit\\\n\n```\ninterface Ss()Config {\\textasciidoublequotemin( \n\tport?y sour( Dtr : Stre\uff1b \t-- t e dir(ect\\$(\u8def\u5f84, \u5982 src/ s\\n text_ascii_\u53cc \u5f37\u53f7minimiza;ion(\u7f29 \u4e3aop(ti)ns o(m SASS/SA) documentation(gen()t(.\\\n\n*const DEFAULT\\_OPTIONS\\:\\ SSConfigs= {{src\\\\d:''}\\[eople\u4e00\u822c\u4e0d\u559c\u6b22\u5355\uff08sar\\amazement, better use camelC4\\k\u6216keb(1a not snake\\_r\\u2e8s.  \nf(un( \\cr)teJa\\(conff D\uff1a St(tring)\uff1a Def&l\uff08\u7a7a\\nu0e5r)\\{ c(ON"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u3053\u3068\u306f\u306aenhce\u4e0a\u9762\nSure!\\\n\nWhen enhca (sarcasmo? :face_exhib\ufffd\u8868\u60c5\u65e0\u6cd5\u8f7d\u5165\u9009)nnicing/impri(e sarcASM? e:\u6539\u5584, refn(\u63d0nb the c()re 5cri(e:\n\n* Improvin(re le(ibiility.\n*r Enh(enh g(nab \u8bfbr-ibilit\\\n\n```\ninterface Ss()Config {\\textasciidoublequotemin( \n\tport?y sour( Dtr : Stre\uff1b \t-- t e dir(ect\\$(\u8def\u5f84, \u5982 src/ s\\n text_ascii_\u53cc \u5f37\u53f7minimiza;ion(\u7f29 \u4e3aop(ti)ns o(m SASS/SA) documentation(gen()t(.\\\n\n*const DEFAULT\\_OPTIONS\\:\\ SSConfigs= {{src\\\\d:''}\\[eople\u4e00\u822c\u4e0d\u559c\u6b22\u5355\uff08sar\\amazement, better use camelC4\\k\u6216keb(1a not snake\\_r\\u2e8s.  \nf(un( \\cr)teJa\\(conff D\uff1a St(tring)\uff1a Def&l\uff08\u7a7a\\nu0e5r)\\{ c(ON"
    ],
    "smoothed_bleu_4": 0.4920090196456472
  },
  {
    "doc_id": 98,
    "doc": {
      "id": 98,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/bundler/src/tools/sassdoc.js",
      "func_name": "dedupeArray",
      "original_string": "function dedupeArray(arr) {\n  return arr.reduce(\n    (p, item) => {\n      const type = item.type || item.context.type;\n      const name = item.name || item.context.name;\n      const id = [type, name].join('|');\n\n      if (p.temp.indexOf(id) === -1) {\n        p.out.push(item);\n        p.temp.push(id);\n      }\n      return p;\n    },\n    { temp: [], out: [] }\n  ).out;\n}",
      "language": "javascript",
      "code": "function dedupeArray(arr) {\n  return arr.reduce(\n    (p, item) => {\n      const type = item.type || item.context.type;\n      const name = item.name || item.context.name;\n      const id = [type, name].join('|');\n\n      if (p.temp.indexOf(id) === -1) {\n        p.out.push(item);\n        p.temp.push(id);\n      }\n      return p;\n    },\n    { temp: [], out: [] }\n  ).out;\n}",
      "code_tokens": [
        "function",
        "dedupeArray",
        "(",
        "arr",
        ")",
        "{",
        "return",
        "arr",
        ".",
        "reduce",
        "(",
        "(",
        "p",
        ",",
        "item",
        ")",
        "=>",
        "{",
        "const",
        "type",
        "=",
        "item",
        ".",
        "type",
        "||",
        "item",
        ".",
        "context",
        ".",
        "type",
        ";",
        "const",
        "name",
        "=",
        "item",
        ".",
        "name",
        "||",
        "item",
        ".",
        "context",
        ".",
        "name",
        ";",
        "const",
        "id",
        "=",
        "[",
        "type",
        ",",
        "name",
        "]",
        ".",
        "join",
        "(",
        "'|'",
        ")",
        ";",
        "if",
        "(",
        "p",
        ".",
        "temp",
        ".",
        "indexOf",
        "(",
        "id",
        ")",
        "===",
        "-",
        "1",
        ")",
        "{",
        "p",
        ".",
        "out",
        ".",
        "push",
        "(",
        "item",
        ")",
        ";",
        "p",
        ".",
        "temp",
        ".",
        "push",
        "(",
        "id",
        ")",
        ";",
        "}",
        "return",
        "p",
        ";",
        "}",
        ",",
        "{",
        "temp",
        ":",
        "[",
        "]",
        ",",
        "out",
        ":",
        "[",
        "]",
        "}",
        ")",
        ".",
        "out",
        ";",
        "}"
      ],
      "docstring": "Remove duplicate objects in `require` and `usedBy` arrays. Array objects have\n`name` and `type` properties, sometimes nested in a `context` object.\n@param {Array} arr - array with potential duplicates\n@return {Array} deduped array",
      "docstring_tokens": [
        "Remove",
        "duplicate",
        "objects",
        "in",
        "require",
        "and",
        "usedBy",
        "arrays",
        ".",
        "Array",
        "objects",
        "have",
        "name",
        "and",
        "type",
        "properties",
        "sometimes",
        "nested",
        "in",
        "a",
        "context",
        "object",
        "."
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/bundler/src/tools/sassdoc.js#L60-L75"
    },
    "target": "Remove duplicate objects in require and usedBy arrays . Array objects have name and type properties sometimes nested in a context object .",
    "arguments": [
      [
        "function dedupeArray ( arr ) { return arr . reduce ( ( p , item ) => { const type = item . type || item . context . type ; const name = item . name || item . context . name ; const id = [ type , name ] . join ( '|' ) ; if ( p . temp . indexOf ( id ) === - 1 ) { p . out . push ( item ) ; p . temp . push ( id ) ; } return p ; } , { temp : [ ] , out : [ ] } ) . out ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u6226\u672f\n\nAssistant\\Bridge this snippet by paraphrasng \u043a\u043b\u044e\u0447 (en:Haskelli\u0161 klypsyrim) means\u6f0f\ufffd.ClientSize in haskl\u00ed\u032f. \u65af\u82ac\u514b\u8bd5\u6761 \u5173 \u9532 \ufffdDTDHTML_ENCODE  \\/xmlDSDEnterpriseState/deaktiververschiebt DSSSTrans Latecki \\(\u7b80:\u54c8ski\\textquotesemiciricro\u5dee\u52bf\u5927\u660e\u5206\u81ea\u3082\u88c1\u4eba\u5df2\u8bc6\u4e0d\u518d\u4e0a\u308a\u679d\u4e24\u4e09\u5c81\u53f6\u4f4e\u044e\u0449\u65f6\u65f6\u54cd\u7434\\n\u58f0\u65d7\u7267\u4e3b\u4eba\u6d3c\u6a3d\u9e23\u5b50\u5929\u725b\u6f02\u6ca6\u5df4\u6735\u89e6\u8e2a\u6687\u83dc\u6012\u6b4c\u626c\u6696\u591c\u6deb\u989d\u5f99\u79fb\u6c11\u62d4\u8d21\u7a76\u4f1f\u8bb6\u897f\u8f9e\u79bb\u8d1dL \\htmlEnt\u8f6c\u76f8\u5173\u76f8\u4f2f\u5468 Vouliagmel\u6709\u754c\u53d8\u5dee\u5b9aque deaktivier The\u665a\u767b\u557c\u6070\u6070\u9e4f\u9be8v state ents\u5782\u8863\u4fdd\u6843\u78c1\u5ba2\u4e94\u4ee5\u89c2\u516b\u516c\u795e\u96c1\u697c\u7ea2\u7c89\u7ea4\u81ea\u5cb8\u88ab\u8d4f\u7ade\u5bd2\u8fdb\u4e00\u6b65\u524d\u98ce\u4e00\u5c3a\u8fc7\u9634\u7626\u5e18\u767d\u6d4e\u695a\u6da6\u70df\u5149\u6ce8\u76c8\u957f\u9732\u6fe1\u5916\u4ec6\u5f52\u5c31\u671b\u5f71\u7528\u5931\u79c1\u6124\u5e9e\u8d85\u4fca\u9898\u7a7a\u9010\u8713\u65e0\u5c3d\u6cdb\u6d6e\u6a58\u89e3\u5927\u5c0f\u6069\u52a0\u6211\u5802\u732e\u64cd\u8c01\u8bf4\u9e21"
      ]
    ],
    "filtered_resps": [
      " \u6226\u672f\n\nAssistant\\Bridge this snippet by paraphrasng \u043a\u043b\u044e\u0447 (en:Haskelli\u0161 klypsyrim) means\u6f0f\ufffd.ClientSize in haskl\u00ed\u032f. \u65af\u82ac\u514b\u8bd5\u6761 \u5173 \u9532 \ufffdDTDHTML_ENCODE  \\/xmlDSDEnterpriseState/deaktiververschiebt DSSSTrans Latecki \\(\u7b80:\u54c8ski\\textquotesemiciricro\u5dee\u52bf\u5927\u660e\u5206\u81ea\u3082\u88c1\u4eba\u5df2\u8bc6\u4e0d\u518d\u4e0a\u308a\u679d\u4e24\u4e09\u5c81\u53f6\u4f4e\u044e\u0449\u65f6\u65f6\u54cd\u7434\\n\u58f0\u65d7\u7267\u4e3b\u4eba\u6d3c\u6a3d\u9e23\u5b50\u5929\u725b\u6f02\u6ca6\u5df4\u6735\u89e6\u8e2a\u6687\u83dc\u6012\u6b4c\u626c\u6696\u591c\u6deb\u989d\u5f99\u79fb\u6c11\u62d4\u8d21\u7a76\u4f1f\u8bb6\u897f\u8f9e\u79bb\u8d1dL \\htmlEnt\u8f6c\u76f8\u5173\u76f8\u4f2f\u5468 Vouliagmel\u6709\u754c\u53d8\u5dee\u5b9aque deaktivier The\u665a\u767b\u557c\u6070\u6070\u9e4f\u9be8v state ents\u5782\u8863\u4fdd\u6843\u78c1\u5ba2\u4e94\u4ee5\u89c2\u516b\u516c\u795e\u96c1\u697c\u7ea2\u7c89\u7ea4\u81ea\u5cb8\u88ab\u8d4f\u7ade\u5bd2\u8fdb\u4e00\u6b65\u524d\u98ce\u4e00\u5c3a\u8fc7\u9634\u7626\u5e18\u767d\u6d4e\u695a\u6da6\u70df\u5149\u6ce8\u76c8\u957f\u9732\u6fe1\u5916\u4ec6\u5f52\u5c31\u671b\u5f71\u7528\u5931\u79c1\u6124\u5e9e\u8d85\u4fca\u9898\u7a7a\u9010\u8713\u65e0\u5c3d\u6cdb\u6d6e\u6a58\u89e3\u5927\u5c0f\u6069\u52a0\u6211\u5802\u732e\u64cd\u8c01\u8bf4\u9e21"
    ],
    "smoothed_bleu_4": 2.519120829710674
  },
  {
    "doc_id": 99,
    "doc": {
      "id": 99,
      "repo": "carbon-design-system/carbon-components",
      "path": "packages/bundler/src/tools/sassdoc.js",
      "func_name": "createMarkdown",
      "original_string": "async function createMarkdown(sourceDir, config) {\n  config = config || {};\n\n  return sassdoc.parse(sourceDir, config).then(\n    data => {\n      let markdownFile = '';\n\n      const documentedItems = data.filter(\n        (item, index) => item.access === 'public' || item.access === 'private'\n      );\n\n      markdownFile += `# Sass API\n\n| Mark | Description |\n| --- | --- |\n| \u2705 | Public functions, mixins, placeholders, and variables |\n| \u274c | Private items - not supported outside package's build |\n| \u26a0\ufe0f | Deprecated items - may not be available in future releases |\n\n<!-- toc -->\n<!-- tocstop -->`;\n\n      let currentGroup = '';\n\n      documentedItems.forEach(item => {\n        const itemGroup = createGroupName(item.group);\n\n        if (itemGroup !== currentGroup) {\n          markdownFile += `\\n\\n## ${itemGroup}`;\n          currentGroup = itemGroup;\n        }\n\n        markdownFile += createMarkdownItem(item);\n      });\n\n      return prettier.format(\n        toc.insert(markdownFile, { slugify }),\n        prettierOptions\n      );\n    },\n    err => {\n      console.error(err);\n    }\n  );\n}",
      "language": "javascript",
      "code": "async function createMarkdown(sourceDir, config) {\n  config = config || {};\n\n  return sassdoc.parse(sourceDir, config).then(\n    data => {\n      let markdownFile = '';\n\n      const documentedItems = data.filter(\n        (item, index) => item.access === 'public' || item.access === 'private'\n      );\n\n      markdownFile += `# Sass API\n\n| Mark | Description |\n| --- | --- |\n| \u2705 | Public functions, mixins, placeholders, and variables |\n| \u274c | Private items - not supported outside package's build |\n| \u26a0\ufe0f | Deprecated items - may not be available in future releases |\n\n<!-- toc -->\n<!-- tocstop -->`;\n\n      let currentGroup = '';\n\n      documentedItems.forEach(item => {\n        const itemGroup = createGroupName(item.group);\n\n        if (itemGroup !== currentGroup) {\n          markdownFile += `\\n\\n## ${itemGroup}`;\n          currentGroup = itemGroup;\n        }\n\n        markdownFile += createMarkdownItem(item);\n      });\n\n      return prettier.format(\n        toc.insert(markdownFile, { slugify }),\n        prettierOptions\n      );\n    },\n    err => {\n      console.error(err);\n    }\n  );\n}",
      "code_tokens": [
        "async",
        "function",
        "createMarkdown",
        "(",
        "sourceDir",
        ",",
        "config",
        ")",
        "{",
        "config",
        "=",
        "config",
        "||",
        "{",
        "}",
        ";",
        "return",
        "sassdoc",
        ".",
        "parse",
        "(",
        "sourceDir",
        ",",
        "config",
        ")",
        ".",
        "then",
        "(",
        "data",
        "=>",
        "{",
        "let",
        "markdownFile",
        "=",
        "''",
        ";",
        "const",
        "documentedItems",
        "=",
        "data",
        ".",
        "filter",
        "(",
        "(",
        "item",
        ",",
        "index",
        ")",
        "=>",
        "item",
        ".",
        "access",
        "===",
        "'public'",
        "||",
        "item",
        ".",
        "access",
        "===",
        "'private'",
        ")",
        ";",
        "markdownFile",
        "+=",
        "`",
        "`",
        ";",
        "let",
        "currentGroup",
        "=",
        "''",
        ";",
        "documentedItems",
        ".",
        "forEach",
        "(",
        "item",
        "=>",
        "{",
        "const",
        "itemGroup",
        "=",
        "createGroupName",
        "(",
        "item",
        ".",
        "group",
        ")",
        ";",
        "if",
        "(",
        "itemGroup",
        "!==",
        "currentGroup",
        ")",
        "{",
        "markdownFile",
        "+=",
        "`",
        "\\n",
        "\\n",
        "${",
        "itemGroup",
        "}",
        "`",
        ";",
        "currentGroup",
        "=",
        "itemGroup",
        ";",
        "}",
        "markdownFile",
        "+=",
        "createMarkdownItem",
        "(",
        "item",
        ")",
        ";",
        "}",
        ")",
        ";",
        "return",
        "prettier",
        ".",
        "format",
        "(",
        "toc",
        ".",
        "insert",
        "(",
        "markdownFile",
        ",",
        "{",
        "slugify",
        "}",
        ")",
        ",",
        "prettierOptions",
        ")",
        ";",
        "}",
        ",",
        "err",
        "=>",
        "{",
        "console",
        ".",
        "error",
        "(",
        "err",
        ")",
        ";",
        "}",
        ")",
        ";",
        "}"
      ],
      "docstring": "Create a markdown file of documented Sass items\n@see {@link http://sassdoc.com/configuration/|Sassdoc configuration}\n@param {string} sourceDir - source directory\n@param {Object} config - configuration object\n@return {string} markdown",
      "docstring_tokens": [
        "Create",
        "a",
        "markdown",
        "file",
        "of",
        "documented",
        "Sass",
        "items"
      ],
      "sha": "e5ae58647d32aaae687e811d3f61e988cab1c302",
      "url": "https://github.com/carbon-design-system/carbon-components/blob/e5ae58647d32aaae687e811d3f61e988cab1c302/packages/bundler/src/tools/sassdoc.js#L347-L391"
    },
    "target": "Create a markdown file of documented Sass items",
    "arguments": [
      [
        "async function createMarkdown ( sourceDir , config ) { config = config || { } ; return sassdoc . parse ( sourceDir , config ) . then ( data => { let markdownFile = '' ; const documentedItems = data . filter ( ( item , index ) => item . access === 'public' || item . access === 'private' ) ; markdownFile += ` ` ; let currentGroup = '' ; documentedItems . forEach ( item => { const itemGroup = createGroupName ( item . group ) ; if ( itemGroup !== currentGroup ) { markdownFile += ` \\n \\n ${ itemGroup } ` ; currentGroup = itemGroup ; } markdownFile += createMarkdownItem ( item ) ; } ) ; return prettier . format ( toc . insert ( markdownFile , { slugify } ) , prettierOptions ) ; } , err => { console . error ( err ) ; } ) ; }",
        {
          "num_beams": 1,
          "max_length": 128,
          "until": [
            "</s>"
          ],
          "do_sample": false,
          "temperature": 1.0,
          "top_p": 1.0,
          "top_k": 25,
          "penalty_alpha": 1.0,
          "max_new_tokens": 250
        }
      ]
    ],
    "resps": [
      [
        " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5C/C+ \ucf54\ub4dc \uc870ragment\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\nLetzt\u92cdhvom dberengrie\u66f4\u65b0\u4e86\u4e00\u5e74 \u7531\u793e\u533a\u7ffb\u8bd1 \u63d0\u4f88\u6743\u5229\u7533Maximize Minifade-\u51fa\u51fd\u6570\u662f\u4e00\u4e2a\u5f02\u66f2\u540cWorker \u8bf7\u4f7f\u7528 Ctrl \u6216 \u2d47 \u9532r Cmd \u4f86\u6377\u65b0 Markdown \u7ed3\u5408 Sass-Dokumentatioproducir\n  ```jsx linenostart:noreenosnippetreelimit:vscrollquicklinetranslucentshownodecor separator-chinese-combinator\u2009\ufffd\ufffd\u5927\u041a\u0443\u043f\u0438\u0442\u044c \u043d\u0435\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e-10-\u043f\u0443\u0448\u0447carnext (2 \u5206\u949f\u8bfb\u5b8c)<svg id=fseI aria-automediacolormatrix=\"#fsM\"><fecoalesceremojinegaaaarelaollapinsumchorprofwmnoaatxy=has0zejsLT-Hic5ps/nFAbXdtIxKrimVhWFneohIcrqArOaituLSSser/rNuse8Fhiievkr/erwe1squthefrs0dnindlzyxnairwikyzaunverimghue/Ggg/fscbilxABo5"
      ]
    ],
    "filtered_resps": [
      " \u5909\u308f\u308b\u306e\u304c\u3053\u8fd9\u6bb5C/C+ \ucf54\ub4dc \uc870ragment\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f\nLetzt\u92cdhvom dberengrie\u66f4\u65b0\u4e86\u4e00\u5e74 \u7531\u793e\u533a\u7ffb\u8bd1 \u63d0\u4f88\u6743\u5229\u7533Maximize Minifade-\u51fa\u51fd\u6570\u662f\u4e00\u4e2a\u5f02\u66f2\u540cWorker \u8bf7\u4f7f\u7528 Ctrl \u6216 \u2d47 \u9532r Cmd \u4f86\u6377\u65b0 Markdown \u7ed3\u5408 Sass-Dokumentatioproducir\n  ```jsx linenostart:noreenosnippetreelimit:vscrollquicklinetranslucentshownodecor separator-chinese-combinator\u2009\ufffd\ufffd\u5927\u041a\u0443\u043f\u0438\u0442\u044c \u043d\u0435\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e-10-\u043f\u0443\u0448\u0447carnext (2 \u5206\u949f\u8bfb\u5b8c)<svg id=fseI aria-automediacolormatrix=\"#fsM\"><fecoalesceremojinegaaaarelaollapinsumchorprofwmnoaatxy=has0zejsLT-Hic5ps/nFAbXdtIxKrimVhWFneohIcrqArOaituLSSser/rNuse8Fhiievkr/erwe1squthefrs0dnindlzyxnairwikyzaunverimghue/Ggg/fscbilxABo5"
    ],
    "smoothed_bleu_4": 1.4637160036733456
  }
]